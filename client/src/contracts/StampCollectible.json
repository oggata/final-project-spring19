{
  "contractName": "StampCollectible",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "outstandingBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownedTokensIndex",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxClones",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "owned",
          "type": "bool"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stamps",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "maxClones",
          "type": "uint256"
        },
        {
          "name": "inWild",
          "type": "uint256"
        },
        {
          "name": "clonedFrom",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "MintedStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NewStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "clonedTokenId",
          "type": "uint256"
        }
      ],
      "name": "BurnedStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maxClones",
          "type": "uint256"
        },
        {
          "name": "_priceDepth",
          "type": "uint8"
        },
        {
          "name": "_costMultiplier",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_priceFinney",
          "type": "uint256"
        },
        {
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyStamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "sellStamp",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"sellStamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"outstandingBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownedTokensIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceFinney\",\"type\":\"uint256\"},{\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxClones\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyStamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxClones\",\"type\":\"uint256\"},{\"name\":\"_priceDepth\",\"type\":\"uint8\"},{\"name\":\"_costMultiplier\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"owned\",\"type\":\"bool\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stamps\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"maxClones\",\"type\":\"uint256\"},{\"name\":\"inWild\",\"type\":\"uint256\"},{\"name\":\"clonedFrom\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"MintedStamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewStamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"clonedTokenId\",\"type\":\"uint256\"}],\"name\":\"BurnedStamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"santteegt\",\"details\":\"Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"buyStamp(address,uint256)\":{\"details\":\"Allow to buy a cloned stamp from minted Gen0 NFTs\",\"params\":{\"_tokenId\":\"Gen0 NFT index in storage\"},\"return\":\"uint tokenId corresponding to the cloned NFT\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"initialize(uint256,uint8,uint256,string,string)\":{\"details\":\"Initialize current and derived contracts\",\"params\":{\"_costMultiplier\":\"Cost multiplier to transform NFT price (in finney) to ETH\",\"_maxClones\":\"Maximum number of clones allowed per Gen0 NFT\",\"_name\":\"NFT name\",\"_priceDepth\":\"Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\",\"_symbol\":\"NFT symbol\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(uint256,string)\":{\"details\":\"Mint a Gen0 stamp\",\"params\":{\"_priceFinney\":\"Initial NFT price in finney\",\"_tokenURI\":\"URI of the associated digital collectible art\"},\"return\":\"bool true if Gen0 NFT is minted\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"sellStamp(uint256)\":{\"details\":\"Allow to sell an owned stamp and profit/loose based on current market price\",\"params\":{\"_tokenId\":\"Gen0 NFT index in storage\"},\"return\":\"bool true if processed\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"A Nifties exchange game to incentivize tourism and onboard to crypto\"},\"userdoc\":{\"methods\":{\"mint(uint256,string)\":{\"notice\":\"This function can only be called by the contract owner\"},\"withdraw()\":{\"notice\":\"TODO: to be addded in an upgraded version of the contract\"}},\"notice\":\"NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand\"}},\"settings\":{\"compilationTarget\":{\"/Users/santteegt/Consensys-Academy/Spring-2019/final-project/final-project-spring19/contracts/StampCollectible.sol\":\"StampCollectible\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/santteegt/Consensys-Academy/Spring-2019/final-project/final-project-spring19/contracts/StampCollectible.sol\":{\"keccak256\":\"0x8119daf17cdfe5abe49d2ce27b489d25dd374546831be9f83f5803181b7c1d23\",\"urls\":[\"bzzr://5d3260d930384a2a2d1eb5f19c0a90dcca04a7b126bc675734c07f892181c86a\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x45f044e51e5972c09b8aa3073a5bf3736a57601b77123f4150fb259a53106ace\",\"urls\":[\"bzzr://8c33ae59cde326452091e5f4f345ecae67532b65e2f1a00215800023dec0c8f2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xc864c5aa85255a69cfd4cfa7a6261239bf643ede667b709d093c42a61ae77d98\",\"urls\":[\"bzzr://5e1768341a4425bf1b2c885b2fe5ba40a5765d8e9f4c854db4f003715683273e\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x0c965fac47588d2fd480fa86602359952bc60a12112d079574a104355e412de5\",\"urls\":[\"bzzr://4ca877ed5db72bdb8e2a6885d3dd8e8f564110c639d2bd16f441d227b67a2955\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x73942b4634cf98c75bd0ec934efbca54acf7a4990df73761f0d4d5db6be953c0\",\"urls\":[\"bzzr://0d8ffb7c5b3774071cf8ec26dc05722dcf19f1d48a68d996e04f69061dadb2fa\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x64f884a17f06bbab9bf00a8b3fcfe38c647e6de54f8c33c58bb1afd929d6e40b\",\"urls\":[\"bzzr://3b921a00b951f26ae7eced94d55f4f048ca32f4aff2bebe3f478b185c9f46a80\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xaac86cf0a491293bb11a69006398e4bae74354718185b8530abe9a4fb0de92e2\",\"urls\":[\"bzzr://063d468aa25810f8eb9b3e0ee031cfb1982dd9222dcdbe9f928f15312eb7b580\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xdcc6b3f84583d93ed7a2b8db57d18a03ea7c72188c724b095a6e7f7c4cd6da16\",\"urls\":[\"bzzr://baaa3ad421539e92608cacd2bd906038df41466084eafb3991af2bb2b92e18d0\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x19af40d91f2ff44aec865fa295a18efa10f5d293feed39477dca2d13e7450628\",\"urls\":[\"bzzr://8611907e2938eef10665cb0bdb0c708d05054860c991d24e6dd731bdcca21e3c\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x743dd23f873ebc16f752041a789f768c450fa21b0a95dde9f95ce5e88a249893\",\"urls\":[\"bzzr://f6054720ccf7f7187c6109bf45b75647fef6a15ac836905bf7680eb423cace89\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061447d806100206000396000f3fe60806040526004361061021a5760003560e01c806377097fc811610123578063a22cb465116100ab578063c87b56dd1161006f578063c87b56dd14610f8f578063cbdfa15314611043578063cbf1304d146111c3578063ccd68f3b1461123d578063e985e9c5146112a15761021a565b8063a22cb46514610d3b578063a2309ff814610d98578063aa271e1a14610dc3578063b88d4fde14610e2c578063c4d66de814610f3e5761021a565b80638a337d8a116100f25780638a337d8a14610bb657806395d89b4114610be1578063983b2d5614610c715780639865027514610cc25780639925856e14610cd95761021a565b806377097fc814610a4d5780638129fc1c14610b3757806382dc1ec414610b4e5780638456cb5914610b9f5761021a565b806346fbf68e116101a65780636352211e116101755780636352211e1461089e5780636a6da61e146109195780636ef8d66d1461097e57806370a082311461099557806374e24367146109fa5761021a565b806346fbf68e1461059d5780634cd88b761461060657806350bb4e7f146107655780635c975abb1461086f5761021a565b806323b872dd116101ed57806323b872dd1461040e5780632620aced146104895780633ccfd60b146104dc5780633f4ba83a1461050b57806342842e0e146105225761021a565b806301ffc9a71461023657806306fdde03146102a8578063081812fc14610338578063095ea7b3146103b3575b606660009054906101000a900460ff161561023457600080fd5b005b34801561024257600080fd5b5061028e6004803603602081101561025957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061132a565b604051808215151515815260200191505060405180910390f35b3480156102b457600080fd5b506102bd611392565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102fd5780820151818401526020810190506102e2565b50505050905090810190601f16801561032a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034457600080fd5b506103716004803603602081101561035b57600080fd5b8101908080359060200190929190505050611435565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103bf57600080fd5b5061040c600480360360408110156103d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611484565b005b34801561041a57600080fd5b506104876004803603606081101561043157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c5565b005b34801561049557600080fd5b506104c2600480360360208110156104ac57600080fd5b81019080803590602001909291905050506115e8565b604051808215151515815260200191505060405180910390f35b3480156104e857600080fd5b506104f161199b565b604051808215151515815260200191505060405180910390f35b34801561051757600080fd5b50610520611b78565b005b34801561052e57600080fd5b5061059b6004803603606081101561054557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c23565b005b3480156105a957600080fd5b506105ec600480360360208110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c43565b604051808215151515815260200191505060405180910390f35b34801561061257600080fd5b506107636004803603604081101561062957600080fd5b810190808035906020019064010000000081111561064657600080fd5b82018360208201111561065857600080fd5b8035906020019184600183028401116401000000008311171561067a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106dd57600080fd5b8201836020820111156106ef57600080fd5b8035906020019184600183028401116401000000008311171561071157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c60565b005b34801561077157600080fd5b506108556004803603606081101561078857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156107cf57600080fd5b8201836020820111156107e157600080fd5b8035906020019184600183028401116401000000008311171561080357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611db2565b604051808215151515815260200191505060405180910390f35b34801561087b57600080fd5b50610884611de5565b604051808215151515815260200191505060405180910390f35b3480156108aa57600080fd5b506108d7600480360360208110156108c157600080fd5b8101908080359060200190929190505050611dfc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561092557600080fd5b506109686004803603602081101561093c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e78565b6040518082815260200191505060405180910390f35b34801561098a57600080fd5b50610993611e91565b005b3480156109a157600080fd5b506109e4600480360360208110156109b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e9c565b6040518082815260200191505060405180910390f35b348015610a0657600080fd5b50610a3360048036036020811015610a1d57600080fd5b8101908080359060200190929190505050611f25565b604051808215151515815260200191505060405180910390f35b348015610a5957600080fd5b50610b1d60048036036040811015610a7057600080fd5b810190808035906020019092919080359060200190640100000000811115610a9757600080fd5b820183602082011115610aa957600080fd5b80359060200191846001830284011164010000000083111715610acb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611f46565b604051808215151515815260200191505060405180910390f35b348015610b4357600080fd5b50610b4c6120ab565b005b348015610b5a57600080fd5b50610b9d60048036036020811015610b7157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121c2565b005b348015610bab57600080fd5b50610bb46121e0565b005b348015610bc257600080fd5b50610bcb61228c565b6040518082815260200191505060405180910390f35b348015610bed57600080fd5b50610bf6612293565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c36578082015181840152602081019050610c1b565b50505050905090810190601f168015610c635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c7d57600080fd5b50610cc060048036036020811015610c9457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612336565b005b348015610cce57600080fd5b50610cd7612354565b005b610d2560048036036040811015610cef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061235f565b6040518082815260200191505060405180910390f35b348015610d4757600080fd5b50610d9660048036036040811015610d5e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612804565b005b348015610da457600080fd5b50610dad61293e565b6040518082815260200191505060405180910390f35b348015610dcf57600080fd5b50610e1260048036036020811015610de657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061294b565b604051808215151515815260200191505060405180910390f35b348015610e3857600080fd5b50610f3c60048036036080811015610e4f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610eb657600080fd5b820183602082011115610ec857600080fd5b80359060200191846001830284011164010000000083111715610eea57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612969565b005b348015610f4a57600080fd5b50610f8d60048036036020811015610f6157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061298f565b005b348015610f9b57600080fd5b50610fc860048036036020811015610fb257600080fd5b8101908080359060200190929190505050612aba565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611008578082015181840152602081019050610fed565b50505050905090810190601f1680156110355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561104f57600080fd5b506111c1600480360360a081101561106657600080fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156110a457600080fd5b8201836020820111156110b657600080fd5b803590602001918460018302840111640100000000831117156110d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561113b57600080fd5b82018360208201111561114d57600080fd5b8035906020019184600183028401116401000000008311171561116f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612b82565b005b3480156111cf57600080fd5b5061121c600480360360408110156111e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612dc8565b60405180831515151581526020018281526020019250505060405180910390f35b34801561124957600080fd5b506112766004803603602081101561126057600080fd5b8101908080359060200190929190505050612e07565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156112ad57600080fd5b50611310600480360360408110156112c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e38565b604051808215151515815260200191505060405180910390f35b600060996000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606101028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b5050505050905090565b600061144082612ecc565b61144957600080fd5b60cd600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061148f82611dfc565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156114ca57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061150a57506115098133612e38565b5b61151357600080fd5b8260cd600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6115cf3382612f3e565b6115d857600080fd5b6115e3838383612fd3565b505050565b6000606660009054906101000a900460ff161561160457600080fd5b6101a260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160009054906101000a900460ff166116d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5573657220646f6573206e6f74206f776e2074686973207374616d700000000081525060200191505060405180910390fd5b600061019d60008481526020019081526020016000209050600081600001549050803073ffffffffffffffffffffffffffffffffffffffff16311015611769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018061440e6044913960600191505060405180910390fd5b6117816001836002015461319690919063ffffffff16565b82600201819055506117ab6101a154611799866131b6565b61ffff166132fd90919063ffffffff16565b826000018190555060006101a260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020905060008160000160006101000a81548160ff0219169083151502179055506118328160010154613337565b600061019e60008360010154815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f106852634153ba32c7db4c08ec749c468343ebd82b312b849a331f58a164867a868360010154604051808381526020018281526020019250505060405180910390a261019d600082600101548152602001908152602001600020600080820160009055600182016000905560028201600090556003820160009055505061194b826101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461334c90919063ffffffff16565b6101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019350505050919050565b6000606660009054906101000a900460ff16156119b757600080fd5b60006101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143dd6031913960400191505060405180910390fd5b60006101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f76a3496ed122399b6d8c356545cf5095195fd823dc634be8fcd7b275976679a7826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b6f573d6000803e3d6000fd5b50600191505090565b611b8133611c43565b611b8a57600080fd5b606660009054906101000a900460ff16611ba357600080fd5b6000606660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b611c3e83838360405180602001604052806000815250612969565b505050565b6000611c5982603361336b90919063ffffffff16565b9050919050565b600060019054906101000a900460ff1680611c7f5750611c7e6133fd565b5b80611c9657506000809054906101000a900460ff16155b611ceb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d3b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d4361340e565b611d4c57600080fd5b826101029080519060200190611d63929190614233565b50816101039080519060200190611d7b929190614233565b50611d8c635b5e139f60e01b613425565b8015611dad5760008060016101000a81548160ff0219169083151502179055505b505050565b6000611dbd3361294b565b611dc657600080fd5b611dd084846134c5565b611dda838361360b565b600190509392505050565b6000606660009054906101000a900460ff16905090565b60008060cc600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e6f57600080fd5b80915050919050565b6101a36020528060005260406000206000915090505481565b611e9a3361364a565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ed757600080fd5b611f1e60ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136a4565b9050919050565b61019e6020528060005260406000206000915054906101000a900460ff1681565b6000611f513361294b565b611f5a57600080fd5b606660009054906101000a900460ff1615611f7457600080fd5b611f7c6142b3565b6040518060800160405280611f9d6101a154876132fd90919063ffffffff16565b815260200161019f5481526020016000815260200160008152509050611fc461019c6136b2565b6000611fd161019c6136a4565b90508161019d600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050600161019e600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f51a8f6a84a50f4da36896f422d3ec8416e819501f8ee32dfed22316b472f07978287604051808381526020018281526020019250505060405180910390a26120a1338286611db2565b9250505092915050565b600060019054906101000a900460ff16806120ca57506120c96133fd565b5b806120e157506000809054906101000a900460ff16155b612136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612186576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61218e6136c8565b61219e6380ac58cd60e01b613425565b80156121bf5760008060016101000a81548160ff0219169083151502179055505b50565b6121cb33611c43565b6121d457600080fd5b6121dd816137d7565b50565b6121e933611c43565b6121f257600080fd5b606660009054906101000a900460ff161561220c57600080fd5b6001606660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61019f5481565b60606101038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561232c5780601f106123015761010080835404028352916020019161232c565b820191906000526020600020905b81548152906001019060200180831161230f57829003601f168201915b5050505050905090565b61233f3361294b565b61234857600080fd5b61235181613831565b50565b61235d3361388c565b565b6000606660009054906101000a900460ff161561237b57600080fd5b600061019d6000848152602001908152602001600020905060008160030154146123f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614380602f913960400191505060405180910390fd5b6101a260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160009054906101000a900460ff16156124c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e2074686973207374616d7000000000000081525060200191505060405180910390fd5b80600101546124e26001836002015461334c90919063ffffffff16565b1115612556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d617820636c6f6e65732068617665206265656e20726561636865640000000081525060200191505060405180910390fd5b80600001543410156125d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b6125e86001826002015461334c90919063ffffffff16565b81600201819055506126126101a154612600856131b6565b61ffff166132fd90919063ffffffff16565b816000018190555061262561019c6136b2565b600061263261019c6136a4565b905061263c6142b3565b60405180608001604052808460000154815260200160008152602001600081526020018681525090508061019d600084815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050600161019e600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506126dc86836134c5565b60016101a260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060000160006101000a81548160ff021916908315150217905550816101a260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600101819055508573ffffffffffffffffffffffffffffffffffffffff167f550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be8334604051808381526020018281526020019250505060405180910390a281935050505092915050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561283d57600080fd5b8060cf60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61019c8060000154905081565b60006129628261013761336b90919063ffffffff16565b9050919050565b6129748484846115c5565b612980848484846138e7565b61298957600080fd5b50505050565b600060019054906101000a900460ff16806129ae57506129ad6133fd565b5b806129c557506000809054906101000a900460ff16155b612a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a6a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612a7261340e565b612a7b57600080fd5b612a83613ad0565b612a8c57600080fd5b612a9582613ae7565b8015612ab65760008060016101000a81548160ff0219169083151502179055505b5050565b6060612ac582612ecc565b612ace57600080fd5b61010460008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b765780601f10612b4b57610100808354040283529160200191612b76565b820191906000526020600020905b815481529060010190602001808311612b5957829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680612ba15750612ba06133fd565b5b80612bb857506000809054906101000a900460ff16155b612c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612c5d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b85600081118015612c6f575060ff8111155b612cc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806143496037913960400191505060405180910390fd5b612ccd33613bfe565b612cd561340e565b612ce257612ce16120ab565b5b612cea613ad0565b612cf957612cf88484611c60565b5b612d023361298f565b8661019f81905550856101a060006101000a81548160ff021916908360ff160217905550846101a181905550612d366142b3565b6040518060800160405280600081526020016000815260200160008152602001600081525090508061019d60008081526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015590505050508015612dc05760008060016101000a81548160ff0219169083151502179055505b505050505050565b6101a2602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900460ff16908060010154905082565b61019d6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600060cf60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060cc600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080612f4a83611dfc565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612fb957508373ffffffffffffffffffffffffffffffffffffffff16612fa184611435565b73ffffffffffffffffffffffffffffffffffffffff16145b80612fca5750612fc98185612e38565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612ff382611dfc565b73ffffffffffffffffffffffffffffffffffffffff161461301357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561304d57600080fd5b61305681613d22565b61309d60ce60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613de0565b6130e460ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136b2565b8160cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000828211156131a557600080fd5b600082840390508091505092915050565b60006131c06142b3565b61019d60008481526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050600080905060006101a060009054906101000a900460ff1690505b60008160ff1611156132d05760008160ff16430340905061327b81600160028902016020811061325057fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916613e03565b60086132ba8360028a026020811061328f57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916613e03565b901b178301925050808060019003915050613224565b5081604001516101a060009054906101000a900460ff1660ff1682816132f257fe5b040192505050919050565b6000808314156133105760009050613331565b600082840290508284828161332157fe5b041461332c57600080fd5b809150505b92915050565b61334961334382611dfc565b82613e10565b50565b60008082840190508381101561336157600080fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133a657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b60006134206380ac58cd60e01b61132a565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561345857600080fd5b600160996000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156134ff57600080fd5b61350881612ecc565b1561351257600080fd5b8160cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135ab60ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136b2565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61361482612ecc565b61361d57600080fd5b8061010460008481526020019081526020016000209080519060200190613645929190614233565b505050565b61365e816033613e6f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b6001816000016000828254019250508190555050565b600060019054906101000a900460ff16806136e757506136e66133fd565b5b806136fe57506000809054906101000a900460ff16155b613753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156137a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6137b36301ffc9a760e01b613425565b80156137d45760008060016101000a81548160ff0219169083151502179055505b50565b6137eb816033613f1a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b61384681610137613f1a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6138a181610137613e6f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60006139088473ffffffffffffffffffffffffffffffffffffffff16613fc6565b6139155760019050613ac8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156139f05780820151818401526020810190506139d5565b50505050905090810190601f168015613a1d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613a3f57600080fd5b505af1158015613a53573d6000803e3d6000fd5b505050506040513d6020811015613a6957600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000613ae2635b5e139f60e01b61132a565b905090565b600060019054906101000a900460ff1680613b065750613b056133fd565b5b80613b1d57506000809054906101000a900460ff16155b613b72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613bc2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b613bcb8261294b565b613bd957613bd882613831565b5b8015613bfa5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680613c1d5750613c1c6133fd565b5b80613c3457506000809054906101000a900460ff16155b613c89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613cd9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b613ce282613fd9565b6000606660006101000a81548160ff0219169083151502179055508015613d1e5760008060016101000a81548160ff0219169083151502179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff1660cd600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ddd57600060cd600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613df86001826000015461319690919063ffffffff16565b816000018190555050565b60008160001c9050919050565b613e1a82826140f0565b6000610104600083815260200190815260200160002080546001816001161561010002031660029004905014613e6b5761010460008281526020019081526020016000206000613e6a91906142db565b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613ea957600080fd5b613eb3828261336b565b613ebc57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613f5457600080fd5b613f5e828261336b565b15613f6857600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680613ff85750613ff76133fd565b5b8061400f57506000809054906101000a900460ff16155b614064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156140b4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6140bd82611c43565b6140cb576140ca826137d7565b5b80156140ec5760008060016101000a81548160ff0219169083151502179055505b5050565b8173ffffffffffffffffffffffffffffffffffffffff1661411082611dfc565b73ffffffffffffffffffffffffffffffffffffffff161461413057600080fd5b61413981613d22565b61418060ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613de0565b600060cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061427457805160ff19168380011785556142a2565b828001600101855582156142a2579182015b828111156142a1578251825591602001919060010190614286565b5b5090506142af9190614323565b5090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b50805460018160011615610100020316600290046000825580601f106143015750614320565b601f01602090049060005260206000209081019061431f9190614323565b5b50565b61434591905b80821115614341576000816000905550600101614329565b5090565b9056fe507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f2077697468647261775072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073a165627a7a72305820079f324346924c78d5955ff6fdcb42de9d87cd80c488eaafded88ebb53d686fc0029",
  "deployedBytecode": "0x60806040526004361061021a5760003560e01c806377097fc811610123578063a22cb465116100ab578063c87b56dd1161006f578063c87b56dd14610f8f578063cbdfa15314611043578063cbf1304d146111c3578063ccd68f3b1461123d578063e985e9c5146112a15761021a565b8063a22cb46514610d3b578063a2309ff814610d98578063aa271e1a14610dc3578063b88d4fde14610e2c578063c4d66de814610f3e5761021a565b80638a337d8a116100f25780638a337d8a14610bb657806395d89b4114610be1578063983b2d5614610c715780639865027514610cc25780639925856e14610cd95761021a565b806377097fc814610a4d5780638129fc1c14610b3757806382dc1ec414610b4e5780638456cb5914610b9f5761021a565b806346fbf68e116101a65780636352211e116101755780636352211e1461089e5780636a6da61e146109195780636ef8d66d1461097e57806370a082311461099557806374e24367146109fa5761021a565b806346fbf68e1461059d5780634cd88b761461060657806350bb4e7f146107655780635c975abb1461086f5761021a565b806323b872dd116101ed57806323b872dd1461040e5780632620aced146104895780633ccfd60b146104dc5780633f4ba83a1461050b57806342842e0e146105225761021a565b806301ffc9a71461023657806306fdde03146102a8578063081812fc14610338578063095ea7b3146103b3575b606660009054906101000a900460ff161561023457600080fd5b005b34801561024257600080fd5b5061028e6004803603602081101561025957600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061132a565b604051808215151515815260200191505060405180910390f35b3480156102b457600080fd5b506102bd611392565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102fd5780820151818401526020810190506102e2565b50505050905090810190601f16801561032a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034457600080fd5b506103716004803603602081101561035b57600080fd5b8101908080359060200190929190505050611435565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103bf57600080fd5b5061040c600480360360408110156103d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611484565b005b34801561041a57600080fd5b506104876004803603606081101561043157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c5565b005b34801561049557600080fd5b506104c2600480360360208110156104ac57600080fd5b81019080803590602001909291905050506115e8565b604051808215151515815260200191505060405180910390f35b3480156104e857600080fd5b506104f161199b565b604051808215151515815260200191505060405180910390f35b34801561051757600080fd5b50610520611b78565b005b34801561052e57600080fd5b5061059b6004803603606081101561054557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c23565b005b3480156105a957600080fd5b506105ec600480360360208110156105c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c43565b604051808215151515815260200191505060405180910390f35b34801561061257600080fd5b506107636004803603604081101561062957600080fd5b810190808035906020019064010000000081111561064657600080fd5b82018360208201111561065857600080fd5b8035906020019184600183028401116401000000008311171561067a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106dd57600080fd5b8201836020820111156106ef57600080fd5b8035906020019184600183028401116401000000008311171561071157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c60565b005b34801561077157600080fd5b506108556004803603606081101561078857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156107cf57600080fd5b8201836020820111156107e157600080fd5b8035906020019184600183028401116401000000008311171561080357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611db2565b604051808215151515815260200191505060405180910390f35b34801561087b57600080fd5b50610884611de5565b604051808215151515815260200191505060405180910390f35b3480156108aa57600080fd5b506108d7600480360360208110156108c157600080fd5b8101908080359060200190929190505050611dfc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561092557600080fd5b506109686004803603602081101561093c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e78565b6040518082815260200191505060405180910390f35b34801561098a57600080fd5b50610993611e91565b005b3480156109a157600080fd5b506109e4600480360360208110156109b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e9c565b6040518082815260200191505060405180910390f35b348015610a0657600080fd5b50610a3360048036036020811015610a1d57600080fd5b8101908080359060200190929190505050611f25565b604051808215151515815260200191505060405180910390f35b348015610a5957600080fd5b50610b1d60048036036040811015610a7057600080fd5b810190808035906020019092919080359060200190640100000000811115610a9757600080fd5b820183602082011115610aa957600080fd5b80359060200191846001830284011164010000000083111715610acb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611f46565b604051808215151515815260200191505060405180910390f35b348015610b4357600080fd5b50610b4c6120ab565b005b348015610b5a57600080fd5b50610b9d60048036036020811015610b7157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121c2565b005b348015610bab57600080fd5b50610bb46121e0565b005b348015610bc257600080fd5b50610bcb61228c565b6040518082815260200191505060405180910390f35b348015610bed57600080fd5b50610bf6612293565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c36578082015181840152602081019050610c1b565b50505050905090810190601f168015610c635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c7d57600080fd5b50610cc060048036036020811015610c9457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612336565b005b348015610cce57600080fd5b50610cd7612354565b005b610d2560048036036040811015610cef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061235f565b6040518082815260200191505060405180910390f35b348015610d4757600080fd5b50610d9660048036036040811015610d5e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612804565b005b348015610da457600080fd5b50610dad61293e565b6040518082815260200191505060405180910390f35b348015610dcf57600080fd5b50610e1260048036036020811015610de657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061294b565b604051808215151515815260200191505060405180910390f35b348015610e3857600080fd5b50610f3c60048036036080811015610e4f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610eb657600080fd5b820183602082011115610ec857600080fd5b80359060200191846001830284011164010000000083111715610eea57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612969565b005b348015610f4a57600080fd5b50610f8d60048036036020811015610f6157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061298f565b005b348015610f9b57600080fd5b50610fc860048036036020811015610fb257600080fd5b8101908080359060200190929190505050612aba565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611008578082015181840152602081019050610fed565b50505050905090810190601f1680156110355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561104f57600080fd5b506111c1600480360360a081101561106657600080fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156110a457600080fd5b8201836020820111156110b657600080fd5b803590602001918460018302840111640100000000831117156110d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561113b57600080fd5b82018360208201111561114d57600080fd5b8035906020019184600183028401116401000000008311171561116f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612b82565b005b3480156111cf57600080fd5b5061121c600480360360408110156111e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612dc8565b60405180831515151581526020018281526020019250505060405180910390f35b34801561124957600080fd5b506112766004803603602081101561126057600080fd5b8101908080359060200190929190505050612e07565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156112ad57600080fd5b50611310600480360360408110156112c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e38565b604051808215151515815260200191505060405180910390f35b600060996000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606101028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142b5780601f106114005761010080835404028352916020019161142b565b820191906000526020600020905b81548152906001019060200180831161140e57829003601f168201915b5050505050905090565b600061144082612ecc565b61144957600080fd5b60cd600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061148f82611dfc565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156114ca57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061150a57506115098133612e38565b5b61151357600080fd5b8260cd600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6115cf3382612f3e565b6115d857600080fd5b6115e3838383612fd3565b505050565b6000606660009054906101000a900460ff161561160457600080fd5b6101a260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160009054906101000a900460ff166116d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5573657220646f6573206e6f74206f776e2074686973207374616d700000000081525060200191505060405180910390fd5b600061019d60008481526020019081526020016000209050600081600001549050803073ffffffffffffffffffffffffffffffffffffffff16311015611769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018061440e6044913960600191505060405180910390fd5b6117816001836002015461319690919063ffffffff16565b82600201819055506117ab6101a154611799866131b6565b61ffff166132fd90919063ffffffff16565b826000018190555060006101a260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020905060008160000160006101000a81548160ff0219169083151502179055506118328160010154613337565b600061019e60008360010154815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f106852634153ba32c7db4c08ec749c468343ebd82b312b849a331f58a164867a868360010154604051808381526020018281526020019250505060405180910390a261019d600082600101548152602001908152602001600020600080820160009055600182016000905560028201600090556003820160009055505061194b826101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461334c90919063ffffffff16565b6101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060019350505050919050565b6000606660009054906101000a900460ff16156119b757600080fd5b60006101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611a50576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806143dd6031913960400191505060405180910390fd5b60006101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006101a360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f76a3496ed122399b6d8c356545cf5095195fd823dc634be8fcd7b275976679a7826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b6f573d6000803e3d6000fd5b50600191505090565b611b8133611c43565b611b8a57600080fd5b606660009054906101000a900460ff16611ba357600080fd5b6000606660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b611c3e83838360405180602001604052806000815250612969565b505050565b6000611c5982603361336b90919063ffffffff16565b9050919050565b600060019054906101000a900460ff1680611c7f5750611c7e6133fd565b5b80611c9657506000809054906101000a900460ff16155b611ceb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d3b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d4361340e565b611d4c57600080fd5b826101029080519060200190611d63929190614233565b50816101039080519060200190611d7b929190614233565b50611d8c635b5e139f60e01b613425565b8015611dad5760008060016101000a81548160ff0219169083151502179055505b505050565b6000611dbd3361294b565b611dc657600080fd5b611dd084846134c5565b611dda838361360b565b600190509392505050565b6000606660009054906101000a900460ff16905090565b60008060cc600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611e6f57600080fd5b80915050919050565b6101a36020528060005260406000206000915090505481565b611e9a3361364a565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ed757600080fd5b611f1e60ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136a4565b9050919050565b61019e6020528060005260406000206000915054906101000a900460ff1681565b6000611f513361294b565b611f5a57600080fd5b606660009054906101000a900460ff1615611f7457600080fd5b611f7c6142b3565b6040518060800160405280611f9d6101a154876132fd90919063ffffffff16565b815260200161019f5481526020016000815260200160008152509050611fc461019c6136b2565b6000611fd161019c6136a4565b90508161019d600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050600161019e600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f51a8f6a84a50f4da36896f422d3ec8416e819501f8ee32dfed22316b472f07978287604051808381526020018281526020019250505060405180910390a26120a1338286611db2565b9250505092915050565b600060019054906101000a900460ff16806120ca57506120c96133fd565b5b806120e157506000809054906101000a900460ff16155b612136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612186576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61218e6136c8565b61219e6380ac58cd60e01b613425565b80156121bf5760008060016101000a81548160ff0219169083151502179055505b50565b6121cb33611c43565b6121d457600080fd5b6121dd816137d7565b50565b6121e933611c43565b6121f257600080fd5b606660009054906101000a900460ff161561220c57600080fd5b6001606660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b61019f5481565b60606101038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561232c5780601f106123015761010080835404028352916020019161232c565b820191906000526020600020905b81548152906001019060200180831161230f57829003601f168201915b5050505050905090565b61233f3361294b565b61234857600080fd5b61235181613831565b50565b61235d3361388c565b565b6000606660009054906101000a900460ff161561237b57600080fd5b600061019d6000848152602001908152602001600020905060008160030154146123f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180614380602f913960400191505060405180910390fd5b6101a260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160009054906101000a900460ff16156124c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e2074686973207374616d7000000000000081525060200191505060405180910390fd5b80600101546124e26001836002015461334c90919063ffffffff16565b1115612556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d617820636c6f6e65732068617665206265656e20726561636865640000000081525060200191505060405180910390fd5b80600001543410156125d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b6125e86001826002015461334c90919063ffffffff16565b81600201819055506126126101a154612600856131b6565b61ffff166132fd90919063ffffffff16565b816000018190555061262561019c6136b2565b600061263261019c6136a4565b905061263c6142b3565b60405180608001604052808460000154815260200160008152602001600081526020018681525090508061019d600084815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050600161019e600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506126dc86836134c5565b60016101a260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060000160006101000a81548160ff021916908315150217905550816101a260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600101819055508573ffffffffffffffffffffffffffffffffffffffff167f550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be8334604051808381526020018281526020019250505060405180910390a281935050505092915050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561283d57600080fd5b8060cf60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61019c8060000154905081565b60006129628261013761336b90919063ffffffff16565b9050919050565b6129748484846115c5565b612980848484846138e7565b61298957600080fd5b50505050565b600060019054906101000a900460ff16806129ae57506129ad6133fd565b5b806129c557506000809054906101000a900460ff16155b612a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a6a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612a7261340e565b612a7b57600080fd5b612a83613ad0565b612a8c57600080fd5b612a9582613ae7565b8015612ab65760008060016101000a81548160ff0219169083151502179055505b5050565b6060612ac582612ecc565b612ace57600080fd5b61010460008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b765780601f10612b4b57610100808354040283529160200191612b76565b820191906000526020600020905b815481529060010190602001808311612b5957829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680612ba15750612ba06133fd565b5b80612bb857506000809054906101000a900460ff16155b612c0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612c5d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b85600081118015612c6f575060ff8111155b612cc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806143496037913960400191505060405180910390fd5b612ccd33613bfe565b612cd561340e565b612ce257612ce16120ab565b5b612cea613ad0565b612cf957612cf88484611c60565b5b612d023361298f565b8661019f81905550856101a060006101000a81548160ff021916908360ff160217905550846101a181905550612d366142b3565b6040518060800160405280600081526020016000815260200160008152602001600081525090508061019d60008081526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015590505050508015612dc05760008060016101000a81548160ff0219169083151502179055505b505050505050565b6101a2602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900460ff16908060010154905082565b61019d6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600060cf60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060cc600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080612f4a83611dfc565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612fb957508373ffffffffffffffffffffffffffffffffffffffff16612fa184611435565b73ffffffffffffffffffffffffffffffffffffffff16145b80612fca5750612fc98185612e38565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612ff382611dfc565b73ffffffffffffffffffffffffffffffffffffffff161461301357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561304d57600080fd5b61305681613d22565b61309d60ce60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613de0565b6130e460ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136b2565b8160cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000828211156131a557600080fd5b600082840390508091505092915050565b60006131c06142b3565b61019d60008481526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250509050600080905060006101a060009054906101000a900460ff1690505b60008160ff1611156132d05760008160ff16430340905061327b81600160028902016020811061325057fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916613e03565b60086132ba8360028a026020811061328f57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916613e03565b901b178301925050808060019003915050613224565b5081604001516101a060009054906101000a900460ff1660ff1682816132f257fe5b040192505050919050565b6000808314156133105760009050613331565b600082840290508284828161332157fe5b041461332c57600080fd5b809150505b92915050565b61334961334382611dfc565b82613e10565b50565b60008082840190508381101561336157600080fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133a657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b60006134206380ac58cd60e01b61132a565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561345857600080fd5b600160996000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156134ff57600080fd5b61350881612ecc565b1561351257600080fd5b8160cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135ab60ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136b2565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b61361482612ecc565b61361d57600080fd5b8061010460008481526020019081526020016000209080519060200190613645929190614233565b505050565b61365e816033613e6f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b6001816000016000828254019250508190555050565b600060019054906101000a900460ff16806136e757506136e66133fd565b5b806136fe57506000809054906101000a900460ff16155b613753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156137a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6137b36301ffc9a760e01b613425565b80156137d45760008060016101000a81548160ff0219169083151502179055505b50565b6137eb816033613f1a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b61384681610137613f1a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6138a181610137613e6f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60006139088473ffffffffffffffffffffffffffffffffffffffff16613fc6565b6139155760019050613ac8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156139f05780820151818401526020810190506139d5565b50505050905090810190601f168015613a1d5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015613a3f57600080fd5b505af1158015613a53573d6000803e3d6000fd5b505050506040513d6020811015613a6957600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000613ae2635b5e139f60e01b61132a565b905090565b600060019054906101000a900460ff1680613b065750613b056133fd565b5b80613b1d57506000809054906101000a900460ff16155b613b72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613bc2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b613bcb8261294b565b613bd957613bd882613831565b5b8015613bfa5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680613c1d5750613c1c6133fd565b5b80613c3457506000809054906101000a900460ff16155b613c89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613cd9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b613ce282613fd9565b6000606660006101000a81548160ff0219169083151502179055508015613d1e5760008060016101000a81548160ff0219169083151502179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff1660cd600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614613ddd57600060cd600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b613df86001826000015461319690919063ffffffff16565b816000018190555050565b60008160001c9050919050565b613e1a82826140f0565b6000610104600083815260200190815260200160002080546001816001161561010002031660029004905014613e6b5761010460008281526020019081526020016000206000613e6a91906142db565b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613ea957600080fd5b613eb3828261336b565b613ebc57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613f5457600080fd5b613f5e828261336b565b15613f6857600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680613ff85750613ff76133fd565b5b8061400f57506000809054906101000a900460ff16155b614064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806143af602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156140b4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6140bd82611c43565b6140cb576140ca826137d7565b5b80156140ec5760008060016101000a81548160ff0219169083151502179055505b5050565b8173ffffffffffffffffffffffffffffffffffffffff1661411082611dfc565b73ffffffffffffffffffffffffffffffffffffffff161461413057600080fd5b61413981613d22565b61418060ce60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613de0565b600060cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061427457805160ff19168380011785556142a2565b828001600101855582156142a2579182015b828111156142a1578251825591602001919060010190614286565b5b5090506142af9190614323565b5090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b50805460018160011615610100020316600290046000825580601f106143015750614320565b601f01602090049060005260206000209081019061431f9190614323565b5b50565b61434591905b80821115614341576000816000905550600101614329565b5090565b9056fe507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f2077697468647261775072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073a165627a7a72305820079f324346924c78d5955ff6fdcb42de9d87cd80c488eaafded88ebb53d686fc0029",
  "sourceMap": "1018:10192:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1018:10192:2;;;;;;;",
  "deployedSourceMap": "1018:10192:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:7:10;;;;;;;;;;;835:8;827:17;;;;;;1018:10192:2;870:131:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:131:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;870:131:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1304:83:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:83:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1304:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4027:151:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4027:151:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4027:151:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3450:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3450:292:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3450:292:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5583:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5583:180:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5583:180:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8646:1268:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8646:1268:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8646:1268:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10844:364;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10844:364:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1323:115:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:115:10;;;:::i;:::-;;6396:132:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6396:132:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6396:132:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;548:107:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:107:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;548:107:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;741:321:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;741:321:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;741:321:13;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;741:321:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;741:321:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;741:321:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;741:321:13;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;741:321:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;741:321:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;741:321:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;741:321:13;;;;;;;;;;;;;;;:::i;:::-;;840:209:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:209:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;840:209:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;840:209:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;840:209:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;840:209:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;840:209:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;607:76:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:76:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2852:177:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2852:177:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2852:177:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10348:51:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10348:51:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10348:51:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:75:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:75:5;;;:::i;:::-;;2474:160:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2474:160:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2474:160:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1739:49:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1739:49:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1739:49:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6293:620;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6293:620:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6293:620:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6293:620:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6293:620:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6293:620:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6293:620:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1937:205:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1937:205:12;;;:::i;:::-;;661:90:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:90:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;661:90:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;1120:113:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1120:113:10;;;:::i;:::-;;1855:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1855:24:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1495:87:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1495:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1495:87:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:90:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;661:90:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;757:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:75:4;;;:::i;:::-;;7102:1351:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7102:1351:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4470:213:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4470:213:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4470:213:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1582:35:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1582:35:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;548:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7233:211:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7233:211:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7233:211:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7233:211:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7233:211:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7233:211:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7233:211:12;;;;;;;;;;;;;;;:::i;:::-;;338:203:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;338:203:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;338:203:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;1781:151:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1781:151:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1781:151:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1781:151:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4069:864:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4069:864:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4069:864:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4069:864:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4069:864:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4069:864:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4069:864:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4069:864:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4069:864:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4069:864:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4069:864:2;;;;;;;;;;;;;;;:::i;:::-;;2366:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2366:69:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2366:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1685:40:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1685:40:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5004:145:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5004:145:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5004:145:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;870:131:8;938:4;961:20;:33;982:11;961:33;;;;;;;;;;;;;;;;;;;;;;;;;;;954:40;;870:131;;;:::o;1304:83:13:-;1343:13;1375:5;1368:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:83;:::o;4027:151:12:-;4086:7;4113:16;4121:7;4113;:16::i;:::-;4105:25;;;;;;4147:15;:24;4163:7;4147:24;;;;;;;;;;;;;;;;;;;;;4140:31;;4027:151;;;:::o;3450:292::-;3513:13;3529:16;3537:7;3529;:16::i;:::-;3513:32;;3569:5;3563:11;;:2;:11;;;;3555:20;;;;;;3607:5;3593:19;;:10;:19;;;:58;;;;3616:35;3633:5;3640:10;3616:16;:35::i;:::-;3593:58;3585:67;;;;;;3690:2;3663:15;:24;3679:7;3663:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3727:7;3723:2;3707:28;;3716:5;3707:28;;;;;;;;;;;;3450:292;;;:::o;5583:180::-;5673:39;5692:10;5704:7;5673:18;:39::i;:::-;5665:48;;;;;;5724:32;5738:4;5744:2;5748:7;5724:13;:32::i;:::-;5583:180;;;:::o;8646:1268:2:-;8729:4;836:7:10;;;;;;;;;;;835:8;827:17;;;;;;8757:8:2;:20;8766:10;8757:20;;;;;;;;;;;;;;;:30;8778:8;8757:30;;;;;;;;;;;:36;;;;;;;;;;;;8749:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8840:19;8862:6;:16;8869:8;8862:16;;;;;;;;;;;8840:38;;8892:14;8909:5;:11;;;8892:28;;8967:6;8950:4;8942:21;;;:31;;8934:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9075:19;9092:1;9075:5;:12;;;:16;;:19;;;;:::i;:::-;9060:5;:12;;:34;;;;9122:50;9157:14;;9130:21;9142:8;9130:11;:21::i;:::-;9122:30;;:34;;:50;;;;:::i;:::-;9108:5;:11;;:64;;;;9187:31;9221:8;:20;9230:10;9221:20;;;;;;;;;;;;;;;:30;9242:8;9221:30;;;;;;;;;;;9187:64;;9285:5;9265:11;:17;;;:25;;;;;;;;;;;;;;;;;;9331:26;9337:11;:19;;;9331:5;:26::i;:::-;9411:5;9371:16;:37;9388:11;:19;;;9371:37;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;9448:10;9436:54;;;9460:8;9470:11;:19;;;9436:54;;;;;;;;;;;;;;;;;;;;;;;;9511:6;:27;9518:11;:19;;;9511:27;;;;;;;;;;;;9504:34;;;;;;;;;;;;;;;;;;;;;;;;;;9840:42;9875:6;9840:18;:30;9859:10;9840:30;;;;;;;;;;;;;;;;:34;;:42;;;;:::i;:::-;9807:18;:30;9826:10;9807:30;;;;;;;;;;;;;;;:75;;;;9903:4;9896:11;;;;;8646:1268;;;:::o;10844:364::-;10894:4;836:7:10;;;;;;;;;;;835:8;827:17;;;;;;10948:1:2;10915:18;:30;10934:10;10915:30;;;;;;;;;;;;;;;;:34;10907:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11010:11;11024:18;:30;11043:10;11024:30;;;;;;;;;;;;;;;;11010:44;;11094:1;11061:18;:30;11080:10;11061:30;;;;;;;;;;;;;;;:34;;;;11127:10;11110:36;;;11139:6;11110:36;;;;;;;;;;;;;;;;;;11156:10;:19;;:27;11176:6;11156:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11156:27:2;11197:4;11190:11;;;10844:364;:::o;1323:115:10:-;503:20:5;512:10;503:8;:20::i;:::-;495:29;;;;;;1007:7:10;;;;;;;;;;;999:16;;;;;;1391:5;1381:7;;:15;;;;;;;;;;;;;;;;;;1411:20;1420:10;1411:20;;;;;;;;;;;;;;;;;;;;;;1323:115::o;6396:132:12:-;6482:39;6499:4;6505:2;6509:7;6482:39;;;;;;;;;;;;:16;:39::i;:::-;6396:132;;;:::o;548:107:5:-;604:4;627:21;640:7;627:8;:12;;:21;;;;:::i;:::-;620:28;;548:107;;;:::o;741:321:13:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;840:28:13;:26;:28::i;:::-;832:37;;;;;;888:4;880:5;:12;;;;;;;;;;;;:::i;:::-;;912:6;902:7;:16;;;;;;;;;;;;:::i;:::-;;1006:49;504:10;1025:29;;1006:18;:49::i;:::-;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:321:13;;;:::o;840:209:14:-;946:4;503:20:4;512:10;503:8;:20::i;:::-;495:29;;;;;;962:18:14;968:2;972:7;962:5;:18::i;:::-;990:31;1003:7;1012:8;990:12;:31::i;:::-;1038:4;1031:11;;840:209;;;;;:::o;607:76:10:-;646:4;669:7;;;;;;;;;;;662:14;;607:76;:::o;2852:177:12:-;2907:7;2926:13;2942:11;:20;2954:7;2942:20;;;;;;;;;;;;;;;;;;;;;2926:36;;2997:1;2980:19;;:5;:19;;;;2972:28;;;;;;3017:5;3010:12;;;2852:177;;;:::o;10348:51:2:-;;;;;;;;;;;;;;;;;:::o;757:75:5:-;800:25;814:10;800:13;:25::i;:::-;757:75::o;2474:160:12:-;2529:7;2573:1;2556:19;;:5;:19;;;;2548:28;;;;;;2593:34;:17;:24;2611:5;2593:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2586:41;;2474:160;;;:::o;1739:49:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;6293:620::-;6419:4;503:20:4;512:10;503:8;:20::i;:::-;495:29;;;;;;836:7:10;;;;;;;;;;;835:8;827:17;;;;;;6435:24:2;;:::i;:::-;6462:154;;;;;;;;6489:32;6506:14;;6489:12;:16;;:32;;;;:::i;:::-;6462:154;;;;6546:9;;6462:154;;;;6577:1;6462:154;;;;6604:1;6462:154;;;6435:181;;6626:23;:11;:21;:23::i;:::-;6659:15;6677:21;:11;:19;:21::i;:::-;6659:39;;6726:11;6708:6;:15;6715:7;6708:15;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6775:4;6747:16;:25;6764:7;6747:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;6806:10;6794:46;;;6818:7;6827:12;6794:46;;;;;;;;;;;;;;;;;;;;;;;;6858:48;6875:10;6887:7;6896:9;6858:16;:48::i;:::-;6851:55;;;;6293:620;;;;:::o;1937:205:12:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1988:19:12;:17;:19::i;:::-;2095:40;1303:10;2114:20;;2095:18;:40::i;:::-;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1937:205:12;:::o;661:90:5:-;503:20;512:10;503:8;:20::i;:::-;495:29;;;;;;725:19;736:7;725:10;:19::i;:::-;661:90;:::o;1120:113:10:-;503:20:5;512:10;503:8;:20::i;:::-;495:29;;;;;;836:7:10;;;;;;;;;;;835:8;827:17;;;;;;1189:4;1179:7;;:14;;;;;;;;;;;;;;;;;;1208:18;1215:10;1208:18;;;;;;;;;;;;;;;;;;;;;;1120:113::o;1855:24:2:-;;;;:::o;1495:87:13:-;1536:13;1568:7;1561:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1495:87;:::o;661:90:4:-;503:20;512:10;503:8;:20::i;:::-;495:29;;;;;;725:19;736:7;725:10;:19::i;:::-;661:90;:::o;757:75::-;800:25;814:10;800:13;:25::i;:::-;757:75::o;7102:1351:2:-;7208:4;836:7:10;;;;;;;;;;;835:8;827:17;;;;;;7228:19:2;7250:6;:16;7257:8;7250:16;;;;;;;;;;;7228:38;;7308:1;7288:5;:16;;;:21;7280:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7384:8;:16;7393:6;7384:16;;;;;;;;;;;;;;;:26;7401:8;7384:26;;;;;;;;;;;:32;;;;;;;;;;;;7383:33;7375:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7492:5;:15;;;7469:19;7486:1;7469:5;:12;;;:16;;:19;;;;:::i;:::-;:38;;7461:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7575:5;:11;;;7562:9;:24;;7554:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7636:19;7653:1;7636:5;:12;;;:16;;:19;;;;:::i;:::-;7621:5;:12;;:34;;;;7683:50;7718:14;;7691:21;7703:8;7691:11;:21::i;:::-;7683:30;;:34;;:50;;;;:::i;:::-;7669:5;:11;;:64;;;;7795:23;:11;:21;:23::i;:::-;7832:12;7847:21;:11;:19;:21::i;:::-;7832:36;;7882:24;;:::i;:::-;7909:152;;;;;;;;7940:5;:11;;;7909:152;;;;7980:1;7909:152;;;;8007:1;7909:152;;;;8038:8;7909:152;;;7882:179;;8093:11;8075:6;:15;8082:7;8075:15;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8146:4;8118:16;:25;8135:7;8118:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;8164:22;8170:6;8178:7;8164:5;:22::i;:::-;8235:4;8200:8;:16;8209:6;8200:16;;;;;;;;;;;;;;;:26;8217:8;8200:26;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;8290:7;8253:8;:16;8262:6;8253:16;;;;;;;;;;;;;;;:26;8270:8;8253:26;;;;;;;;;;;:34;;:44;;;;8391:6;8382:36;;;8399:7;8408:9;8382:36;;;;;;;;;;;;;;;;;;;;;;;;8439:7;8432:14;;;;;7102:1351;;;;:::o;4470:213:12:-;4555:10;4549:16;;:2;:16;;;;4541:25;;;;;;4613:8;4576:18;:30;4595:10;4576:30;;;;;;;;;;;;;;;:34;4607:2;4576:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4663:2;4636:40;;4651:10;4636:40;;;4667:8;4636:40;;;;;;;;;;;;;;;;;;;;;;4470:213;;:::o;1582:35:2:-;;;;;;;;;:::o;548:107:4:-;604:4;627:21;640:7;627:8;:12;;:21;;;;:::i;:::-;620:28;;548:107;;;:::o;7233:211:12:-;7339:31;7352:4;7358:2;7362:7;7339:12;:31::i;:::-;7388:48;7411:4;7417:2;7421:7;7430:5;7388:22;:48::i;:::-;7380:57;;;;;;7233:211;;;;:::o;338:203:14:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;411:28:14;:26;:28::i;:::-;403:37;;;;;;458:36;:34;:36::i;:::-;450:45;;;;;;505:29;527:6;505:21;:29::i;:::-;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;338:203:14;;:::o;1781:151:13:-;1839:13;1872:16;1880:7;1872;:16::i;:::-;1864:25;;;;;;1906:10;:19;1917:7;1906:19;;;;;;;;;;;1899:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:151;;;:::o;4069:864:2:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;4317:10:2;2620:1;2611:6;:10;:27;;;;;2635:3;2625:6;:13;;2611:27;2603:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4344:31;4364:10;4344:19;:31::i;:::-;4393:28;:26;:28::i;:::-;4389:86;;4441:19;:17;:19::i;:::-;4389:86;4492:36;:34;:36::i;:::-;4488:116;;4548:41;4574:5;4581:7;4548:25;:41::i;:::-;4488:116;4617:45;4651:10;4617:33;:45::i;:::-;4689:10;4677:9;:22;;;;4726:11;4713:10;;:24;;;;;;;;;;;;;;;;;;4768:15;4751:14;:32;;;;4798:19;;:::i;:::-;4820:74;;;;;;;;4851:1;4820:74;;;;4865:1;4820:74;;;;4876:1;4820:74;;;;4891:1;4820:74;;;4798:96;;4920:6;4908;:9;4915:1;4908:9;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:1;1256::19;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;4069:864:2;;;;;;:::o;2366:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1685:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5004:145:12:-;5084:4;5107:18;:25;5126:5;5107:25;;;;;;;;;;;;;;;:35;5133:8;5107:35;;;;;;;;;;;;;;;;;;;;;;;;;5100:42;;5004:145;;;;:::o;7638:152::-;7695:4;7711:13;7727:11;:20;7739:7;7727:20;;;;;;;;;;;;;;;;;;;;;7711:36;;7781:1;7764:19;;:5;:19;;;;7757:26;;;7638:152;;;:::o;8150:246::-;8235:4;8251:13;8267:16;8275:7;8267;:16::i;:::-;8251:32;;8312:5;8301:16;;:7;:16;;;:51;;;;8345:7;8321:31;;:20;8333:7;8321:11;:20::i;:::-;:31;;;8301:51;:87;;;;8356:32;8373:5;8380:7;8356:16;:32::i;:::-;8301:87;8293:96;;;8150:246;;;;:::o;10098:362::-;10211:4;10191:24;;:16;10199:7;10191;:16::i;:::-;:24;;;10183:33;;;;;;10248:1;10234:16;;:2;:16;;;;10226:25;;;;;;10262:23;10277:7;10262:14;:23::i;:::-;10296:35;:17;:23;10314:4;10296:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10341:33;:17;:21;10359:2;10341:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10408:2;10385:11;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10098:362;;;:::o;1211:145:11:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;5329:426:2:-;5389:6;5407:18;;:::i;:::-;5428:6;:14;5435:6;5428:14;;;;;;;;;;;5407:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5452:9;5464:1;5452:13;;5479:11;5493:10;;;;;;;;;;;5479:24;;5475:212;5513:1;5505:5;:9;;;5475:212;;;5538:17;5581:5;5568:18;;:12;:18;5558:29;5538:49;;5642:34;5650:9;5673:1;5669;5660:6;:10;:14;5650:25;;;;;;;;;;5642:34;;;:7;:34::i;:::-;5638:1;5604:30;5612:9;5631:1;5622:6;:10;5612:21;;;;;;;;;;5604:30;;;:7;:30::i;:::-;:35;;:72;5599:77;;;;5475:212;5517:7;;;;;;;;5475:212;;;;5735:5;:12;;;5714:10;;;;;;;;;;;5710:14;;:1;:14;;;;;;5703:45;5696:52;;;;5329:426;;;:::o;231:421:11:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;:10;607:19;;;;;;644:1;637:8;;;231:421;;;;;:::o;9633:90:12:-;9684:32;9690:16;9698:7;9690;:16::i;:::-;9708:7;9684:5;:32::i;:::-;9633:90;:::o;1439:145:11:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;786:162:3:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1409:467:19:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;2148:123:12:-;2202:4;2225:39;1303:10;2243:20;;2225:17;:39::i;:::-;2218:46;;2148:123;:::o;1080:158:8:-;1170:10;1155:25;;:11;:25;;;;;1147:34;;;;;;1227:4;1191:20;:33;1212:11;1191:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1080:158;:::o;8639:259:12:-;8724:1;8710:16;;:2;:16;;;;8702:25;;;;;;8746:16;8754:7;8746;:16::i;:::-;8745:17;8737:26;;;;;;8797:2;8774:11;:20;8786:7;8774:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8809:33;:17;:21;8827:2;8809:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8883:7;8879:2;8858:33;;8875:1;8858:33;;;;;;;;;;;;8639:259;;:::o;2169:144:13:-;2254:16;2262:7;2254;:16::i;:::-;2246:25;;;;;;2303:3;2281:10;:19;2292:7;2281:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;2169:144;;:::o;963:127:5:-;1022:24;1038:7;1022:8;:15;;:24;;;;:::i;:::-;1075:7;1061:22;;;;;;;;;;;;963:127;:::o;1062:112:7:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;681:98:8:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;732:40:8;312:10;751:20;;732:18;:40::i;:::-;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;681:98:8;:::o;838:119:5:-;894:21;907:7;894:8;:12;;:21;;;;:::i;:::-;942:7;930:20;;;;;;;;;;;;838:119;:::o;::4:-;894:21;907:7;894:8;:12;;:21;;;;:::i;:::-;942:7;930:20;;;;;;;;;;;;838:119;:::o;963:127::-;1022:24;1038:7;1022:8;:15;;:24;;;;:::i;:::-;1075:7;1061:22;;;;;;;;;;;;963:127;:::o;10988:347:12:-;11109:4;11134:15;:2;:13;;;:15::i;:::-;11129:58;;11172:4;11165:11;;;;11129:58;11197:13;11229:2;11213:36;;;11250:10;11262:4;11268:7;11277:5;11213:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11213:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11213:70:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11213:70:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11213:70:12;;;;;;;;;;;;;;;;11197:86;;789:10;11311:16;;11301:26;;;:6;:26;;;;11293:35;;;10988:347;;;;;;;:::o;1068:132:13:-;1122:4;1145:48;504:10;1163:29;;1145:17;:48::i;:::-;1138:55;;1068:132;:::o;320:137:4:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;390:16:4;399:6;390:8;:16::i;:::-;385:66;;422:18;433:6;422:10;:18::i;:::-;385:66;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;320:137:4;;:::o;394:127:10:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;459:29:10;481:6;459:21;:29::i;:::-;509:5;499:7;;:15;;;;;;;;;;;;;;;;;;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;394:127:10;;:::o;11496:171:12:-;11595:1;11559:38;;:15;:24;11575:7;11559:24;;;;;;;;;;;;;;;;;;;;;:38;;;11555:106;;11648:1;11613:15;:24;11629:7;11613:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11555:106;11496:171;:::o;1275:108:7:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;5911:90:2:-;5963:4;5991:2;5986:8;;5979:15;;5911:90;;;:::o;2603:240:13:-;2669:27;2681:5;2688:7;2669:11;:27::i;:::-;2783:1;2752:10;:19;2763:7;2752:19;;;;;;;;;;;2746:33;;;;;;;;;;;;;;;;:38;2742:95;;2807:10;:19;2818:7;2807:19;;;;;;;;;;;;2800:26;;;;:::i;:::-;2742:95;2603:240;;:::o;514:184:3:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;463:616:18:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;320:137:5:-;1024:12:19;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;390:16:5;399:6;390:8;:16::i;:::-;385:66;;422:18;433:6;422:10;:18::i;:::-;385:66;1268:14:19;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;320:137:5;;:::o;9171:283:12:-;9265:5;9245:25;;:16;9253:7;9245;:16::i;:::-;:25;;;9237:34;;;;;;9282:23;9297:7;9282:14;:23::i;:::-;9316:36;:17;:24;9334:5;9316:24;;;;;;;;;;;;;;;:34;:36::i;:::-;9393:1;9362:11;:20;9374:7;9362:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9439:7;9435:1;9411:36;;9420:5;9411:36;;;;;;;;;;;;9171:283;;:::o;1018:10192:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\n\n/// @title A Nifties exchange game to incentivize tourism and onboard to crypto\n/// @author santteegt\n/// @notice NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand\n/// @dev Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK\ncontract StampCollectible is Initializable, Pausable, ERC721MetadataMintable {\n    /// Library used to perform unit increment/decrements\n    using Counters for Counters.Counter;\n    /// Library to avoid overflow/underflow bugs\n    using SafeMath for uint256;\n\n    /// Data structure that represents a NFT Tourist stamp\n    struct Stamp {\n        uint256 price;\n        uint256 maxClones;\n        uint256 inWild;\n        uint256 clonedFrom;\n    }\n\n    struct ClonedStamp {\n        bool owned;\n        uint tokenId;\n    }\n\n    /// Tracks the total minted stamps\n    Counters.Counter public totalMinted;\n    /// Store all minted stamps\n    // Stamp[] public stamps;\n    mapping (uint256 => Stamp) public stamps;\n    ///\n    mapping (uint256 => bool) public ownedTokensIndex;\n    /// Game parameter to provide an scarce amount of stamps\n    uint256 public maxClones;\n    /// Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n    // uint8 constant private PRICEDEPTH = 255;\n    uint8 private priceDepth;\n    /// Cost multiplier to transform NFT price (in finney) to ETH\n    // uint256 constant private COSTMULTIPLIER = 1000000000000;\n    uint256 private costMultiplier;\n\n    /// Maintains a record of minted NFTS and ownership per account\n    // mapping (address => mapping (uint256 => bool)) public balances;\n    mapping (address => mapping (uint256 => ClonedStamp)) public balances;\n\n    /// Verify that the priceDepth parameters is within the max No. of historical blocks a contract can track\n    modifier checkMaxBlockDepth(uint _value) {\n        require(_value > 0 && _value <= 255, \"Price Depth parameter must be within then range [1-255]\");\n        _;\n    }\n\n    /// Triggered when a new Gen0 stamp is minted by the contract owner\n    event MintedStamp(address indexed owner, uint256 tokenId, uint256 price);\n    /// Triggered when a stamp is cloned and minted to a user\n    event NewStamp(address indexed owner, uint256 tokenId, uint256 price);\n    /// Triggered when a cloned stamp is returned to the contract and thus burned\n    event BurnedStamp(address indexed owner, uint256 tokenId, uint256 clonedTokenId);\n\n    /// @dev This constructor was deprecated in favour of the initialize function\n    /// @dev so the contract can be upgraded through a proxy contract\n    // constructor(uint256 _maxClones) ERC721Metadata(\"CryptoStamps\", \"STAMPS\") public {\n    //     maxClones = _maxClones;\n    //     if(stamps.length == 0) {\n    //         Stamp memory _dummy = Stamp({\n    //             price: 0, maxClones: 0, inWild: 0, clonedFrom: 0});\n    //         stamps.push(_dummy);\n    //     }\n    // }\n\n    /** @dev Initialize current and derived contracts\n      * @param _maxClones Maximum number of clones allowed per Gen0 NFT\n      * @param _priceDepth Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n      * @param _costMultiplier Cost multiplier to transform NFT price (in finney) to ETH\n      * @param _name NFT name\n      * @param _symbol NFT symbol\n      */\n    function initialize(uint256 _maxClones, uint8 _priceDepth,\n        uint256 _costMultiplier, string memory _name, string memory _symbol)\n        public\n        initializer // ensures that the contract only initilizes once\n        checkMaxBlockDepth(_maxClones) {\n\n            Pausable.initialize(msg.sender);\n            if(!ERC721._hasBeenInitialized()) {\n                ERC721.initialize();\n            }\n            if(!ERC721Metadata._hasBeenInitialized()) {\n                ERC721Metadata.initialize(_name, _symbol);\n            }\n            ERC721MetadataMintable.initialize(msg.sender);\n\n            maxClones = _maxClones;\n            priceDepth = _priceDepth;\n            costMultiplier = _costMultiplier;\n\n            Stamp memory _dummy = Stamp({\n                price: 0, maxClones: 0, inWild: 0, clonedFrom: 0});\n            stamps[0] = _dummy;\n    }\n\n    /** @dev Calculate the new NFT price based on demand and randomness based on past block hashes\n      * @notice Market value is artificially generated for the game using the entropy found in past block hashes\n      * @param _index NFT index in storage\n      * @return uint16 NFt new estimate market price\n      */\n    // function getNFTPrice(uint8 _index) public view returns (uint16) {\n    function getNFTPrice(uint256 _index) internal view returns (uint16) {\n        Stamp memory stamp = stamps[_index];\n        uint256 x = 0;\n        for(uint8 depth = priceDepth; depth > 0 ; depth--) {\n          bytes32 blockHash = blockhash(block.number-depth);\n          x += convert(blockHash[_index * 2]) << 8 | convert(blockHash[_index * 2 + 1]);\n        }\n        return uint16(x / priceDepth) + uint16(stamp.inWild);\n    }\n\n    /** @dev Helper function to convert a bytes32 to uint\n      * @param _b bytes32 data hash\n      * @return uint uint representation of _b\n      */\n    function convert(bytes32 _b) internal pure returns (uint) {\n        return uint(_b);\n    }\n\n    /** @dev Mint a Gen0 stamp\n      * @notice This function can only be called by the contract owner\n      * @param _priceFinney Initial NFT price in finney\n      * @param _tokenURI URI of the associated digital collectible art\n      * @return bool true if Gen0 NFT is minted\n      */\n    function mint(uint256 _priceFinney, string memory _tokenURI) public\n        onlyMinter\n        whenNotPaused\n        returns (bool) {\n        Stamp memory collectible = Stamp({\n            price: _priceFinney.mul(costMultiplier),\n            maxClones: maxClones,\n            inWild: 0,\n            clonedFrom: 0\n        });\n        totalMinted.increment();\n        uint256 tokenId = totalMinted.current();\n        stamps[tokenId] = collectible;\n        ownedTokensIndex[tokenId] = true;\n        emit MintedStamp(msg.sender, tokenId, _priceFinney);\n\n        return mintWithTokenURI(msg.sender, tokenId, _tokenURI);\n    }\n\n    /** @dev Allow to buy a cloned stamp from minted Gen0 NFTs\n      * @param _tokenId Gen0 NFT index in storage\n      * @return uint tokenId corresponding to the cloned NFT\n      */\n    function buyStamp(address sender, uint256 _tokenId) public payable\n        whenNotPaused\n        returns (uint) {\n            Stamp storage stamp = stamps[_tokenId];\n            require(stamp.clonedFrom == 0, \"You can only generate new stamps from Gen0 NFTs\");\n            require(!balances[sender][_tokenId].owned, \"You already own this stamp\");\n            require(stamp.inWild.add(1) <= stamp.maxClones, \"Max clones have been reached\");\n            require(msg.value >= stamp.price, \"Not enough funds\");\n            stamp.inWild = stamp.inWild.add(1);\n            stamp.price = uint256(getNFTPrice(_tokenId)).mul(costMultiplier);\n\n            /// mint and increase total minted\n            totalMinted.increment();\n            uint tokenId = totalMinted.current();\n            Stamp memory clonedStamp = Stamp({\n                price: stamp.price,\n                maxClones: 0,\n                inWild: 0,\n                clonedFrom: _tokenId\n            });\n            stamps[tokenId] = clonedStamp;\n            ownedTokensIndex[tokenId] = true;\n            _mint(sender, tokenId);\n            balances[sender][_tokenId].owned = true;\n            balances[sender][_tokenId].tokenId = tokenId;\n\n            // emit NewStamp(msg.sender, _tokenId, stamp.price);\n            emit NewStamp(sender, tokenId, msg.value);\n            return tokenId;\n    }\n\n    /** @dev Allow to sell an owned stamp and profit/loose based on current market price\n      * @param _tokenId Gen0 NFT index in storage\n      * @return bool true if processed\n      */\n    function sellStamp(uint256 _tokenId) public\n        whenNotPaused\n        returns (bool) {\n            require(balances[msg.sender][_tokenId].owned, \"User does not own this stamp\");\n            Stamp storage stamp = stamps[_tokenId];\n            uint256 payout = stamp.price;\n            require(address(this).balance >= payout, \"Prize pot is almost empty so it is no longer possible to sell stamps\");\n            stamp.inWild = stamp.inWild.sub(1);\n            stamp.price = uint256(getNFTPrice(_tokenId)).mul(costMultiplier);\n\n            ClonedStamp storage clonedStamp = balances[msg.sender][_tokenId];\n            clonedStamp.owned = false;\n\n            // burn token\n            _burn(clonedStamp.tokenId);\n            ownedTokensIndex[clonedStamp.tokenId] = false;\n\n            emit BurnedStamp(msg.sender, _tokenId, clonedStamp.tokenId);\n            delete stamps[clonedStamp.tokenId];\n            // TODO: disabled when upgrading the contract\n            // msg.sender.transfer(payout); // This approach can block the asset if owned by a bad actor (contract account)\n            // TODO: to be addded in an upgraded version of the contract\n            outstandingBalance[msg.sender] = outstandingBalance[msg.sender].add(payout);\n            return true;\n    }\n\n    /** @dev Fallback function to allow the contract accept deposits in ETH\n      * @notice deposits can be crodwsourced to fund the Prize pot\n      */\n    function () external payable whenNotPaused {\n\n    }\n\n    /// Maintains a record of outstanding balance owned to users before withdrawal\n    /// Required to implement the Pull vs Push design pattern for payments\n    /// TODO: to be included later in an upgradable contract\n    mapping (address => uint) public outstandingBalance;\n\n    /// Triggered when a user withdraw her outstanding balance from selling stamps in the market\n    /// TODO: this has to be added as an upgrade\n    event WithdrawnBalance(address indexed owner, uint256 amount);\n\n    /** @dev Allow users to withdraw funds from sold stamps. Required to enable a pull vs push design pattern\n      * @return bool true if processed\n      */\n    /// TODO: to be addded in an upgraded version of the contract\n    function withdraw() public whenNotPaused returns (bool) {\n    \trequire(outstandingBalance[msg.sender] > 0, \"You dont have any outstanding balance to withdraw\");\n    \tuint amount = outstandingBalance[msg.sender];\n    \toutstandingBalance[msg.sender] = 0;\n        emit WithdrawnBalance(msg.sender, amount);\n        msg.sender.transfer(amount);\n    \treturn true;\n    }\n}\n",
  "sourcePath": "/Users/santteegt/Consensys-Academy/Spring-2019/final-project/final-project-spring19/contracts/StampCollectible.sol",
  "ast": {
    "absolutePath": "/Users/santteegt/Consensys-Academy/Spring-2019/final-project/final-project-spring19/contracts/StampCollectible.sol",
    "exportedSymbols": {
      "StampCollectible": [
        976
      ]
    },
    "id": 977,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 317,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2458,
        "src": "25:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 318,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2528,
        "src": "118:100:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 319,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2458,
        "src": "219:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 320,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2306,
        "src": "312:84:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
        "id": 321,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1609,
        "src": "397:83:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2758,
        "src": "481:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol",
        "id": 323,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1439,
        "src": "542:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 324,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1737,
        "src": "623:78:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 325,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2757,
              "src": "1047:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2757",
                "typeString": "contract Initializable"
              }
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 327,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1608,
              "src": "1062:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$1608",
                "typeString": "contract Pausable"
              }
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 329,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2527,
              "src": "1072:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$2527",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 330,
            "nodeType": "InheritanceSpecifier",
            "src": "1072:22:2"
          }
        ],
        "contractDependencies": [
          1189,
          1308,
          1498,
          1508,
          1608,
          2305,
          2457,
          2527,
          2633,
          2659,
          2757
        ],
        "contractKind": "contract",
        "documentation": "@title A Nifties exchange game to incentivize tourism and onboard to crypto\n @author santteegt\n @notice NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand\n @dev Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK",
        "fullyImplemented": true,
        "id": 976,
        "linearizedBaseContracts": [
          976,
          2527,
          1189,
          2457,
          2659,
          2305,
          2633,
          1498,
          1508,
          1608,
          1308,
          2757
        ],
        "name": "StampCollectible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 333,
            "libraryName": {
              "contractScope": null,
              "id": 331,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "1165:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$1438",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1159:36:2",
            "typeName": {
              "contractScope": null,
              "id": 332,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1398,
              "src": "1178:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1398_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 336,
            "libraryName": {
              "contractScope": null,
              "id": 334,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1736,
              "src": "1255:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1736",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1249:27:2",
            "typeName": {
              "id": 335,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1268:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "StampCollectible.Stamp",
            "id": 345,
            "members": [
              {
                "constant": false,
                "id": 338,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1364:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 337,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1364:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 340,
                "name": "maxClones",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1387:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 339,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1387:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 342,
                "name": "inWild",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1414:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 341,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1414:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 344,
                "name": "clonedFrom",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1438:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 343,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1438:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Stamp",
            "nodeType": "StructDefinition",
            "scope": 976,
            "src": "1341:122:2",
            "visibility": "public"
          },
          {
            "canonicalName": "StampCollectible.ClonedStamp",
            "id": 350,
            "members": [
              {
                "constant": false,
                "id": 347,
                "name": "owned",
                "nodeType": "VariableDeclaration",
                "scope": 350,
                "src": "1498:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 346,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 349,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 350,
                "src": "1518:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 348,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ClonedStamp",
            "nodeType": "StructDefinition",
            "scope": 976,
            "src": "1469:68:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 352,
            "name": "totalMinted",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1582:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1398_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 351,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1398,
              "src": "1582:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1398_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 356,
            "name": "stamps",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1685:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
              "typeString": "mapping(uint256 => struct StampCollectible.Stamp)"
            },
            "typeName": {
              "id": 355,
              "keyType": {
                "id": 353,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1694:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1685:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                "typeString": "mapping(uint256 => struct StampCollectible.Stamp)"
              },
              "valueType": {
                "contractScope": null,
                "id": 354,
                "name": "Stamp",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 345,
                "src": "1705:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                  "typeString": "struct StampCollectible.Stamp"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 360,
            "name": "ownedTokensIndex",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1739:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 359,
              "keyType": {
                "id": 357,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1748:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1739:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 358,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1759:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 362,
            "name": "maxClones",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1855:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 361,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1855:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 364,
            "name": "priceDepth",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2030:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 363,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2030:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 366,
            "name": "costMultiplier",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2190:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 365,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2190:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 372,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2366:69:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp))"
            },
            "typeName": {
              "id": 371,
              "keyType": {
                "id": 367,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2375:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2366:53:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp))"
              },
              "valueType": {
                "id": 370,
                "keyType": {
                  "id": 368,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2395:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2386:32:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                  "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 369,
                  "name": "ClonedStamp",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 350,
                  "src": "2406:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                    "typeString": "struct StampCollectible.ClonedStamp"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "2593:123:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2611:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2620:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2611:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2625:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "323535",
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2635:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "255"
                          },
                          "src": "2625:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2611:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:57:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28f4b412de5fcc65fc54ff917a3dca5c665c1984c0310d23fc36f9bcb691cd3d",
                          "typeString": "literal_string \"Price Depth parameter must be within then range [1-255]\""
                        },
                        "value": "Price Depth parameter must be within then range [1-255]"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28f4b412de5fcc65fc54ff917a3dca5c665c1984c0310d23fc36f9bcb691cd3d",
                          "typeString": "literal_string \"Price Depth parameter must be within then range [1-255]\""
                        }
                      ],
                      "id": 376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "2603:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:95:2"
                },
                {
                  "id": 387,
                  "nodeType": "PlaceholderStatement",
                  "src": "2708:1:2"
                }
              ]
            },
            "documentation": "Verify that the priceDepth parameters is within the max No. of historical blocks a contract can track",
            "id": 389,
            "name": "checkMaxBlockDepth",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2580:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2579:13:2"
            },
            "src": "2552:164:2",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a new Gen0 stamp is minted by the contract owner",
            "id": 397,
            "name": "MintedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2812:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2812:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2835:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2852:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2811:55:2"
            },
            "src": "2794:73:2"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a stamp is cloned and minted to a user",
            "id": 405,
            "name": "NewStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "2949:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "2972:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "2989:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2989:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2948:55:2"
            },
            "src": "2934:70:2"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a cloned stamp is returned to the contract and thus burned",
            "id": 413,
            "name": "BurnedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3109:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3132:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 411,
                  "indexed": false,
                  "name": "clonedTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3149:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3108:63:2"
            },
            "src": "3091:81:2"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "4329:604:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 434,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "4364:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4364:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "4344:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$1608_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1544,
                      "src": "4344:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4344:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:31:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4392:29:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2305,
                          "src": "4393:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$2305_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasBeenInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1809,
                        "src": "4393:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4393:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 448,
                  "nodeType": "IfStatement",
                  "src": "4389:86:2",
                  "trueBody": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "4423:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "4441:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2305_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1799,
                            "src": "4441:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4441:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4441:19:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4491:37:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "ERC721Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2457,
                          "src": "4492:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2457_$",
                            "typeString": "type(contract ERC721Metadata)"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasBeenInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2368,
                        "src": "4492:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4492:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 461,
                  "nodeType": "IfStatement",
                  "src": "4488:116:2",
                  "trueBody": {
                    "id": 460,
                    "nodeType": "Block",
                    "src": "4530:74:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 456,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "4574:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 457,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4581:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 453,
                              "name": "ERC721Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2457,
                              "src": "4548:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2457_$",
                                "typeString": "type(contract ERC721Metadata)"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2358,
                            "src": "4548:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4548:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 459,
                        "nodeType": "ExpressionStatement",
                        "src": "4548:41:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "4651:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4651:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2527,
                        "src": "4617:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$2527_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2496,
                      "src": "4617:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "maxClones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "4677:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "_maxClones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "4689:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4677:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 473,
                      "name": "priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "4713:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "_priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "4726:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4713:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "4713:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "costMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "4751:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 478,
                      "name": "_costMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "4768:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4751:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4751:32:2"
                },
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "name": "_dummy",
                      "nodeType": "VariableDeclaration",
                      "scope": 496,
                      "src": "4798:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 481,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "4798:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4851:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4865:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4876:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4891:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 483,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "4820:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$345_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "price",
                      "maxClones",
                      "inWild",
                      "clonedFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4820:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4798:96:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4908:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 492,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4915:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4908:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 493,
                      "name": "_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "4920:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "4908:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:18:2"
                }
              ]
            },
            "documentation": "@dev Initialize current and derived contracts\n@param _maxClones Maximum number of clones allowed per Gen0 NFT\n@param _priceDepth Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n@param _costMultiplier Cost multiplier to transform NFT price (in finney) to ETH\n@param _name NFT name\n@param _symbol NFT symbol",
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2738,
                  "src": "4228:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4228:11:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 428,
                    "name": "_maxClones",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "4317:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 427,
                  "name": "checkMaxBlockDepth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 389,
                  "src": "4298:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4298:30:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "name": "_maxClones",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4089:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "name": "_priceDepth",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4109:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "name": "_costMultiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4136:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4161:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4161:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4182:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4182:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4088:116:2"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4329:0:2"
            },
            "scope": 976,
            "src": "4069:864:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "5397:358:2",
              "statements": [
                {
                  "assignments": [
                    505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 505,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 568,
                      "src": "5407:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 504,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "5407:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 509,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "5428:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 508,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "5435:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5428:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5407:35:2"
                },
                {
                  "assignments": [
                    511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 511,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 568,
                      "src": "5452:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5452:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 513,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5464:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5452:13:2"
                },
                {
                  "body": {
                    "id": 555,
                    "nodeType": "Block",
                    "src": "5526:161:2",
                    "statements": [
                      {
                        "assignments": [
                          525
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 525,
                            "name": "blockHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 555,
                            "src": "5538:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 524,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5538:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 532,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 527,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2762,
                                  "src": "5568:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5568:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 529,
                                "name": "depth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 515,
                                "src": "5581:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "5568:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 526,
                            "name": "blockhash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2763,
                            "src": "5558:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256) view returns (bytes32)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5558:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5538:49:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "5599:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 535,
                                      "name": "blockHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 525,
                                      "src": "5612:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 539,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 538,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 536,
                                        "name": "_index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 499,
                                        "src": "5622:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 537,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5631:1:2",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "5622:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5612:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  ],
                                  "id": 534,
                                  "name": "convert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 581,
                                  "src": "5604:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
                                    "typeString": "function (bytes32) pure returns (uint256)"
                                  }
                                },
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5604:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "38",
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5638:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              "src": "5604:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "|",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 544,
                                    "name": "blockHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "5650:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 550,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 545,
                                        "name": "_index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 499,
                                        "src": "5660:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5669:1:2",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "5660:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5673:1:2",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "5660:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5650:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 543,
                                "name": "convert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 581,
                                "src": "5642:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
                                  "typeString": "function (bytes32) pure returns (uint256)"
                                }
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5642:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5604:72:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5599:77:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 554,
                        "nodeType": "ExpressionStatement",
                        "src": "5599:77:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "depth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "5505:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5513:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5505:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 556,
                  "initializationExpression": {
                    "assignments": [
                      515
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 515,
                        "name": "depth",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "5479:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5479:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 517,
                    "initialValue": {
                      "argumentTypes": null,
                      "id": 516,
                      "name": "priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "5493:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5479:24:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "5517:7:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "depth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "5517:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 523,
                    "nodeType": "ExpressionStatement",
                    "src": "5517:7:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5475:212:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "5710:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 559,
                            "name": "priceDepth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "5714:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5710:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5703:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": "uint16"
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5703:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "5735:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                              "typeString": "struct StampCollectible.Stamp memory"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "5735:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5728:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": "uint16"
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5728:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5703:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 503,
                  "id": 567,
                  "nodeType": "Return",
                  "src": "5696:52:2"
                }
              ]
            },
            "documentation": "@dev Calculate the new NFT price based on demand and randomness based on past block hashes\n@notice Market value is artificially generated for the game using the entropy found in past block hashes\n@param _index NFT index in storage\n@return uint16 NFt new estimate market price",
            "id": 569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "5350:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5349:16:2"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "5389:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5388:8:2"
            },
            "scope": 976,
            "src": "5329:426:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "5969:32:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 577,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "5991:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5986:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 575,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "5979:15:2"
                }
              ]
            },
            "documentation": "@dev Helper function to convert a bytes32 to uint\n@param _b bytes32 data hash\n@return uint uint representation of _b",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5928:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5927:12:2"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5963:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5962:6:2"
            },
            "scope": 976,
            "src": "5911:90:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "6425:488:2",
              "statements": [
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "name": "collectible",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "6435:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 594,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "6435:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "costMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "6506:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "_priceFinney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "6489:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1643,
                          "src": "6489:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6489:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "maxClones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "6546:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6577:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6604:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 596,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6462:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$345_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "price",
                      "maxClones",
                      "inWild",
                      "clonedFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6462:154:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6435:181:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "6626:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1421,
                      "src": "6626:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1398_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6626:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "6626:23:2"
                },
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "6659:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6659:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "6677:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "6677:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1398_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6659:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 617,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "6708:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 619,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6715:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6708:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 620,
                      "name": "collectible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "6726:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "6708:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "6708:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "6747:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 624,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6764:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6747:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6775:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6747:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "6806:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6806:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6818:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "_priceFinney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "6827:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "name": "MintedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "6794:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6794:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "EmitStatement",
                  "src": "6789:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 637,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "6875:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6875:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6887:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "6896:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 636,
                      "name": "mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "6858:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6858:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "6851:55:2"
                }
              ]
            },
            "documentation": "@dev Mint a Gen0 stamp\n@notice This function can only be called by the contract owner\n@param _priceFinney Initial NFT price in finney\n@param _tokenURI URI of the associated digital collectible art\n@return bool true if Gen0 NFT is minted",
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 588,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 587,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1118,
                  "src": "6369:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6369:10:2"
              },
              {
                "arguments": null,
                "id": 590,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 589,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "6388:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6388:13:2"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "name": "_priceFinney",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "6307:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "6329:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6306:47:2"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "6419:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6418:6:2"
            },
            "scope": 976,
            "src": "6293:620:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "7214:1239:2",
              "statements": [
                {
                  "assignments": [
                    656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 656,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "7228:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 655,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "7228:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 657,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "7250:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 659,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 658,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "7257:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7250:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7228:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 662,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7288:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clonedFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 344,
                          "src": "7288:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7308:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7288:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7311:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        },
                        "value": "You can only generate new stamps from Gen0 NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        }
                      ],
                      "id": 661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7280:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7280:81:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "7280:81:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7383:33:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 670,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "7384:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                                }
                              },
                              "id": 672,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 646,
                                "src": "7393:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7384:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                                "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                              }
                            },
                            "id": 674,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 673,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "7401:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7384:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                              "typeString": "struct StampCollectible.ClonedStamp storage ref"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 347,
                          "src": "7384:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520616c7265616479206f776e2074686973207374616d70",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7418:28:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        },
                        "value": "You already own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        }
                      ],
                      "id": 669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7375:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7375:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "7375:72:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7486:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 681,
                                "name": "stamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 656,
                                "src": "7469:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                                  "typeString": "struct StampCollectible.Stamp storage pointer"
                                }
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inWild",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 342,
                              "src": "7469:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1715,
                            "src": "7469:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7469:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 686,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7492:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxClones",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 340,
                          "src": "7492:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7469:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617820636c6f6e65732068617665206265656e2072656163686564",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7509:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e89663b6777778d57a2e2042652daa0b1100c2951eef4d2097cc1cdec392f0b",
                          "typeString": "literal_string \"Max clones have been reached\""
                        },
                        "value": "Max clones have been reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e89663b6777778d57a2e2042652daa0b1100c2951eef4d2097cc1cdec392f0b",
                          "typeString": "literal_string \"Max clones have been reached\""
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7461:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "7461:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2772,
                            "src": "7562:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7562:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7575:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 338,
                          "src": "7575:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7562:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7588:18:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7554:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7554:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "7554:53:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 701,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "7621:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "7621:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7653:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 704,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7636:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "7636:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1715,
                        "src": "7636:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7636:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7621:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 711,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "7669:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 338,
                      "src": "7669:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 720,
                          "name": "costMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "7718:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 716,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "7703:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 715,
                                "name": "getNFTPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "7691:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint16_$",
                                  "typeString": "function (uint256) view returns (uint16)"
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7691:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7683:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7683:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1643,
                        "src": "7683:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7683:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7669:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "7669:64:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 724,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "7795:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1421,
                      "src": "7795:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1398_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7795:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "7795:23:2"
                },
                {
                  "assignments": [
                    730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 730,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "7832:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7832:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "7847:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "7847:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1398_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7847:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7832:36:2"
                },
                {
                  "assignments": [
                    736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 736,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "7882:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 735,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "7882:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 744,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 738,
                          "name": "stamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "7940:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                            "typeString": "struct StampCollectible.Stamp storage pointer"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 338,
                        "src": "7940:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7980:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8007:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "8038:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 737,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "7909:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$345_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "price",
                      "maxClones",
                      "inWild",
                      "clonedFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7909:152:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7882:179:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 745,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "8075:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 747,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8082:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8075:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 748,
                      "name": "clonedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "8093:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "8075:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "8075:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "8118:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 753,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8135:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8118:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8146:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8118:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8118:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 758,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "8170:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8178:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 757,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "8164:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8164:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "8164:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 762,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "8200:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 765,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "8209:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8200:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 766,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 764,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "8217:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8200:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 347,
                      "src": "8200:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8235:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8200:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "8253:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 774,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 772,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "8262:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8253:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 775,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 773,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "8270:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8253:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "8253:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "8290:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8253:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "8253:44:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 781,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "8391:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 782,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8399:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 783,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "8408:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8408:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 780,
                      "name": "NewStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "8382:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "EmitStatement",
                  "src": "8377:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 787,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 730,
                    "src": "8439:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 788,
                  "nodeType": "Return",
                  "src": "8432:14:2"
                }
              ]
            },
            "documentation": "@dev Allow to buy a cloned stamp from minted Gen0 NFTs\n@param _tokenId Gen0 NFT index in storage\n@return uint tokenId corresponding to the cloned NFT",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 651,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 650,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "7177:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7177:13:2"
              }
            ],
            "name": "buyStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "7120:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7120:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 648,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "7136:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7136:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7119:34:2"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "7208:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7208:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7207:6:2"
            },
            "scope": 976,
            "src": "7102:1351:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "8735:1179:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 800,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "8757:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                              }
                            },
                            "id": 803,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 801,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2772,
                                "src": "8766:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8766:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8757:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                              "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                            }
                          },
                          "id": 805,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 804,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "8778:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8757:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                            "typeString": "struct StampCollectible.ClonedStamp storage ref"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 347,
                        "src": "8757:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220646f6573206e6f74206f776e2074686973207374616d70",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8795:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98a0de758a18418f7091750474be68c56d83f88f70c4910d8cf2dc0966b4ea31",
                          "typeString": "literal_string \"User does not own this stamp\""
                        },
                        "value": "User does not own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98a0de758a18418f7091750474be68c56d83f88f70c4910d8cf2dc0966b4ea31",
                          "typeString": "literal_string \"User does not own this stamp\""
                        }
                      ],
                      "id": 799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "8749:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8749:77:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "8749:77:2"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "8840:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 810,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "8840:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 815,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "8862:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 814,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 813,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "8869:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8862:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8840:38:2"
                },
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "8892:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 816,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8892:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 820,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 818,
                      "name": "stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "8909:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp storage pointer"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 338,
                    "src": "8909:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8892:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 823,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2820,
                                "src": "8950:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StampCollectible_$976",
                                  "typeString": "contract StampCollectible"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StampCollectible_$976",
                                  "typeString": "contract StampCollectible"
                                }
                              ],
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8942:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8942:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8942:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 826,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "8967:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8942:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8975:70:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc95aee24d98acbfb7840645da877cc64dd21aba0128b85d0153a748ef4f84fe",
                          "typeString": "literal_string \"Prize pot is almost empty so it is no longer possible to sell stamps\""
                        },
                        "value": "Prize pot is almost empty so it is no longer possible to sell stamps"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc95aee24d98acbfb7840645da877cc64dd21aba0128b85d0153a748ef4f84fe",
                          "typeString": "literal_string \"Prize pot is almost empty so it is no longer possible to sell stamps\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "8934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8934:112:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "8934:112:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9060:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "9060:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9092:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 834,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "9075:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "9075:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1691,
                        "src": "9075:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9075:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9060:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "9060:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 841,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9108:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 338,
                      "src": "9108:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 850,
                          "name": "costMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "9157:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 846,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 792,
                                  "src": "9142:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 845,
                                "name": "getNFTPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "9130:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint16_$",
                                  "typeString": "function (uint256) view returns (uint16)"
                                }
                              },
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9130:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9122:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9122:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1643,
                        "src": "9122:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9122:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9108:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "9108:64:2"
                },
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "9187:31:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                        "typeString": "struct StampCollectible.ClonedStamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 854,
                        "name": "ClonedStamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 350,
                        "src": "9187:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                          "typeString": "struct StampCollectible.ClonedStamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 862,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "9221:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                        }
                      },
                      "id": 859,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 857,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "9230:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9230:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9221:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                      }
                    },
                    "id": 861,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 860,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "9242:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9221:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                      "typeString": "struct StampCollectible.ClonedStamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9187:64:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 863,
                        "name": "clonedStamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "9265:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                          "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 347,
                      "src": "9265:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9285:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9265:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "9265:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 870,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9337:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9337:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 869,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2452,
                        2183
                      ],
                      "referencedDeclaration": 2183,
                      "src": "9331:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9331:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "9331:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 874,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "9371:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 877,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 875,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9388:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9388:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9371:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9411:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9371:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "9371:45:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "9448:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9448:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 884,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "9460:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9470:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9470:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 881,
                      "name": "BurnedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "9436:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "EmitStatement",
                  "src": "9431:59:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9504:34:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 889,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "9511:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 892,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 890,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9518:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9518:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9511:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "9504:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "outstandingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "9807:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 898,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "9826:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9826:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9807:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 904,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "9875:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 899,
                            "name": "outstandingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "9840:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 902,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 900,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2772,
                              "src": "9859:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9859:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9840:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1715,
                        "src": "9840:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9840:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9807:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "9807:75:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9903:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 798,
                  "id": 909,
                  "nodeType": "Return",
                  "src": "9896:11:2"
                }
              ]
            },
            "documentation": "@dev Allow to sell an owned stamp and profit/loose based on current market price\n@param _tokenId Gen0 NFT index in storage\n@return bool true if processed",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 795,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 794,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "8698:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8698:13:2"
              }
            ],
            "name": "sellStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8665:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8665:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8664:18:2"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8729:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8729:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8728:6:2"
            },
            "scope": 976,
            "src": "8646:1268:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "10115:8:2",
              "statements": []
            },
            "documentation": "@dev Fallback function to allow the contract accept deposits in ETH\n@notice deposits can be crodwsourced to fund the Prize pot",
            "id": 917,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": null,
                "id": 914,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 913,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "10101:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10101:13:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10081:2:2"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10115:0:2"
            },
            "scope": 976,
            "src": "10072:51:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 921,
            "name": "outstandingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "10348:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 920,
              "keyType": {
                "id": 918,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "10357:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "10348:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 919,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "10368:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a user withdraw her outstanding balance from selling stamps in the market\n TODO: this has to be added as an upgrade",
            "id": 927,
            "name": "WithdrawnBalance",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "10575:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10575:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "10598:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10598:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10574:39:2"
            },
            "src": "10552:62:2"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "10900:308:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 935,
                            "name": "outstandingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "10915:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 938,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 936,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2772,
                              "src": "10934:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10934:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10915:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10948:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10915:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f207769746864726177",
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10951:51:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0bd4524f4d21f77c17de3fd64ae0008b7b8f48a2838225ba2defe2a9296ed2f",
                          "typeString": "literal_string \"You dont have any outstanding balance to withdraw\""
                        },
                        "value": "You dont have any outstanding balance to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0bd4524f4d21f77c17de3fd64ae0008b7b8f48a2838225ba2defe2a9296ed2f",
                          "typeString": "literal_string \"You dont have any outstanding balance to withdraw\""
                        }
                      ],
                      "id": 934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "10907:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10907:96:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "10907:96:2"
                },
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "11010:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11010:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 950,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 946,
                      "name": "outstandingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "11024:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 949,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 947,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "11043:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11043:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11024:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11010:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 951,
                        "name": "outstandingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "11061:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 954,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "11080:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11080:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11061:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11094:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11061:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "11061:34:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "11127:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11127:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 961,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "11139:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 958,
                      "name": "WithdrawnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "11110:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11110:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "EmitStatement",
                  "src": "11105:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "11176:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "11156:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11156:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11156:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11156:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "11156:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11197:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 933,
                  "id": 973,
                  "nodeType": "Return",
                  "src": "11190:11:2"
                }
              ]
            },
            "documentation": "TODO: to be addded in an upgraded version of the contract",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 930,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 929,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "10871:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10871:13:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10861:2:2"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10894:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10894:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10893:6:2"
            },
            "scope": 976,
            "src": "10844:364:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 977,
        "src": "1018:10192:2"
      }
    ],
    "src": "0:11211:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/santteegt/Consensys-Academy/Spring-2019/final-project/final-project-spring19/contracts/StampCollectible.sol",
    "exportedSymbols": {
      "StampCollectible": [
        976
      ]
    },
    "id": 977,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 317,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2458,
        "src": "25:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 318,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2528,
        "src": "118:100:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 319,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2458,
        "src": "219:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 320,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2306,
        "src": "312:84:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
        "id": 321,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1609,
        "src": "397:83:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 2758,
        "src": "481:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol",
        "id": 323,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1439,
        "src": "542:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 324,
        "nodeType": "ImportDirective",
        "scope": 977,
        "sourceUnit": 1737,
        "src": "623:78:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 325,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2757,
              "src": "1047:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2757",
                "typeString": "contract Initializable"
              }
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "1047:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 327,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1608,
              "src": "1062:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$1608",
                "typeString": "contract Pausable"
              }
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 329,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2527,
              "src": "1072:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$2527",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 330,
            "nodeType": "InheritanceSpecifier",
            "src": "1072:22:2"
          }
        ],
        "contractDependencies": [
          1189,
          1308,
          1498,
          1508,
          1608,
          2305,
          2457,
          2527,
          2633,
          2659,
          2757
        ],
        "contractKind": "contract",
        "documentation": "@title A Nifties exchange game to incentivize tourism and onboard to crypto\n @author santteegt\n @notice NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand\n @dev Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK",
        "fullyImplemented": true,
        "id": 976,
        "linearizedBaseContracts": [
          976,
          2527,
          1189,
          2457,
          2659,
          2305,
          2633,
          1498,
          1508,
          1608,
          1308,
          2757
        ],
        "name": "StampCollectible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 333,
            "libraryName": {
              "contractScope": null,
              "id": 331,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "1165:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$1438",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1159:36:2",
            "typeName": {
              "contractScope": null,
              "id": 332,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1398,
              "src": "1178:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1398_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 336,
            "libraryName": {
              "contractScope": null,
              "id": 334,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1736,
              "src": "1255:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1736",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1249:27:2",
            "typeName": {
              "id": 335,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1268:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "StampCollectible.Stamp",
            "id": 345,
            "members": [
              {
                "constant": false,
                "id": 338,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1364:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 337,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1364:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 340,
                "name": "maxClones",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1387:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 339,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1387:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 342,
                "name": "inWild",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1414:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 341,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1414:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 344,
                "name": "clonedFrom",
                "nodeType": "VariableDeclaration",
                "scope": 345,
                "src": "1438:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 343,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1438:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Stamp",
            "nodeType": "StructDefinition",
            "scope": 976,
            "src": "1341:122:2",
            "visibility": "public"
          },
          {
            "canonicalName": "StampCollectible.ClonedStamp",
            "id": 350,
            "members": [
              {
                "constant": false,
                "id": 347,
                "name": "owned",
                "nodeType": "VariableDeclaration",
                "scope": 350,
                "src": "1498:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 346,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 349,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 350,
                "src": "1518:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 348,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ClonedStamp",
            "nodeType": "StructDefinition",
            "scope": 976,
            "src": "1469:68:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 352,
            "name": "totalMinted",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1582:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1398_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 351,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1398,
              "src": "1582:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1398_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 356,
            "name": "stamps",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1685:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
              "typeString": "mapping(uint256 => struct StampCollectible.Stamp)"
            },
            "typeName": {
              "id": 355,
              "keyType": {
                "id": 353,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1694:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1685:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                "typeString": "mapping(uint256 => struct StampCollectible.Stamp)"
              },
              "valueType": {
                "contractScope": null,
                "id": 354,
                "name": "Stamp",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 345,
                "src": "1705:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                  "typeString": "struct StampCollectible.Stamp"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 360,
            "name": "ownedTokensIndex",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1739:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 359,
              "keyType": {
                "id": 357,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1748:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1739:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 358,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1759:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 362,
            "name": "maxClones",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "1855:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 361,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1855:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 364,
            "name": "priceDepth",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2030:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 363,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2030:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 366,
            "name": "costMultiplier",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2190:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 365,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2190:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 372,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "2366:69:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp))"
            },
            "typeName": {
              "id": 371,
              "keyType": {
                "id": 367,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2375:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2366:53:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp))"
              },
              "valueType": {
                "id": 370,
                "keyType": {
                  "id": 368,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2395:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2386:32:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                  "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 369,
                  "name": "ClonedStamp",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 350,
                  "src": "2406:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                    "typeString": "struct StampCollectible.ClonedStamp"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "2593:123:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 377,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2611:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2620:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2611:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2625:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "323535",
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2635:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "255"
                          },
                          "src": "2625:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2611:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d",
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2640:57:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28f4b412de5fcc65fc54ff917a3dca5c665c1984c0310d23fc36f9bcb691cd3d",
                          "typeString": "literal_string \"Price Depth parameter must be within then range [1-255]\""
                        },
                        "value": "Price Depth parameter must be within then range [1-255]"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28f4b412de5fcc65fc54ff917a3dca5c665c1984c0310d23fc36f9bcb691cd3d",
                          "typeString": "literal_string \"Price Depth parameter must be within then range [1-255]\""
                        }
                      ],
                      "id": 376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "2603:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:95:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:95:2"
                },
                {
                  "id": 387,
                  "nodeType": "PlaceholderStatement",
                  "src": "2708:1:2"
                }
              ]
            },
            "documentation": "Verify that the priceDepth parameters is within the max No. of historical blocks a contract can track",
            "id": 389,
            "name": "checkMaxBlockDepth",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2580:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2579:13:2"
            },
            "src": "2552:164:2",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a new Gen0 stamp is minted by the contract owner",
            "id": 397,
            "name": "MintedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2812:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2812:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2835:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2835:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 397,
                  "src": "2852:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2811:55:2"
            },
            "src": "2794:73:2"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a stamp is cloned and minted to a user",
            "id": 405,
            "name": "NewStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "2949:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 401,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "2972:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "2989:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2989:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2948:55:2"
            },
            "src": "2934:70:2"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a cloned stamp is returned to the contract and thus burned",
            "id": 413,
            "name": "BurnedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3109:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3132:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 411,
                  "indexed": false,
                  "name": "clonedTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "3149:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3108:63:2"
            },
            "src": "3091:81:2"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "4329:604:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 434,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "4364:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4364:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "4344:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$1608_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1544,
                      "src": "4344:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4344:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:31:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4392:29:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2305,
                          "src": "4393:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$2305_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasBeenInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1809,
                        "src": "4393:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4393:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 448,
                  "nodeType": "IfStatement",
                  "src": "4389:86:2",
                  "trueBody": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "4423:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "4441:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2305_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1799,
                            "src": "4441:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4441:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4441:19:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4491:37:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "ERC721Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2457,
                          "src": "4492:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2457_$",
                            "typeString": "type(contract ERC721Metadata)"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasBeenInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2368,
                        "src": "4492:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4492:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 461,
                  "nodeType": "IfStatement",
                  "src": "4488:116:2",
                  "trueBody": {
                    "id": 460,
                    "nodeType": "Block",
                    "src": "4530:74:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 456,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "4574:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 457,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "4581:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 453,
                              "name": "ERC721Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2457,
                              "src": "4548:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2457_$",
                                "typeString": "type(contract ERC721Metadata)"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2358,
                            "src": "4548:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4548:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 459,
                        "nodeType": "ExpressionStatement",
                        "src": "4548:41:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "4651:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4651:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2527,
                        "src": "4617:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$2527_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2496,
                      "src": "4617:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "maxClones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "4677:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "_maxClones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "4689:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4677:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 473,
                      "name": "priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "4713:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "_priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "4726:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4713:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "4713:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 477,
                      "name": "costMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "4751:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 478,
                      "name": "_costMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "4768:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4751:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4751:32:2"
                },
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "name": "_dummy",
                      "nodeType": "VariableDeclaration",
                      "scope": 496,
                      "src": "4798:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 481,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "4798:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4851:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4865:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4876:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4891:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 483,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "4820:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$345_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "price",
                      "maxClones",
                      "inWild",
                      "clonedFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4820:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4798:96:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 490,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "4908:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 492,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4915:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4908:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 493,
                      "name": "_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "4920:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "4908:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:18:2"
                }
              ]
            },
            "documentation": "@dev Initialize current and derived contracts\n@param _maxClones Maximum number of clones allowed per Gen0 NFT\n@param _priceDepth Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n@param _costMultiplier Cost multiplier to transform NFT price (in finney) to ETH\n@param _name NFT name\n@param _symbol NFT symbol",
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2738,
                  "src": "4228:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4228:11:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 428,
                    "name": "_maxClones",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "4317:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 427,
                  "name": "checkMaxBlockDepth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 389,
                  "src": "4298:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4298:30:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "name": "_maxClones",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4089:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "name": "_priceDepth",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4109:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4109:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "name": "_costMultiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4136:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4136:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 421,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4161:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4161:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4182:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4182:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4088:116:2"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4329:0:2"
            },
            "scope": 976,
            "src": "4069:864:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "5397:358:2",
              "statements": [
                {
                  "assignments": [
                    505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 505,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 568,
                      "src": "5407:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 504,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "5407:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 509,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 506,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "5428:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 508,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 507,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "5435:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5428:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5407:35:2"
                },
                {
                  "assignments": [
                    511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 511,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 568,
                      "src": "5452:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5452:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 513,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5464:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5452:13:2"
                },
                {
                  "body": {
                    "id": 555,
                    "nodeType": "Block",
                    "src": "5526:161:2",
                    "statements": [
                      {
                        "assignments": [
                          525
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 525,
                            "name": "blockHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 555,
                            "src": "5538:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 524,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5538:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 532,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 527,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2762,
                                  "src": "5568:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5568:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 529,
                                "name": "depth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 515,
                                "src": "5581:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "5568:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 526,
                            "name": "blockhash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2763,
                            "src": "5558:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256) view returns (bytes32)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5558:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5538:49:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "5599:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 535,
                                      "name": "blockHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 525,
                                      "src": "5612:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 539,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 538,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 536,
                                        "name": "_index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 499,
                                        "src": "5622:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 537,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5631:1:2",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "5622:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5612:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  ],
                                  "id": 534,
                                  "name": "convert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 581,
                                  "src": "5604:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
                                    "typeString": "function (bytes32) pure returns (uint256)"
                                  }
                                },
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5604:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "38",
                                "id": 541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5638:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              "src": "5604:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "|",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 544,
                                    "name": "blockHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "5650:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 550,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 549,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 545,
                                        "name": "_index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 499,
                                        "src": "5660:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5669:1:2",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "5660:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5673:1:2",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "5660:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5650:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 543,
                                "name": "convert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 581,
                                "src": "5642:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
                                  "typeString": "function (bytes32) pure returns (uint256)"
                                }
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5642:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5604:72:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5599:77:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 554,
                        "nodeType": "ExpressionStatement",
                        "src": "5599:77:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "depth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "5505:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5513:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5505:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 556,
                  "initializationExpression": {
                    "assignments": [
                      515
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 515,
                        "name": "depth",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "5479:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5479:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 517,
                    "initialValue": {
                      "argumentTypes": null,
                      "id": 516,
                      "name": "priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "5493:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5479:24:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "5517:7:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "depth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "5517:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 523,
                    "nodeType": "ExpressionStatement",
                    "src": "5517:7:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5475:212:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 558,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "5710:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 559,
                            "name": "priceDepth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "5714:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5710:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5703:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": "uint16"
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5703:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "5735:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                              "typeString": "struct StampCollectible.Stamp memory"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "5735:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5728:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": "uint16"
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5728:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5703:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 503,
                  "id": 567,
                  "nodeType": "Return",
                  "src": "5696:52:2"
                }
              ]
            },
            "documentation": "@dev Calculate the new NFT price based on demand and randomness based on past block hashes\n@notice Market value is artificially generated for the game using the entropy found in past block hashes\n@param _index NFT index in storage\n@return uint16 NFt new estimate market price",
            "id": 569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "5350:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5349:16:2"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "5389:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5388:8:2"
            },
            "scope": 976,
            "src": "5329:426:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "5969:32:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 577,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "5991:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5986:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 575,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "5979:15:2"
                }
              ]
            },
            "documentation": "@dev Helper function to convert a bytes32 to uint\n@param _b bytes32 data hash\n@return uint uint representation of _b",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5928:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5927:12:2"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5963:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5962:6:2"
            },
            "scope": 976,
            "src": "5911:90:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "6425:488:2",
              "statements": [
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "name": "collectible",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "6435:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 594,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "6435:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "costMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "6506:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "_priceFinney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "6489:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1643,
                          "src": "6489:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6489:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "maxClones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "6546:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6577:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6604:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 596,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "6462:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$345_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "price",
                      "maxClones",
                      "inWild",
                      "clonedFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6462:154:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6435:181:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "6626:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1421,
                      "src": "6626:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1398_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6626:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "6626:23:2"
                },
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "6659:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6659:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "6677:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "6677:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1398_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6659:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 617,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "6708:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 619,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6715:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6708:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 620,
                      "name": "collectible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "6726:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "6708:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "6708:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "6747:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 624,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6764:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6747:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6775:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6747:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:32:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "6806:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6806:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6818:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "_priceFinney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "6827:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 629,
                      "name": "MintedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "6794:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6794:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "EmitStatement",
                  "src": "6789:51:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 637,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "6875:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6875:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6887:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "6896:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 636,
                      "name": "mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2522,
                      "src": "6858:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6858:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "6851:55:2"
                }
              ]
            },
            "documentation": "@dev Mint a Gen0 stamp\n@notice This function can only be called by the contract owner\n@param _priceFinney Initial NFT price in finney\n@param _tokenURI URI of the associated digital collectible art\n@return bool true if Gen0 NFT is minted",
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 588,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 587,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1118,
                  "src": "6369:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6369:10:2"
              },
              {
                "arguments": null,
                "id": 590,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 589,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "6388:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6388:13:2"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "name": "_priceFinney",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "6307:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6307:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "6329:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6306:47:2"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "6419:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6418:6:2"
            },
            "scope": 976,
            "src": "6293:620:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "7214:1239:2",
              "statements": [
                {
                  "assignments": [
                    656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 656,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "7228:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 655,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "7228:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 657,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "7250:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 659,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 658,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 648,
                      "src": "7257:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7250:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7228:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 662,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7288:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clonedFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 344,
                          "src": "7288:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7308:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7288:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473",
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7311:49:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        },
                        "value": "You can only generate new stamps from Gen0 NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        }
                      ],
                      "id": 661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7280:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7280:81:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "7280:81:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7383:33:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 670,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "7384:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                                }
                              },
                              "id": 672,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 671,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 646,
                                "src": "7393:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7384:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                                "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                              }
                            },
                            "id": 674,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 673,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "7401:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7384:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                              "typeString": "struct StampCollectible.ClonedStamp storage ref"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 347,
                          "src": "7384:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520616c7265616479206f776e2074686973207374616d70",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7418:28:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        },
                        "value": "You already own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        }
                      ],
                      "id": 669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7375:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7375:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "7375:72:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7486:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 681,
                                "name": "stamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 656,
                                "src": "7469:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                                  "typeString": "struct StampCollectible.Stamp storage pointer"
                                }
                              },
                              "id": 682,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inWild",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 342,
                              "src": "7469:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1715,
                            "src": "7469:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7469:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 686,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7492:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxClones",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 340,
                          "src": "7492:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7469:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617820636c6f6e65732068617665206265656e2072656163686564",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7509:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e89663b6777778d57a2e2042652daa0b1100c2951eef4d2097cc1cdec392f0b",
                          "typeString": "literal_string \"Max clones have been reached\""
                        },
                        "value": "Max clones have been reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e89663b6777778d57a2e2042652daa0b1100c2951eef4d2097cc1cdec392f0b",
                          "typeString": "literal_string \"Max clones have been reached\""
                        }
                      ],
                      "id": 680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7461:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "7461:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2772,
                            "src": "7562:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7562:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 695,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7575:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 338,
                          "src": "7575:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7562:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7588:18:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "7554:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7554:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "7554:53:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 701,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "7621:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "7621:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7653:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 704,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 656,
                            "src": "7636:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "7636:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1715,
                        "src": "7636:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7636:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7621:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "7621:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 711,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "7669:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 338,
                      "src": "7669:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 720,
                          "name": "costMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "7718:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 716,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "7703:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 715,
                                "name": "getNFTPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "7691:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint16_$",
                                  "typeString": "function (uint256) view returns (uint16)"
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7691:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7683:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7683:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1643,
                        "src": "7683:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7683:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7669:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "7669:64:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 724,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "7795:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1421,
                      "src": "7795:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1398_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7795:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "7795:23:2"
                },
                {
                  "assignments": [
                    730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 730,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "7832:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7832:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 731,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "7847:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1398_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "7847:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1398_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1398_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7847:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7832:36:2"
                },
                {
                  "assignments": [
                    736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 736,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "7882:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 735,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "7882:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 744,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 738,
                          "name": "stamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "7940:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                            "typeString": "struct StampCollectible.Stamp storage pointer"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 338,
                        "src": "7940:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7980:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8007:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "8038:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 737,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "7909:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$345_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "price",
                      "maxClones",
                      "inWild",
                      "clonedFrom"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7909:152:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7882:179:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 745,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "8075:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 747,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 746,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8082:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8075:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 748,
                      "name": "clonedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "8093:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "8075:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "8075:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "8118:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 753,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8135:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8118:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8146:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8118:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "8118:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 758,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "8170:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8178:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 757,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "8164:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8164:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "8164:22:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 762,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "8200:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 765,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "8209:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8200:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 766,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 764,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "8217:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8200:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 347,
                      "src": "8200:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8235:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8200:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "8253:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 774,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 772,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "8262:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8253:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 775,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 773,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "8270:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8253:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "8253:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "8290:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8253:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "8253:44:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 781,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "8391:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 782,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8399:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 783,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "8408:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8408:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 780,
                      "name": "NewStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "8382:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "EmitStatement",
                  "src": "8377:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 787,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 730,
                    "src": "8439:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 788,
                  "nodeType": "Return",
                  "src": "8432:14:2"
                }
              ]
            },
            "documentation": "@dev Allow to buy a cloned stamp from minted Gen0 NFTs\n@param _tokenId Gen0 NFT index in storage\n@return uint tokenId corresponding to the cloned NFT",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 651,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 650,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "7177:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7177:13:2"
              }
            ],
            "name": "buyStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "7120:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7120:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 648,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "7136:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7136:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7119:34:2"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "7208:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7208:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7207:6:2"
            },
            "scope": 976,
            "src": "7102:1351:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "8735:1179:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 800,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "8757:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                              }
                            },
                            "id": 803,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 801,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2772,
                                "src": "8766:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8766:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8757:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                              "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                            }
                          },
                          "id": 805,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 804,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "8778:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8757:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                            "typeString": "struct StampCollectible.ClonedStamp storage ref"
                          }
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 347,
                        "src": "8757:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220646f6573206e6f74206f776e2074686973207374616d70",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8795:30:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98a0de758a18418f7091750474be68c56d83f88f70c4910d8cf2dc0966b4ea31",
                          "typeString": "literal_string \"User does not own this stamp\""
                        },
                        "value": "User does not own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98a0de758a18418f7091750474be68c56d83f88f70c4910d8cf2dc0966b4ea31",
                          "typeString": "literal_string \"User does not own this stamp\""
                        }
                      ],
                      "id": 799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "8749:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8749:77:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "8749:77:2"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "8840:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 810,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 345,
                        "src": "8840:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 815,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 812,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "8862:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 814,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 813,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "8869:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8862:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$345_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8840:38:2"
                },
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "8892:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 816,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8892:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 820,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 818,
                      "name": "stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "8909:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp storage pointer"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 338,
                    "src": "8909:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8892:28:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 823,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2820,
                                "src": "8950:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StampCollectible_$976",
                                  "typeString": "contract StampCollectible"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StampCollectible_$976",
                                  "typeString": "contract StampCollectible"
                                }
                              ],
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8942:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8942:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8942:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 826,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "8967:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8942:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8975:70:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc95aee24d98acbfb7840645da877cc64dd21aba0128b85d0153a748ef4f84fe",
                          "typeString": "literal_string \"Prize pot is almost empty so it is no longer possible to sell stamps\""
                        },
                        "value": "Prize pot is almost empty so it is no longer possible to sell stamps"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc95aee24d98acbfb7840645da877cc64dd21aba0128b85d0153a748ef4f84fe",
                          "typeString": "literal_string \"Prize pot is almost empty so it is no longer possible to sell stamps\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "8934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8934:112:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "8934:112:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9060:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 342,
                      "src": "9060:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9092:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 834,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "9075:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 342,
                          "src": "9075:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1691,
                        "src": "9075:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9075:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9060:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "9060:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 841,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "9108:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$345_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 843,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 338,
                      "src": "9108:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 850,
                          "name": "costMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "9157:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 846,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 792,
                                  "src": "9142:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 845,
                                "name": "getNFTPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 569,
                                "src": "9130:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint16_$",
                                  "typeString": "function (uint256) view returns (uint16)"
                                }
                              },
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9130:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9122:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9122:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1643,
                        "src": "9122:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9122:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9108:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "9108:64:2"
                },
                {
                  "assignments": [
                    855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 855,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 910,
                      "src": "9187:31:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                        "typeString": "struct StampCollectible.ClonedStamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 854,
                        "name": "ClonedStamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 350,
                        "src": "9187:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                          "typeString": "struct StampCollectible.ClonedStamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 862,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "9221:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                        }
                      },
                      "id": 859,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 857,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "9230:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9230:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9221:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$350_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                      }
                    },
                    "id": 861,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 860,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 792,
                      "src": "9242:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9221:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClonedStamp_$350_storage",
                      "typeString": "struct StampCollectible.ClonedStamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9187:64:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 863,
                        "name": "clonedStamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "9265:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                          "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 347,
                      "src": "9265:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9285:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9265:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 868,
                  "nodeType": "ExpressionStatement",
                  "src": "9265:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 870,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9337:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9337:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 869,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2452,
                        2183
                      ],
                      "referencedDeclaration": 2183,
                      "src": "9331:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9331:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "9331:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 874,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "9371:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 877,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 875,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9388:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9388:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9371:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9411:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9371:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "9371:45:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "9448:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9448:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 884,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "9460:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 885,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9470:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9470:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 881,
                      "name": "BurnedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "9436:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "EmitStatement",
                  "src": "9431:59:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9504:34:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 889,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "9511:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$345_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 892,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 890,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "9518:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$350_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 891,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 349,
                        "src": "9518:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9511:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$345_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "9504:34:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "outstandingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "9807:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 898,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "9826:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9826:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9807:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 904,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "9875:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 899,
                            "name": "outstandingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "9840:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 902,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 900,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2772,
                              "src": "9859:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9859:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9840:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1715,
                        "src": "9840:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9840:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9807:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 907,
                  "nodeType": "ExpressionStatement",
                  "src": "9807:75:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9903:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 798,
                  "id": 909,
                  "nodeType": "Return",
                  "src": "9896:11:2"
                }
              ]
            },
            "documentation": "@dev Allow to sell an owned stamp and profit/loose based on current market price\n@param _tokenId Gen0 NFT index in storage\n@return bool true if processed",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 795,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 794,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "8698:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8698:13:2"
              }
            ],
            "name": "sellStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8665:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8665:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8664:18:2"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "8729:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8729:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8728:6:2"
            },
            "scope": 976,
            "src": "8646:1268:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "10115:8:2",
              "statements": []
            },
            "documentation": "@dev Fallback function to allow the contract accept deposits in ETH\n@notice deposits can be crodwsourced to fund the Prize pot",
            "id": 917,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": null,
                "id": 914,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 913,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "10101:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10101:13:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10081:2:2"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10115:0:2"
            },
            "scope": 976,
            "src": "10072:51:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 921,
            "name": "outstandingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 976,
            "src": "10348:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 920,
              "keyType": {
                "id": 918,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "10357:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "10348:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 919,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "10368:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a user withdraw her outstanding balance from selling stamps in the market\n TODO: this has to be added as an upgrade",
            "id": 927,
            "name": "WithdrawnBalance",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "10575:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10575:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "10598:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10598:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10574:39:2"
            },
            "src": "10552:62:2"
          },
          {
            "body": {
              "id": 974,
              "nodeType": "Block",
              "src": "10900:308:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 935,
                            "name": "outstandingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "10915:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 938,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 936,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2772,
                              "src": "10934:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10934:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10915:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10948:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10915:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f207769746864726177",
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10951:51:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0bd4524f4d21f77c17de3fd64ae0008b7b8f48a2838225ba2defe2a9296ed2f",
                          "typeString": "literal_string \"You dont have any outstanding balance to withdraw\""
                        },
                        "value": "You dont have any outstanding balance to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0bd4524f4d21f77c17de3fd64ae0008b7b8f48a2838225ba2defe2a9296ed2f",
                          "typeString": "literal_string \"You dont have any outstanding balance to withdraw\""
                        }
                      ],
                      "id": 934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2775,
                        2776
                      ],
                      "referencedDeclaration": 2776,
                      "src": "10907:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10907:96:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "10907:96:2"
                },
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 974,
                      "src": "11010:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11010:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 950,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 946,
                      "name": "outstandingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "11024:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 949,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 947,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "11043:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11043:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11024:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11010:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 951,
                        "name": "outstandingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 921,
                        "src": "11061:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 954,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "11080:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11080:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11061:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11094:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11061:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "11061:34:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "11127:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11127:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 961,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "11139:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 958,
                      "name": "WithdrawnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "11110:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11110:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "EmitStatement",
                  "src": "11105:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "11176:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2772,
                          "src": "11156:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11156:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11156:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11156:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "11156:27:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11197:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 933,
                  "id": 973,
                  "nodeType": "Return",
                  "src": "11190:11:2"
                }
              ]
            },
            "documentation": "TODO: to be addded in an upgraded version of the contract",
            "id": 975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 930,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 929,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1561,
                  "src": "10871:13:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10871:13:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10861:2:2"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "10894:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10894:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10893:6:2"
            },
            "scope": 976,
            "src": "10844:364:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 977,
        "src": "1018:10192:2"
      }
    ],
    "src": "0:11211:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x51a8f6a84a50f4da36896f422d3ec8416e819501f8ee32dfed22316b472f0797": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "MintedStamp",
          "type": "event",
          "signature": "0x51a8f6a84a50f4da36896f422d3ec8416e819501f8ee32dfed22316b472f0797"
        },
        "0x550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "NewStamp",
          "type": "event",
          "signature": "0x550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be"
        },
        "0x106852634153ba32c7db4c08ec749c468343ebd82b312b849a331f58a164867a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "clonedTokenId",
              "type": "uint256"
            }
          ],
          "name": "BurnedStamp",
          "type": "event",
          "signature": "0x106852634153ba32c7db4c08ec749c468343ebd82b312b849a331f58a164867a"
        },
        "0x76a3496ed122399b6d8c356545cf5095195fd823dc634be8fcd7b275976679a7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "WithdrawnBalance",
          "type": "event",
          "signature": "0x76a3496ed122399b6d8c356545cf5095195fd823dc634be8fcd7b275976679a7"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event",
          "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event",
          "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event",
          "signature": "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event",
          "signature": "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e"
        }
      },
      "links": {},
      "address": "0x6Cf1B53fadb29Dd535C783da9F779472E8dD859d",
      "transactionHash": "0x71763b9eebdcf48fa82b024eb0115b12d0443f1d57a37d2e5928447566ac46c6"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-01T08:46:47.185Z",
  "devdoc": {
    "author": "santteegt",
    "details": "Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "buyStamp(address,uint256)": {
        "details": "Allow to buy a cloned stamp from minted Gen0 NFTs",
        "params": {
          "_tokenId": "Gen0 NFT index in storage"
        },
        "return": "uint tokenId corresponding to the cloned NFT"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "initialize(uint256,uint8,uint256,string,string)": {
        "details": "Initialize current and derived contracts",
        "params": {
          "_costMultiplier": "Cost multiplier to transform NFT price (in finney) to ETH",
          "_maxClones": "Maximum number of clones allowed per Gen0 NFT",
          "_name": "NFT name",
          "_priceDepth": "Game parameter thah establish the depth of blockhashes to scan during NFT price estimate",
          "_symbol": "NFT symbol"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(uint256,string)": {
        "details": "Mint a Gen0 stamp",
        "params": {
          "_priceFinney": "Initial NFT price in finney",
          "_tokenURI": "URI of the associated digital collectible art"
        },
        "return": "bool true if Gen0 NFT is minted"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "sellStamp(uint256)": {
        "details": "Allow to sell an owned stamp and profit/loose based on current market price",
        "params": {
          "_tokenId": "Gen0 NFT index in storage"
        },
        "return": "bool true if processed"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "A Nifties exchange game to incentivize tourism and onboard to crypto"
  },
  "userdoc": {
    "methods": {
      "mint(uint256,string)": {
        "notice": "This function can only be called by the contract owner"
      },
      "withdraw()": {
        "notice": "TODO: to be addded in an upgraded version of the contract"
      }
    },
    "notice": "NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand"
  }
}