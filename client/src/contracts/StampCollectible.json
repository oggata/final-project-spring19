{
  "fileName": "StampCollectible.sol",
  "contractName": "StampCollectible",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"tabookey-gasless/contracts/GsnUtils.sol\";\nimport \"tabookey-gasless/contracts/IRelayHub.sol\";\nimport \"tabookey-gasless/contracts/RelayRecipient.sol\";\n\n\n/// @title A Nifties exchange game to incentivize tourism and onboard to crypto\n/// @author santteegt\n/// @notice NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand\n/// @dev Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK\n/// @dev Contract can be used with the GSN\ncontract StampCollectible is Initializable, RelayRecipient, Pausable, ERC721MetadataMintable {\n    /// Library used to perform unit increment/decrements\n    using Counters for Counters.Counter;\n    /// Library to avoid overflow/underflow bugs\n    using SafeMath for uint256;\n\n    /// Data structure that represents a NFT Tourist stamp\n    struct Stamp {\n        uint256 price;\n        uint256 maxClones;\n        uint256 inWild;\n        uint256 clonedFrom;\n    }\n\n    struct ClonedStamp {\n        bool owned;\n        uint tokenId;\n    }\n\n    /// Tracks the total minted stamps\n    Counters.Counter public totalMinted;\n    /// Store all minted stamps\n    // Stamp[] public stamps;\n    mapping (uint256 => Stamp) public stamps;\n    ///\n    mapping (uint256 => bool) public ownedTokensIndex;\n    /// Game parameter to provide an scarce amount of stamps\n    uint256 public maxClones;\n    /// Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n    // uint8 constant private PRICEDEPTH = 255;\n    uint8 private priceDepth;\n    /// Cost multiplier to transform NFT price (in finney) to ETH\n    // uint256 constant private COSTMULTIPLIER = 1000000000000;\n    uint256 private costMultiplier;\n\n    /// Maintains a record of minted NFTS and ownership per account\n    // mapping (address => mapping (uint256 => bool)) public balances;\n    mapping (address => mapping (uint256 => ClonedStamp)) public balances;\n\n    /// Verify that the priceDepth parameters is within the max No. of historical blocks a contract can track\n    modifier checkMaxBlockDepth(uint _value) {\n        require(_value > 0 && _value <= 255, \"Price Depth parameter must be within then range [1-255]\");\n        _;\n    }\n\n    /// Triggered when a new Gen0 stamp is minted by the contract owner\n    event MintedStamp(address indexed owner, uint256 tokenId, uint256 price);\n    /// Triggered when a stamp is cloned and minted to a user\n    event NewStamp(address indexed owner, uint256 tokenId, uint256 price);\n    /// Triggered when a cloned stamp is returned to the contract and thus burned\n    event BurnedStamp(address indexed owner, uint256 tokenId, uint256 clonedTokenId);\n\n    /// @dev This constructor was deprecated in favour of the initialize function\n    /// @dev so the contract can be upgraded through a proxy contract\n    // constructor(uint256 _maxClones) ERC721Metadata(\"CryptoStamps\", \"STAMPS\") public {\n    //     maxClones = _maxClones;\n    //     if(stamps.length == 0) {\n    //         Stamp memory _dummy = Stamp({\n    //             price: 0, maxClones: 0, inWild: 0, clonedFrom: 0});\n    //         stamps.push(_dummy);\n    //     }\n    // }\n\n    /** @dev Initialize current and derived contracts\n      * @param _maxClones Maximum number of clones allowed per Gen0 NFT\n      * @param _priceDepth Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n      * @param _costMultiplier Cost multiplier to transform NFT price (in finney) to ETH\n      * @param _name NFT name\n      * @param _symbol NFT symbol\n      */\n    function initialize(uint256 _maxClones, uint8 _priceDepth,\n        uint256 _costMultiplier, string memory _name, string memory _symbol)\n        public\n        initializer // ensures that the contract only initilizes once\n        checkMaxBlockDepth(_maxClones) {\n\n            Pausable.initialize(msg.sender);\n            if(!ERC721._hasBeenInitialized()) {\n                ERC721.initialize();\n            }\n            if(!ERC721Metadata._hasBeenInitialized()) {\n                ERC721Metadata.initialize(_name, _symbol);\n            }\n            ERC721MetadataMintable.initialize(msg.sender);\n\n            maxClones = _maxClones;\n            priceDepth = _priceDepth;\n            costMultiplier = _costMultiplier;\n\n            Stamp memory _dummy = Stamp({\n                price: 0, maxClones: 0, inWild: 0, clonedFrom: 0});\n            stamps[0] = _dummy;\n    }\n\n    /** @dev Calculate the new NFT price based on demand and randomness based on past block hashes\n      * @notice Market value is artificially generated for the game using the entropy found in past block hashes\n      * @param _index NFT index in storage\n      * @return uint16 NFt new estimate market price\n      */\n    function getNFTPrice(uint256 _index) internal view returns (uint16) {\n        Stamp memory stamp = stamps[_index];\n        uint256 x = 0;\n        for(uint8 depth = priceDepth; depth > 0 ; depth--) {\n          bytes32 blockHash = blockhash(block.number-depth);\n          x += convert(blockHash[_index * 2]) << 8 | convert(blockHash[_index * 2 + 1]);\n        }\n        return uint16(x / priceDepth) + uint16(stamp.inWild);\n    }\n\n    /** @dev Helper function to convert a bytes32 to uint\n      * @param _b bytes32 data hash\n      * @return uint uint representation of _b\n      */\n    function convert(bytes32 _b) internal pure returns (uint) {\n        return uint(_b);\n    }\n\n    /** @dev Mint a Gen0 stamp\n      * @notice This function can only be called by the contract owner\n      * @param _priceFinney Initial NFT price in finney\n      * @param _tokenURI URI of the associated digital collectible art\n      * @return bool true if Gen0 NFT is minted\n      */\n    function mint(uint256 _priceFinney, string memory _tokenURI) public\n        onlyMinter\n        whenNotPaused\n        returns (bool) {\n        Stamp memory collectible = Stamp({\n            price: _priceFinney.mul(costMultiplier),\n            maxClones: maxClones,\n            inWild: 0,\n            clonedFrom: 0\n        });\n        totalMinted.increment();\n        uint256 tokenId = totalMinted.current();\n        stamps[tokenId] = collectible;\n        ownedTokensIndex[tokenId] = true;\n        emit MintedStamp(msg.sender, tokenId, _priceFinney);\n\n        return mintWithTokenURI(msg.sender, tokenId, _tokenURI);\n    }\n\n    /** @dev Allow to buy a cloned stamp from minted Gen0 NFTs\n      * @param _tokenId Gen0 NFT index in storage\n      * @return uint tokenId corresponding to the cloned NFT\n      */\n    function buyStamp(address sender, uint256 _tokenId) public payable\n        whenNotPaused\n        returns (uint) {\n            Stamp storage stamp = stamps[_tokenId];\n            require(stamp.clonedFrom == 0, \"You can only generate new stamps from Gen0 NFTs\");\n            require(!balances[sender][_tokenId].owned, \"You already own this stamp\");\n            require(stamp.inWild.add(1) <= stamp.maxClones, \"Max clones have been reached\");\n            require(msg.value >= stamp.price, \"Not enough funds\");\n            stamp.inWild = stamp.inWild.add(1);\n            stamp.price = uint256(getNFTPrice(_tokenId)).mul(costMultiplier);\n\n            /// mint and increase total minted\n            totalMinted.increment();\n            uint tokenId = totalMinted.current();\n            Stamp memory clonedStamp = Stamp({\n                price: stamp.price,\n                maxClones: 0,\n                inWild: 0,\n                clonedFrom: _tokenId\n            });\n            stamps[tokenId] = clonedStamp;\n            ownedTokensIndex[tokenId] = true;\n            _mint(sender, tokenId);\n            balances[sender][_tokenId].owned = true;\n            balances[sender][_tokenId].tokenId = tokenId;\n\n            // emit NewStamp(msg.sender, _tokenId, stamp.price);\n            emit NewStamp(sender, tokenId, msg.value);\n            return tokenId;\n    }\n\n    /** @dev Allow to sell an owned stamp and profit/loose based on current market price\n      * @param _tokenId Gen0 NFT index in storage\n      * @return bool true if processed\n      */\n    function sellStamp(uint256 _tokenId) public\n        whenNotPaused\n        returns (bool) {\n            address sender = getSender();\n            require(balances[sender][_tokenId].owned, \"User does not own this stamp\");\n            Stamp storage stamp = stamps[_tokenId];\n            uint256 payout = stamp.price;\n            require(address(this).balance >= payout, \"Prize pot is almost empty so it is no longer possible to sell stamps\");\n            stamp.inWild = stamp.inWild.sub(1);\n            stamp.price = uint256(getNFTPrice(_tokenId)).mul(costMultiplier);\n\n            ClonedStamp storage clonedStamp = balances[sender][_tokenId];\n            clonedStamp.owned = false;\n\n            // burn token\n            _burn(clonedStamp.tokenId);\n            ownedTokensIndex[clonedStamp.tokenId] = false;\n\n            emit BurnedStamp(sender, _tokenId, clonedStamp.tokenId);\n            delete stamps[clonedStamp.tokenId];\n            // TODO: disabled when upgrading the contract\n            // msg.sender.transfer(payout); // This approach can block the asset if owned by a bad actor (contract account)\n            // TODO: to be addded in an upgraded version of the contract\n            outstandingBalance[sender] = outstandingBalance[sender].add(payout);\n            return true;\n    }\n\n    /** @dev Fallback function to allow the contract accept deposits in ETH\n      * @notice deposits can be crodwsourced to fund the Prize pot\n      */\n    function () external payable whenNotPaused {\n\n    }\n\n    /// Maintains a record of outstanding balance owned to users before withdrawal\n    /// Required to implement the Pull vs Push design pattern for payments\n    /// TODO: to be included later in an upgradable contract\n    mapping (address => uint) public outstandingBalance;\n\n    /// Triggered when a user withdraw her outstanding balance from selling stamps in the market\n    /// TODO: this has to be added as an upgrade\n    event WithdrawnBalance(address indexed owner, uint256 amount);\n\n    /** @dev Allow users to withdraw funds from sold stamps. Required to enable a pull vs push design pattern\n      * @return bool true if processed\n      */\n    /// TODO: to be addded in an upgraded version of the contract\n    function withdraw() public whenNotPaused returns (bool) {\n        address sender = getSender();\n    \trequire(outstandingBalance[sender] > 0, \"You dont have any outstanding balance to withdraw\");\n    \tuint amount = outstandingBalance[sender];\n    \toutstandingBalance[sender] = 0;\n        hasWithdrawn[sender] = true;\n        emit WithdrawnBalance(sender, amount);\n        msg.sender.transfer(amount);\n    \treturn true;\n    }\n\n    /// Logs if a user already withdraw some balance from the pot\n    mapping (address => bool) public hasWithdrawn;\n\n    /// Verifies that a call is done by the relayer\n    modifier onlyByRelayer() {\n        require(msg.sender == getHubAddr(), \"Transaction can only be perfomed by the relayer\");\n        _;\n    }\n\n    /// Triggered when a stamp is airdroped through the relayer\n    event AirdropedStamp(address indexed sender, uint tokenId);\n\n    /**\n     * @dev Airdrop a stamp throguh a relayer in the GSN\n     * param _tokenId Gen0 NFT index in storage\n     * @return uint tokenId corresponding to the cloned NFT\n     */\n    function airdropStamp(uint256 _tokenId) public\n        whenNotPaused\n        onlyByRelayer\n        returns (uint) {\n            address sender = getSender();\n            Stamp storage stamp = stamps[_tokenId];\n            require(stamp.clonedFrom == 0, \"You can only generate new stamps from Gen0 NFTs\");\n            require(!balances[sender][_tokenId].owned, \"You already own this stamp\");\n            require(stamp.inWild.add(1) <= stamp.maxClones, \"Sorry! This Stamp is not currently available\");\n            stamp.inWild = stamp.inWild.add(1);\n\n            /// mint and increase total minted\n            totalMinted.increment();\n            uint tokenId = totalMinted.current();\n            Stamp memory clonedStamp = Stamp({\n                price: stamp.price,\n                maxClones: 0,\n                inWild: 0,\n                clonedFrom: _tokenId\n            });\n            stamps[tokenId] = clonedStamp;\n            ownedTokensIndex[tokenId] = true;\n            _mint(sender, tokenId);\n            balances[sender][_tokenId].owned = true;\n            balances[sender][_tokenId].tokenId = tokenId;\n\n            emit AirdropedStamp(sender, tokenId);\n            emit NewStamp(sender, tokenId, stamp.price);\n            return tokenId;\n    }\n\n    /** @dev It's an error code designed to help the DApp identify the reason. Low negatives are reserved for known issues but you can add your own errors in your contract\n      * @param _relay RelayHub address\n      * @param _from Tx sender\n      * @param  _encodedFunction encoded Function being called\n      * @param _transactionFee tx fee\n      * @param _gasPrice tx gas price\n      * @param _gasLimit tx gas limit\n      * @param _nonce tx nonce\n      * @param _approvalData tx data\n      * @param _maxPossibleCharge max possible charge per tx\n      * @return uint256 0 means you accept sponsoring the relayed transaction. Anything else indicates rejection.\n      * @return bytes Error message\n      */\n    function acceptRelayedCall(address _relay, address _from, bytes calldata _encodedFunction,\n            uint256 _transactionFee, uint256 _gasPrice, uint256 _gasLimit, uint256 _nonce,\n            bytes calldata _approvalData, uint256 _maxPossibleCharge)\n            external view returns (uint256, bytes memory) {\n\n                if(hasWithdrawn[_from]) {\n                    return (10, \"User has already withdrawn some balance\");\n                }\n                return (0, \"\");\n    }\n\n    /** @dev Inform of the maximum cost the call may have, and can be used to charge the user in advance.\n      * @notice This is useful if the user may spend their allowance as part of the call, so you can lock some funds here.\n      * @param _context tx data\n      * @return bytes32 the maximum cost the call may have\n      */\n    function preRelayedCall(bytes calldata _context) /*relayHubOnly*/ external returns (bytes32) {\n        return bytes32(uint(123456));\n    }\n\n    /** @dev The success flag indicates whether it was relayed successfully or not. This is where you would usually subtract from the user's remaining credit\n      * @param _context tx data\n      * @param _success True if tx was relayed\n      * @param _actualCharge charged value\n      * @param _preRetVal preRetVal\n      */\n    function postRelayedCall(bytes calldata _context, bool _success, uint _actualCharge, bytes32 _preRetVal) /*relayHubOnly*/ external {\n    }\n\n    function updateRelayHub(IRelayHub _rhub) public onlyMinter {\n        setRelayHub(_rhub);\n    }\n}\n",
  "sourcePath": "contracts/StampCollectible.sol",
  "sourceMap": "1219:14341:20:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1219:14341:20;;;;;;;;;;",
  "deployedSourceMap": "1219:14341:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10238:51;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;854:1;10238:51:20;1219:14341;870:131:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:131:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;870:131:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1304:83:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:83:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;1304:83:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4027:151:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4027:151:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4027:151:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3450:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3450:292:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3450:292:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1989:508:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1989:508:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1989:508:24;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1989:508:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1989:508:24;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1989:508:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1989:508:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15464:94:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15464:94:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15464:94:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;5583:180:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5583:180:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5583:180:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8790:1290:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8790:1290:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8790:1290:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11010:423;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11010:423:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1323:115:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1323:115:8;;;:::i;:::-;;6396:132:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6396:132:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6396:132:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;548:107:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;548:107:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;741:321:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;741:321:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;741:321:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;741:321:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;741:321:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;741:321:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;741:321:11;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;741:321:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;741:321:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;741:321:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;741:321:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;840:209:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;840:209:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;840:209:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;840:209:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;840:209:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;840:209:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;840:209:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;607:76:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:76:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2745:114:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2745:114:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11505:45:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11505:45:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11505:45:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2852:177:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2852:177:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2852:177:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10514:51:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10514:51:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10514:51:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;757:75:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:75:3;;;:::i;:::-;;2474:160:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2474:160:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2474:160:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1956:49:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:49:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1956:49:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;895:93:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:93:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6437:620:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6437:620:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6437:620:20;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6437:620:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6437:620:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6437:620:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6437:620:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14851:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14851:138:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14851:138:20;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14851:138:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14851:138:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14851:138:20;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1937:205:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1937:205:10;;;:::i;:::-;;661:90:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:90:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;661:90:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;14030:486:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14030:486:20;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;14030:486:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14030:486:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14030:486:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14030:486:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14030:486:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14030:486:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14030:486:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;14030:486:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:113:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1120:113:8;;;:::i;:::-;;2072:24:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:24:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1495:87:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1495:87:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;1495:87:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:90:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;661:90:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;757:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:75:2;;;:::i;:::-;;7246:1351:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7246:1351:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4470:213:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4470:213:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4470:213:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1799:35:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1799:35:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;548:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;548:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1863:120:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1863:120:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7233:211:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7233:211:10;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7233:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7233:211:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7233:211:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7233:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7233:211:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;338:203:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;338:203:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;338:203:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1781:151:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1781:151:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1781:151:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;1781:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4286:864:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4286:864:20;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4286:864:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4286:864:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4286:864:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4286:864:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4286:864:20;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4286:864:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4286:864:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4286:864:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4286:864:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;2583:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2583:69:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2583:69:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1902:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1902:40:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1902:40:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12064:1253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12064:1253:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12064:1253:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15320:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15320:138:20;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;15320:138:20;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15320:138:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15320:138:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15320:138:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2865:613:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2865:613:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;2865:613:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5004:145:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5004:145:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5004:145:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;870:131:6;938:4;961:20;;;:33;982:11;961:33;;;;;;;;;;;;;;;;;;;;;;;;;;;954:40;;;;870:131;;;;:::o;1304:83:11:-;1343:13;1375:5;;;1368:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:83;;:::o;4027:151:10:-;4086:7;4113:16;4121:7;4113;:16;;:::i;:::-;4105:25;;;;;;;;4147:15;;;:24;4163:7;4147:24;;;;;;;;;;;;;;;;;;;;;4140:31;;;;4027:151;;;;:::o;3450:292::-;3513:13;3529:16;3537:7;3529;:16;;:::i;:::-;3513:32;;3569:5;3563:11;;:2;:11;;;;3555:20;;;;;;;;3607:5;3593:19;;:10;:19;;;:58;;;;3616:35;3633:5;3640:10;3616:16;:35;;:::i;:::-;3593:58;3585:67;;;;;;;;3690:2;3663:15;;;:24;3679:7;3663:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3727:7;3723:2;3707:28;;3716:5;3707:28;;;;;;;;;;;;3450:292;;;;:::o;1989:508:24:-;2079:7;2098:14;2115:10;2098:27;;2153:12;:10;:12;;:::i;:::-;2139:26;;:10;:26;;;2135:333;;;2407:50;2428:7;2454:2;2437:7;:14;:19;2407:20;:50;;:::i;:::-;2398:59;;;;2135:333;2484:6;2477:13;;;;;1989:508;;;;;;:::o;15464:94:20:-;503:20:2;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;15533:18:20;15545:5;15533:11;:18;;:::i;:::-;534:1:2;15464:94:20;;:::o;5583:180:10:-;5673:39;5692:10;5704:7;5673:18;:39;;:::i;:::-;5665:48;;;;;;;;5724:32;5738:4;5744:2;5748:7;5724:13;:32;;:::i;:::-;5583:180;;;;:::o;8790:1290:20:-;8873:4;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;8893:14:20;8910:11;:9;:11;;:::i;:::-;8893:28;;8943:8;;;:16;8952:6;8943:16;;;;;;;;;;;;;;;;;:26;8960:8;8943:26;;;;;;;;;;;;;:32;;;;;;;;;;;;8935:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9022:19;9044:6;;;:16;9051:8;9044:16;;;;;;;;;;;;;9022:38;;9074:14;9091:5;:11;;;;;9074:28;;9149:6;9132:4;9124:21;;;:31;;9116:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9257:19;9274:1;9257:5;:12;;;;;:16;;:19;;;;:::i;:::-;9242:5;:12;;;:34;;;;;;;9304:50;9339:14;;;;9312:21;9324:8;9312:11;:21;;:::i;:::-;9304:30;;:34;;:50;;;;:::i;:::-;9290:5;:11;;;:64;;;;;;;9369:31;9403:8;;;:16;9412:6;9403:16;;;;;;;;;;;;;;;;;:26;9420:8;9403:26;;;;;;;;;;;;;9369:60;;9463:5;9443:11;:17;;;:25;;;;;;;;;;;;;;;;;;9509:26;9515:11;:19;;;;;9509:5;:26;;:::i;:::-;9589:5;9549:16;;;:37;9566:11;:19;;;;;9549:37;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;9626:6;9614:50;;;9634:8;9644:11;:19;;;;;9614:50;;;;;;;;;;;;;;;;;;;;;;;;9685:6;;;:27;9692:11;:19;;;;;9685:27;;;;;;;;;;;;9678:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10010:38;10041:6;10010:18;;;:26;10029:6;10010:26;;;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;9981:18;;;:26;10000:6;9981:26;;;;;;;;;;;;;;;;:67;;;;;;;10069:4;10062:11;;;;;;;;854:1:8;;;;;8790:1290:20;;;;:::o;11010:423::-;11060:4;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;11076:14:20;11093:11;:9;:11;;:::i;:::-;11076:28;;11148:1;11119:18;;;:26;11138:6;11119:26;;;;;;;;;;;;;;;;;;:30;11111:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11210:11;11224:18;;;:26;11243:6;11224:26;;;;;;;;;;;;;;;;;;11210:40;;11286:1;11257:18;;;:26;11276:6;11257:26;;;;;;;;;;;;;;;;:30;;;;;;;11320:4;11297:12;;;:20;11310:6;11297:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;11356:6;11339:32;;;11364:6;11339:32;;;;;;;;;;;;;;;;;;11381:10;:19;;:27;11401:6;11381:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11381:27:20;11422:4;11415:11;;;;;;854:1:8;;;11010:423:20;;:::o;1323:115:8:-;503:20:3;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;1007:7:8;;;;;;;;;;;999:16;;;;;;;;1391:5;1381:7;;:15;;;;;;;;;;;;;;;;;;1411:20;1420:10;1411:20;;;;;;;;;;;;;;;;;;;;;;1025:1;534::3;1323:115:8;:::o;6396:132:10:-;6482:39;6499:4;6505:2;6509:7;6482:39;;;;;;;;;;;;;;:16;:39;;:::i;:::-;6396:132;;;;:::o;548:107:3:-;604:4;627:21;640:7;627:8;;;:12;;:21;;;;:::i;:::-;620:28;;;;548:107;;;;:::o;741:321:11:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;840:28:11;:26;:28;;:::i;:::-;832:37;;;;;;;;888:4;880:5;;:12;;;;;;;;;;;;;:::i;:::-;;912:6;902:7;;:16;;;;;;;;;;;;;:::i;:::-;;1006:49;504:10;1025:29;;1006:18;:49;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:321:11;;;;:::o;840:209:12:-;946:4;503:20:2;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;962:18:12;968:2;972:7;962:5;:18;;:::i;:::-;990:31;1003:7;1012:8;990:12;:31;;:::i;:::-;1038:4;1031:11;;;;534:1:2;840:209:12;;;;;;:::o;607:76:8:-;646:4;669:7;;;;;;;;;;;662:14;;;;607:76;;:::o;2745:114:24:-;2787:7;2813:39;2831:10;2843:8;;2813:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2813:39:24;;;;;;:17;:39;;:::i;:::-;2806:46;;;;2745:114;;:::o;11505:45:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2852:177:10:-;2907:7;2926:13;2942:11;;;:20;2954:7;2942:20;;;;;;;;;;;;;;;;;;;;;2926:36;;2997:1;2980:19;;:5;:19;;;;2972:28;;;;;;;;3017:5;3010:12;;;;;2852:177;;;;;:::o;10514:51:20:-;;;;;;;;;;;;;;;;;;;:::o;757:75:3:-;800:25;814:10;800:13;:25;;:::i;:::-;757:75;:::o;2474:160:10:-;2529:7;2573:1;2556:19;;:5;:19;;;;2548:28;;;;;;;;2593:34;:17;;;:24;2611:5;2593:24;;;;;;;;;;;;;;;;;:32;;:34;;;:::i;:::-;2586:41;;;;2474:160;;;;:::o;1956:49:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;895:93:24:-;938:7;972:8;;;;;;;;;;;957:24;;;;895:93;;:::o;6437:620:20:-;6563:4;503:20:2;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;6579:24:20;;:::i;:::-;6606:154;;;;;;;;6633:32;6650:14;;;;6633:12;:16;;:32;;;;:::i;:::-;6606:154;;;;6690:9;;;;6606:154;;;;6721:1;6606:154;;;;6748:1;6606:154;;;;;6579:181;;6770:23;:11;;;:21;;:23;;;:::i;:::-;6803:15;6821:21;:11;;;:19;;:21;;;:::i;:::-;6803:39;;6870:11;6852:6;;;:15;6859:7;6852:15;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6919:4;6891:16;;;:25;6908:7;6891:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;6950:10;6938:46;;;6962:7;6971:12;6938:46;;;;;;;;;;;;;;;;;;;;;;;;7002:48;7019:10;7031:7;7040:9;7002:16;:48;;:::i;:::-;6995:55;;;;;;854:1:8;;;534::2;6437:620:20;;;;;:::o;14851:138::-;14935:7;14974:6;14961:21;;14954:28;;;;14851:138;;;;;:::o;1937:205:10:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1988:19:10;:17;:19;;:::i;:::-;2095:40;1303:10;2114:20;;2095:18;:40;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1937:205:10;;:::o;661:90:3:-;503:20;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;725:19;736:7;725:10;:19;;:::i;:::-;534:1;661:90;;:::o;14030:486:20:-;14317:7;14326:12;14362;;;:19;14375:5;14362:19;;;;;;;;;;;;;;;;;;;;;;;;;14359:119;;;14413:2;14405:54;;;;;;;;;;;;;;;;;;;;;;;;;;14359:119;14503:1;14495:14;;;;;;;;;;;;;;;;;;;;;;;14030:486;;;;;;;;;;;;;;;:::o;1120:113:8:-;503:20:3;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;1189:4;1179:7;;:14;;;;;;;;;;;;;;;;;;1208:18;1215:10;1208:18;;;;;;;;;;;;;;;;;;;;;;854:1;534::3;1120:113:8;:::o;2072:24:20:-;;;;;;:::o;1495:87:11:-;1536:13;1568:7;;;1561:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1495:87;;:::o;661:90:2:-;503:20;512:10;503:8;:20;;:::i;:::-;495:29;;;;;;;;725:19;736:7;725:10;:19;;:::i;:::-;534:1;661:90;;:::o;757:75::-;800:25;814:10;800:13;:25;;:::i;:::-;757:75;:::o;7246:1351:20:-;7352:4;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;7372:19:20;7394:6;;;:16;7401:8;7394:16;;;;;;;;;;;;;7372:38;;7452:1;7432:5;:16;;;;;:21;7424:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7528:8;;;:16;7537:6;7528:16;;;;;;;;;;;;;;;;;:26;7545:8;7528:26;;;;;;;;;;;;;:32;;;;;;;;;;;;7527:33;7519:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7636:5;:15;;;;;7613:19;7630:1;7613:5;:12;;;;;:16;;:19;;;;:::i;:::-;:38;;7605:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7719:5;:11;;;;;7706:9;:24;;7698:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7780:19;7797:1;7780:5;:12;;;;;:16;;:19;;;;:::i;:::-;7765:5;:12;;;:34;;;;;;;7827:50;7862:14;;;;7835:21;7847:8;7835:11;:21;;:::i;:::-;7827:30;;:34;;:50;;;;:::i;:::-;7813:5;:11;;;:64;;;;;;;7939:23;:11;;;:21;;:23;;;:::i;:::-;7976:12;7991:21;:11;;;:19;;:21;;;:::i;:::-;7976:36;;8026:24;;:::i;:::-;8053:152;;;;;;;;8084:5;:11;;;;;8053:152;;;;8124:1;8053:152;;;;8151:1;8053:152;;;;8182:8;8053:152;;;;;8026:179;;8237:11;8219:6;;;:15;8226:7;8219:15;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8290:4;8262:16;;;:25;8279:7;8262:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;8308:22;8314:6;8322:7;8308:5;:22;;:::i;:::-;8379:4;8344:8;;;:16;8353:6;8344:16;;;;;;;;;;;;;;;;;:26;8361:8;8344:26;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;8434:7;8397:8;;;:16;8406:6;8397:16;;;;;;;;;;;;;;;;;:26;8414:8;8397:26;;;;;;;;;;;;;:34;;;:44;;;;;;;8535:6;8526:36;;;8543:7;8552:9;8526:36;;;;;;;;;;;;;;;;;;;;;;;;8583:7;8576:14;;;;;;;854:1:8;;;;7246:1351:20;;;;;:::o;4470:213:10:-;4555:10;4549:16;;:2;:16;;;;4541:25;;;;;;;;4613:8;4576:18;;;:30;4595:10;4576:30;;;;;;;;;;;;;;;;;:34;4607:2;4576:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4663:2;4636:40;;4651:10;4636:40;;;4667:8;4636:40;;;;;;;;;;;;;;;;;;;;;;4470:213;;;:::o;1799:35:20:-;;;;;;;;;;;;;:::o;548:107:2:-;604:4;627:21;640:7;627:8;;;:12;;:21;;;;:::i;:::-;620:28;;;;548:107;;;;:::o;1863:120:24:-;1915:4;1938:13;:11;:13;;:::i;:::-;:23;;;1970:4;1938:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1938:38:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1938:38:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1938:38:24;;;;;;;;;;;;;;;;1931:45;;;;1863:120;;:::o;7233:211:10:-;7339:31;7352:4;7358:2;7362:7;7339:12;:31;;:::i;:::-;7388:48;7411:4;7417:2;7421:7;7430:5;7388:22;:48;;:::i;:::-;7380:57;;;;;;;;7233:211;;;;;:::o;338:203:12:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;411:28:12;:26;:28;;:::i;:::-;403:37;;;;;;;;458:36;:34;:36;;:::i;:::-;450:45;;;;;;;;505:29;527:6;505:21;:29;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;338:203:12;;;:::o;1781:151:11:-;1839:13;1872:16;1880:7;1872;:16;;:::i;:::-;1864:25;;;;;;;;1906:10;;;:19;1917:7;1906:19;;;;;;;;;;;;;1899:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:151;;;;:::o;4286:864:20:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;4534:10:20;2837:1;2828:6;:10;:27;;;;;2852:3;2842:6;:13;;2828:27;2820:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4561:31;4581:10;4561:19;:31;;:::i;:::-;4610:28;:26;:28;;:::i;:::-;4609:29;4606:86;;;4658:19;:17;:19;;:::i;:::-;4606:86;4709:36;:34;:36;;:::i;:::-;4708:37;4705:116;;;4765:41;4791:5;4798:7;4765:25;:41;;:::i;:::-;4705:116;4834:45;4868:10;4834:33;:45;;:::i;:::-;4906:10;4894:9;;:22;;;;;;;4943:11;4930:10;;:24;;;;;;;;;;;;;;;;;;4985:15;4968:14;;:32;;;;;;;5015:19;;:::i;:::-;5037:74;;;;;;;;5068:1;5037:74;;;;5082:1;5037:74;;;;5093:1;5037:74;;;;5108:1;5037:74;;;;;5015:96;;5137:6;5125;;;:9;5132:1;5125:9;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2925:1;;1256::17;;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;4286:864:20;;;;;;;:::o;2583:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1902:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12064:1253::-;12172:4;836:7:8;;;;;;;;;;;835:8;827:17;;;;;;;;11666:12:20;:10;:12;;:::i;:::-;11652:26;;:10;:26;;;11644:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12192:14;12209:11;:9;:11;;:::i;:::-;12192:28;;12234:19;12256:6;;;:16;12263:8;12256:16;;;;;;;;;;;;;12234:38;;12314:1;12294:5;:16;;;;;:21;12286:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12390:8;;;:16;12399:6;12390:16;;;;;;;;;;;;;;;;;:26;12407:8;12390:26;;;;;;;;;;;;;:32;;;;;;;;;;;;12389:33;12381:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12498:5;:15;;;;;12475:19;12492:1;12475:5;:12;;;;;:16;;:19;;;;:::i;:::-;:38;;12467:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12591:19;12608:1;12591:5;:12;;;;;:16;;:19;;;;:::i;:::-;12576:5;:12;;;:34;;;;;;;12672:23;:11;;;:21;;:23;;;:::i;:::-;12709:12;12724:21;:11;;;:19;;:21;;;:::i;:::-;12709:36;;12759:24;;:::i;:::-;12786:152;;;;;;;;12817:5;:11;;;;;12786:152;;;;12857:1;12786:152;;;;12884:1;12786:152;;;;12915:8;12786:152;;;;;12759:179;;12970:11;12952:6;;;:15;12959:7;12952:15;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13023:4;12995:16;;;:25;13012:7;12995:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;13041:22;13047:6;13055:7;13041:5;:22;;:::i;:::-;13112:4;13077:8;;;:16;13086:6;13077:16;;;;;;;;;;;;;;;;;:26;13094:8;13077:26;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;13167:7;13130:8;;;:16;13139:6;13130:16;;;;;;;;;;;;;;;;;:26;13147:8;13130:26;;;;;;;;;;;;;:34;;;:44;;;;;;;13209:6;13194:31;;;13217:7;13194:31;;;;;;;;;;;;;;;;;;13253:6;13244:38;;;13261:7;13270:5;:11;;;;;13244:38;;;;;;;;;;;;;;;;;;;;;;;;13303:7;13296:14;;;;;;;;11740:1;;;;;854::8;12064:1253:20;;;;:::o;15320:138::-;;;;;;;:::o;2865:613:24:-;2912:12;2936:24;2963:8;;2936:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2936:35:24;;;;;;;;2999:12;:10;:12;;:::i;:::-;2985:26;;:10;:26;;;2981:463;;;3295:2;3277:8;;:15;;:20;3267:31;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;3267:31:24;;;;3253:45;;;;3317:9;3329:1;3317:13;;3312:122;3336:11;:18;3332:1;:22;3312:122;;;3408:8;;3417:1;3408:11;;;;;;;;;;;;;;;;;3391;3403:1;3391:14;;;;;;;;;;;;;:28;;;;;;;;;;;3312:122;3356:3;;;;;;;3312:122;;;;2981:463;3460:11;3453:18;;;;;2865:613;;;:::o;5004:145:10:-;5084:4;5107:18;;;:25;5126:5;5107:25;;;;;;;;;;;;;;;;;:35;5133:8;5107:35;;;;;;;;;;;;;;;;;;;;;;;;;5100:42;;;;5004:145;;;;;:::o;7638:152::-;7695:4;7711:13;7727:11;;;:20;7739:7;7727:20;;;;;;;;;;;;;;;;;;;;;7711:36;;7781:1;7764:19;;:5;:19;;;;7757:26;;;;;7638:152;;;;;:::o;10270:886:0:-;10391:14;10462:2;10454:5;:10;10442:1;:8;:22;;10421:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10803:2;10794:11;;;;;;11074:42;11065:5;11062:1;11058:13;11052:20;11048:69;11038:79;;11143:6;11136:13;;;;10270:886;;;;;:::o;1412:202:24:-;1480:5;1469:8;;:16;;;;;;;;;;;;;;;;;;1586:21;:19;:21;;:::i;:::-;;1412:202;;:::o;8150:246:10:-;8235:4;8251:13;8267:16;8275:7;8267;:16;;:::i;:::-;8251:32;;8312:5;8301:16;;:7;:16;;;:51;;;;8345:7;8321:31;;:20;8333:7;8321:11;:20;;:::i;:::-;:31;;;8301:51;:87;;;;8356:32;8373:5;8380:7;8356:16;:32;;:::i;:::-;8301:87;8293:96;;;;;8150:246;;;;;;:::o;10098:362::-;10211:4;10191:24;;:16;10199:7;10191;:16;;:::i;:::-;:24;;;10183:33;;;;;;;;10248:1;10234:16;;:2;:16;;;;10226:25;;;;;;;;10262:23;10277:7;10262:14;:23;;:::i;:::-;10296:35;:17;;;:23;10314:4;10296:23;;;;;;;;;;;;;;;;;:33;;:35;;;:::i;:::-;10341:33;:17;;;:21;10359:2;10341:21;;;;;;;;;;;;;;;;;:31;;:33;;;:::i;:::-;10408:2;10385:11;;;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10098:362;;;;:::o;1211:145:9:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;;;1211:145;;;;;;:::o;5473:426:20:-;5533:6;5551:18;;:::i;:::-;5572:6;;;:14;5579:6;5572:14;;;;;;;;;;;;;5551:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5596:9;5608:1;5596:13;;5623:11;5637:10;;;;;;;;;;;5623:24;;5619:212;5657:1;5649:5;:9;;;5619:212;;;5682:17;5725:5;5712:18;;:12;:18;5702:29;5682:49;;5786:34;5794:9;5817:1;5813;5804:6;:10;:14;5794:25;;;;;;;;;;;;5786:34;;;:7;:34;;:::i;:::-;5782:1;5748:30;5756:9;5775:1;5766:6;:10;5756:21;;;;;;;;;;;;5748:30;;;:7;:30;;:::i;:::-;:35;;:72;5743:77;;;;;;5619:212;;5661:7;;;;;;;;5619:212;;;;5879:5;:12;;;5858:10;;;;;;;;;;;5854:14;;:1;:14;;;;;;;;5847:45;5840:52;;;;;;5473:426;;;;;;:::o;231:421:9:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;;;:10;607:19;;;;;;;;644:1;637:8;;;;;231:421;;;;;;:::o;9633:90:10:-;9684:32;9690:16;9698:7;9690;:16;;:::i;:::-;9708:7;9684:5;:32;;:::i;:::-;9633:90;;:::o;1439:145:9:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;;;1439:145;;;;;;:::o;786:162:1:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;;;786:162;;;;;:::o;1409:467:17:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;;;1409:467;;;:::o;2148:123:10:-;2202:4;2225:39;1303:10;2243:20;;2225:17;:39;;:::i;:::-;2218:46;;;;2148:123;;:::o;1080:158:6:-;1170:10;1155:25;;:11;:25;;;;;1147:34;;;;;;;;1227:4;1191:20;;;:33;1212:11;1191:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1080:158;;:::o;8639:259:10:-;8724:1;8710:16;;:2;:16;;;;8702:25;;;;;;;;8746:16;8754:7;8746;:16;;:::i;:::-;8745:17;8737:26;;;;;;;;8797:2;8774:11;;;:20;8786:7;8774:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8809:33;:17;;;:21;8827:2;8809:21;;;;;;;;;;;;;;;;;:31;;:33;;;:::i;:::-;8883:7;8879:2;8858:33;;8875:1;8858:33;;;;;;;;;;;;8639:259;;;:::o;2169:144:11:-;2254:16;2262:7;2254;:16;;:::i;:::-;2246:25;;;;;;;;2303:3;2281:10;;;:19;2292:7;2281:19;;;;;;;;;;;;:25;;;;;;;;;;;;;:::i;:::-;;2169:144;;;:::o;963:127:3:-;1022:24;1038:7;1022:8;;;:15;;:24;;;;:::i;:::-;1075:7;1061:22;;;;;;;;;;;;963:127;;:::o;1062:112:5:-;1127:7;1153;:14;;;;;1146:21;;;;1062:112;;;;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;;;;;1180:89;;:::o;681:98:6:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;732:40:6;312:10;751:20;;732:18;:40;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;681:98:6;;:::o;838:119:3:-;894:21;907:7;894:8;;;:12;;:21;;;;:::i;:::-;942:7;930:20;;;;;;;;;;;;838:119;;:::o;::2:-;894:21;907:7;894:8;;;:12;;:21;;;;:::i;:::-;942:7;930:20;;;;;;;;;;;;838:119;;:::o;963:127::-;1022:24;1038:7;1022:8;;;:15;;:24;;;;:::i;:::-;1075:7;1061:22;;;;;;;;;;;;963:127;;:::o;1620:89:24:-;1666:9;1694:8;;;;;;;;;;;1687:15;;;;1620:89;;:::o;10988:347:10:-;11109:4;11134:15;:2;:13;;;;:15;;;:::i;:::-;11133:16;11129:58;;;11172:4;11165:11;;;;11129:58;11197:13;11229:2;11213:36;;;11250:10;11262:4;11268:7;11277:5;11213:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;11213:70:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11213:70:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11213:70:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11213:70:10;;;;;;;;;;;;;;;;11197:86;;789:10;11311:16;;11301:26;;;:6;:26;;;;11293:35;;;;;10988:347;;;;;;;;:::o;1068:132:11:-;1122:4;1145:48;504:10;1163:29;;1145:17;:48;;:::i;:::-;1138:55;;;;1068:132;;:::o;320:137:2:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;390:16:2;399:6;390:8;:16;;:::i;:::-;389:17;385:66;;;422:18;433:6;422:10;:18;;:::i;:::-;385:66;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;320:137:2;;;:::o;394:127:8:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;459:29:8;481:6;459:21;:29;;:::i;:::-;509:5;499:7;;:15;;;;;;;;;;;;;;;;;;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;394:127:8;;;:::o;11496:171:10:-;11595:1;11559:38;;:15;;;:24;11575:7;11559:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11555:106;;;11648:1;11613:15;;;:24;11629:7;11613:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11555:106;11496:171;;:::o;1275:108:5:-;1355:21;1374:1;1355:7;:14;;;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;;:38;;;;;;;1275:108;;:::o;6055:90:20:-;6107:4;6135:2;6130:8;;6123:15;;;;6055:90;;;;:::o;2603:240:11:-;2669:27;2681:5;2688:7;2669:11;:27;;:::i;:::-;2783:1;2752:10;;;:19;2763:7;2752:19;;;;;;;;;;;;;2746:33;;;;;;;;;;;;;;;;:38;;2742:95;;;2807:10;;;:19;2818:7;2807:19;;;;;;;;;;;;2800:26;;;;:::i;:::-;2742:95;2603:240;;;:::o;514:184:1:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18;;:::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18;;:::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;;:::o;463:616:16:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;;;463:616;;;;;:::o;320:137:3:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;390:16:3;399:6;390:8;:16;;:::i;:::-;389:17;385:66;;;422:18;433:6;422:10;:18;;:::i;:::-;385:66;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;320:137:3;;;:::o;9171:283:10:-;9265:5;9245:25;;:16;9253:7;9245;:16;;:::i;:::-;:25;;;9237:34;;;;;;;;9282:23;9297:7;9282:14;:23;;:::i;:::-;9316:36;:17;;;:24;9334:5;9316:24;;;;;;;;;;;;;;;;;:34;;:36;;;:::i;:::-;9393:1;9362:11;;;:20;9374:7;9362:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9439:7;9435:1;9411:36;;9420:5;9411:36;;;;;;;;;;;;9171:283;;;:::o;1219:14341:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "origSender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "msgData",
          "type": "bytes"
        }
      ],
      "name": "getSenderFromData",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IRelayHub",
          "name": "_rhub",
          "type": "address"
        }
      ],
      "name": "updateRelayHub",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "sellStamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasWithdrawn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "outstandingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownedTokensIndex",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHubAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_priceFinney",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_context",
          "type": "bytes"
        }
      ],
      "name": "preRelayedCall",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_relay",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_encodedFunction",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_transactionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_approvalData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_maxPossibleCharge",
          "type": "uint256"
        }
      ],
      "name": "acceptRelayedCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxClones",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRecipientBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxClones",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_priceDepth",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_costMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "bool",
          "name": "owned",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stamps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxClones",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inWild",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "clonedFrom",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "airdropStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_context",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_actualCharge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_preRetVal",
          "type": "bytes32"
        }
      ],
      "name": "postRelayedCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMessageData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "MintedStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "NewStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "clonedTokenId",
          "type": "uint256"
        }
      ],
      "name": "BurnedStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AirdropedStamp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    }
  ],
  "ast": {
    "absolutePath": "contracts/StampCollectible.sol",
    "exportedSymbols": {
      "StampCollectible": [3497]
    },
    "id": 3498,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2591,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 2592,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 1975,
        "src": "25:92:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "id": 2593,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 2045,
        "src": "118:100:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
        "id": 2594,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 1975,
        "src": "219:92:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 2595,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 1823,
        "src": "312:84:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol",
        "id": 2596,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 1126,
        "src": "397:83:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2597,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 2275,
        "src": "481:60:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol",
        "id": 2598,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 956,
        "src": "542:80:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
        "id": 2599,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 1254,
        "src": "623:78:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "tabookey-gasless/contracts/GsnUtils.sol",
        "file": "tabookey-gasless/contracts/GsnUtils.sol",
        "id": 2600,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 3644,
        "src": "702:49:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "tabookey-gasless/contracts/IRelayHub.sol",
        "file": "tabookey-gasless/contracts/IRelayHub.sol",
        "id": 2601,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 3893,
        "src": "752:50:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "tabookey-gasless/contracts/RelayRecipient.sol",
        "file": "tabookey-gasless/contracts/RelayRecipient.sol",
        "id": 2602,
        "nodeType": "ImportDirective",
        "scope": 3498,
        "sourceUnit": 4103,
        "src": "803:55:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2603,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2274,
              "src": "1248:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2274",
                "typeString": "contract Initializable"
              }
            },
            "id": 2604,
            "nodeType": "InheritanceSpecifier",
            "src": "1248:13:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2605,
              "name": "RelayRecipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4102,
              "src": "1263:14:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RelayRecipient_$4102",
                "typeString": "contract RelayRecipient"
              }
            },
            "id": 2606,
            "nodeType": "InheritanceSpecifier",
            "src": "1263:14:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2607,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1125,
              "src": "1279:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$1125",
                "typeString": "contract Pausable"
              }
            },
            "id": 2608,
            "nodeType": "InheritanceSpecifier",
            "src": "1279:8:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2609,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2044,
              "src": "1289:22:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$2044",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 2610,
            "nodeType": "InheritanceSpecifier",
            "src": "1289:22:20"
          }
        ],
        "contractDependencies": [706, 825, 1015, 1025, 1125, 1822, 1974, 2044, 2150, 2176, 2274, 3948, 4102],
        "contractKind": "contract",
        "documentation": "@title A Nifties exchange game to incentivize tourism and onboard to crypto\n @author santteegt\n @notice NFTs Market price is artificially calculated based on randomness feed from previous block hashes and user demand\n @dev Contract can be upgraded through a proxy contract supplied by OpenZeppelin SDK\n @dev Contract can be used with the GSN",
        "fullyImplemented": true,
        "id": 3497,
        "linearizedBaseContracts": [3497, 2044, 706, 1974, 2176, 1822, 2150, 1015, 1025, 1125, 825, 4102, 2274, 3948],
        "name": "StampCollectible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2613,
            "libraryName": {
              "contractScope": null,
              "id": 2611,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 955,
              "src": "1382:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$955",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1376:36:20",
            "typeName": {
              "contractScope": null,
              "id": 2612,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 915,
              "src": "1395:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 2616,
            "libraryName": {
              "contractScope": null,
              "id": 2614,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1253,
              "src": "1472:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1253",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1466:27:20",
            "typeName": {
              "id": 2615,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "StampCollectible.Stamp",
            "id": 2625,
            "members": [
              {
                "constant": false,
                "id": 2618,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 2625,
                "src": "1581:13:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2617,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1581:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2620,
                "name": "maxClones",
                "nodeType": "VariableDeclaration",
                "scope": 2625,
                "src": "1604:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2619,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1604:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2622,
                "name": "inWild",
                "nodeType": "VariableDeclaration",
                "scope": 2625,
                "src": "1631:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2621,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1631:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2624,
                "name": "clonedFrom",
                "nodeType": "VariableDeclaration",
                "scope": 2625,
                "src": "1655:18:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2623,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1655:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Stamp",
            "nodeType": "StructDefinition",
            "scope": 3497,
            "src": "1558:122:20",
            "visibility": "public"
          },
          {
            "canonicalName": "StampCollectible.ClonedStamp",
            "id": 2630,
            "members": [
              {
                "constant": false,
                "id": 2627,
                "name": "owned",
                "nodeType": "VariableDeclaration",
                "scope": 2630,
                "src": "1715:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2626,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1715:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2629,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 2630,
                "src": "1735:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2628,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1735:4:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ClonedStamp",
            "nodeType": "StructDefinition",
            "scope": 3497,
            "src": "1686:68:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2632,
            "name": "totalMinted",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "1799:35:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$915_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 2631,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 915,
              "src": "1799:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$915_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2636,
            "name": "stamps",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "1902:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
              "typeString": "mapping(uint256 => struct StampCollectible.Stamp)"
            },
            "typeName": {
              "id": 2635,
              "keyType": {
                "id": 2633,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1911:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1902:26:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                "typeString": "mapping(uint256 => struct StampCollectible.Stamp)"
              },
              "valueType": {
                "contractScope": null,
                "id": 2634,
                "name": "Stamp",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2625,
                "src": "1922:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                  "typeString": "struct StampCollectible.Stamp"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2640,
            "name": "ownedTokensIndex",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "1956:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 2639,
              "keyType": {
                "id": 2637,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1965:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1956:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 2638,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1976:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2642,
            "name": "maxClones",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "2072:24:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2641,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2072:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2644,
            "name": "priceDepth",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "2247:24:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2643,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2247:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2646,
            "name": "costMultiplier",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "2407:30:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2645,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2407:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2652,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "2583:69:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp))"
            },
            "typeName": {
              "id": 2651,
              "keyType": {
                "id": 2647,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2592:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2583:53:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp))"
              },
              "valueType": {
                "id": 2650,
                "keyType": {
                  "id": 2648,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2612:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2603:32:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                  "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 2649,
                  "name": "ClonedStamp",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2630,
                  "src": "2623:11:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                    "typeString": "struct StampCollectible.ClonedStamp"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2668,
              "nodeType": "Block",
              "src": "2810:123:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2657,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2654,
                            "src": "2828:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2837:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2828:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2660,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2654,
                            "src": "2842:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "323535",
                            "id": 2661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2852:3:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "255"
                          },
                          "src": "2842:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2828:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d",
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2857:57:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28f4b412de5fcc65fc54ff917a3dca5c665c1984c0310d23fc36f9bcb691cd3d",
                          "typeString": "literal_string \"Price Depth parameter must be within then range [1-255]\""
                        },
                        "value": "Price Depth parameter must be within then range [1-255]"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28f4b412de5fcc65fc54ff917a3dca5c665c1984c0310d23fc36f9bcb691cd3d",
                          "typeString": "literal_string \"Price Depth parameter must be within then range [1-255]\""
                        }
                      ],
                      "id": 2656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "2820:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:95:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:95:20"
                },
                {
                  "id": 2667,
                  "nodeType": "PlaceholderStatement",
                  "src": "2925:1:20"
                }
              ]
            },
            "documentation": "Verify that the priceDepth parameters is within the max No. of historical blocks a contract can track",
            "id": 2669,
            "name": "checkMaxBlockDepth",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2654,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2669,
                  "src": "2797:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2653,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2796:13:20"
            },
            "src": "2769:164:20",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a new Gen0 stamp is minted by the contract owner",
            "id": 2677,
            "name": "MintedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2677,
                  "src": "3029:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2677,
                  "src": "3052:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2675,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 2677,
                  "src": "3069:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3069:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3028:55:20"
            },
            "src": "3011:73:20"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a stamp is cloned and minted to a user",
            "id": 2685,
            "name": "NewStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2679,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2685,
                  "src": "3166:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2681,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2685,
                  "src": "3189:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2683,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 2685,
                  "src": "3206:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3165:55:20"
            },
            "src": "3151:70:20"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a cloned stamp is returned to the contract and thus burned",
            "id": 2693,
            "name": "BurnedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2687,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "3326:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "3349:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3349:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2691,
                  "indexed": false,
                  "name": "clonedTokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "3366:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3366:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3325:63:20"
            },
            "src": "3308:81:20"
          },
          {
            "body": {
              "id": 2776,
              "nodeType": "Block",
              "src": "4546:604:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2714,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4117,
                          "src": "4581:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4581:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2711,
                        "name": "Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "4561:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Pausable_$1125_$",
                          "typeString": "type(contract Pausable)"
                        }
                      },
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1061,
                      "src": "4561:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4561:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2717,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:31:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4609:29:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2718,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1822,
                          "src": "4610:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1822_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 2719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasBeenInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1326,
                        "src": "4610:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4610:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2728,
                  "nodeType": "IfStatement",
                  "src": "4606:86:20",
                  "trueBody": {
                    "id": 2727,
                    "nodeType": "Block",
                    "src": "4640:52:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2722,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1822,
                              "src": "4658:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1822_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1316,
                            "src": "4658:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4658:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2726,
                        "nodeType": "ExpressionStatement",
                        "src": "4658:19:20"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4708:37:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2729,
                          "name": "ERC721Metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1974,
                          "src": "4709:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1974_$",
                            "typeString": "type(contract ERC721Metadata)"
                          }
                        },
                        "id": 2730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_hasBeenInitialized",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1885,
                        "src": "4709:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4709:36:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2741,
                  "nodeType": "IfStatement",
                  "src": "4705:116:20",
                  "trueBody": {
                    "id": 2740,
                    "nodeType": "Block",
                    "src": "4747:74:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2736,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2701,
                              "src": "4791:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2737,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2703,
                              "src": "4798:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2733,
                              "name": "ERC721Metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1974,
                              "src": "4765:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1974_$",
                                "typeString": "type(contract ERC721Metadata)"
                              }
                            },
                            "id": 2735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1875,
                            "src": "4765:25:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 2738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4765:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2739,
                        "nodeType": "ExpressionStatement",
                        "src": "4765:41:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4117,
                          "src": "4868:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4868:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2742,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2044,
                        "src": "4834:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$2044_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 2744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2013,
                      "src": "4834:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2748,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2749,
                      "name": "maxClones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2642,
                      "src": "4894:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2750,
                      "name": "_maxClones",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2695,
                      "src": "4906:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4894:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2752,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:22:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2753,
                      "name": "priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "4930:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2754,
                      "name": "_priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2697,
                      "src": "4943:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4930:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2756,
                  "nodeType": "ExpressionStatement",
                  "src": "4930:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2757,
                      "name": "costMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2646,
                      "src": "4968:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2758,
                      "name": "_costMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2699,
                      "src": "4985:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4968:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2760,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:32:20"
                },
                {
                  "assignments": [2762],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2762,
                      "name": "_dummy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2776,
                      "src": "5015:19:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2761,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "5015:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2769,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5068:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5082:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5093:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5108:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2763,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "5037:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$2625_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 2768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": ["price", "maxClones", "inWild", "clonedFrom"],
                    "nodeType": "FunctionCall",
                    "src": "5037:74:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5015:96:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2770,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "5125:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 2772,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5132:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5125:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2773,
                      "name": "_dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2762,
                      "src": "5137:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "5125:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 2775,
                  "nodeType": "ExpressionStatement",
                  "src": "5125:18:20"
                }
              ]
            },
            "documentation": "@dev Initialize current and derived contracts\n@param _maxClones Maximum number of clones allowed per Gen0 NFT\n@param _priceDepth Game parameter thah establish the depth of blockhashes to scan during NFT price estimate\n@param _costMultiplier Cost multiplier to transform NFT price (in finney) to ETH\n@param _name NFT name\n@param _symbol NFT symbol",
            "id": 2777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2706,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2705,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2255,
                  "src": "4445:11:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4445:11:20"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2708,
                    "name": "_maxClones",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2695,
                    "src": "4534:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2709,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2707,
                  "name": "checkMaxBlockDepth",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2669,
                  "src": "4515:18:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4515:30:20"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2695,
                  "name": "_maxClones",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4306:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4306:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2697,
                  "name": "_priceDepth",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4326:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2699,
                  "name": "_costMultiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4353:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2701,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4378:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2700,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2703,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4399:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2702,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4305:116:20"
            },
            "returnParameters": {
              "id": 2710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4546:0:20"
            },
            "scope": 3497,
            "src": "4286:864:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2848,
              "nodeType": "Block",
              "src": "5541:358:20",
              "statements": [
                {
                  "assignments": [2785],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2785,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 2848,
                      "src": "5551:18:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2784,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "5551:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2789,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2786,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2636,
                      "src": "5572:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 2788,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2787,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2779,
                      "src": "5579:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5572:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5551:35:20"
                },
                {
                  "assignments": [2791],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2791,
                      "name": "x",
                      "nodeType": "VariableDeclaration",
                      "scope": 2848,
                      "src": "5596:9:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2790,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5596:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2793,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5608:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5596:13:20"
                },
                {
                  "body": {
                    "id": 2835,
                    "nodeType": "Block",
                    "src": "5670:161:20",
                    "statements": [
                      {
                        "assignments": [2805],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2805,
                            "name": "blockHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 2835,
                            "src": "5682:17:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2804,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5682:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2812,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2807,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4107,
                                  "src": "5712:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5712:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2809,
                                "name": "depth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2795,
                                "src": "5725:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "5712:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2806,
                            "name": "blockhash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4108,
                            "src": "5702:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256) view returns (bytes32)"
                            }
                          },
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5702:29:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5682:49:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2813,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2791,
                            "src": "5743:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2815,
                                      "name": "blockHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2805,
                                      "src": "5756:9:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 2819,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 2816,
                                        "name": "_index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2779,
                                        "src": "5766:6:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 2817,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5775:1:20",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "5766:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5756:21:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  ],
                                  "id": 2814,
                                  "name": "convert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2861,
                                  "src": "5748:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
                                    "typeString": "function (bytes32) pure returns (uint256)"
                                  }
                                },
                                "id": 2820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5748:30:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "38",
                                "id": 2821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5782:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              "src": "5748:35:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "|",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2824,
                                    "name": "blockHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2805,
                                    "src": "5794:9:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 2830,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2827,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 2825,
                                        "name": "_index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2779,
                                        "src": "5804:6:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "32",
                                        "id": 2826,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5813:1:20",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "5804:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 2828,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5817:1:20",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "5804:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5794:25:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 2823,
                                "name": "convert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2861,
                                "src": "5786:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
                                  "typeString": "function (bytes32) pure returns (uint256)"
                                }
                              },
                              "id": 2831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5786:34:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5748:72:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5743:77:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2834,
                        "nodeType": "ExpressionStatement",
                        "src": "5743:77:20"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 2800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2798,
                      "name": "depth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2795,
                      "src": "5649:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5657:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5649:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2836,
                  "initializationExpression": {
                    "assignments": [2795],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2795,
                        "name": "depth",
                        "nodeType": "VariableDeclaration",
                        "scope": 2836,
                        "src": "5623:11:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2794,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5623:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2797,
                    "initialValue": {
                      "argumentTypes": null,
                      "id": 2796,
                      "name": "priceDepth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2644,
                      "src": "5637:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5623:24:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "5661:7:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2801,
                        "name": "depth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "5661:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 2803,
                    "nodeType": "ExpressionStatement",
                    "src": "5661:7:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "5619:212:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2838,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2791,
                            "src": "5854:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2839,
                            "name": "priceDepth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2644,
                            "src": "5858:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5854:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5847:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": "uint16"
                      },
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5847:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2843,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2785,
                            "src": "5879:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                              "typeString": "struct StampCollectible.Stamp memory"
                            }
                          },
                          "id": 2844,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2622,
                          "src": "5879:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5872:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": "uint16"
                      },
                      "id": 2845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5872:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5847:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 2783,
                  "id": 2847,
                  "nodeType": "Return",
                  "src": "5840:52:20"
                }
              ]
            },
            "documentation": "@dev Calculate the new NFT price based on demand and randomness based on past block hashes\n@notice Market value is artificially generated for the game using the entropy found in past block hashes\n@param _index NFT index in storage\n@return uint16 NFt new estimate market price",
            "id": 2849,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFTPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "5494:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5494:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5493:16:20"
            },
            "returnParameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2782,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "5533:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2781,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5533:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5532:8:20"
            },
            "scope": 3497,
            "src": "5473:426:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2860,
              "nodeType": "Block",
              "src": "6113:32:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2857,
                        "name": "_b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2851,
                        "src": "6135:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6130:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 2858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6130:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2855,
                  "id": 2859,
                  "nodeType": "Return",
                  "src": "6123:15:20"
                }
              ]
            },
            "documentation": "@dev Helper function to convert a bytes32 to uint\n@param _b bytes32 data hash\n@return uint uint representation of _b",
            "id": 2861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "name": "_b",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "6072:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6071:12:20"
            },
            "returnParameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2861,
                  "src": "6107:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2853,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6107:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6106:6:20"
            },
            "scope": 3497,
            "src": "6055:90:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2923,
              "nodeType": "Block",
              "src": "6569:488:20",
              "statements": [
                {
                  "assignments": [2875],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2875,
                      "name": "collectible",
                      "nodeType": "VariableDeclaration",
                      "scope": 2923,
                      "src": "6579:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2874,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "6579:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2885,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2879,
                            "name": "costMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "6650:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2877,
                            "name": "_priceFinney",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2863,
                            "src": "6633:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1160,
                          "src": "6633:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6633:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2881,
                        "name": "maxClones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2642,
                        "src": "6690:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6721:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6748:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2876,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "6606:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$2625_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": ["price", "maxClones", "inWild", "clonedFrom"],
                    "nodeType": "FunctionCall",
                    "src": "6606:154:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6579:181:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2886,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "6770:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$915_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2888,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 938,
                      "src": "6770:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$915_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6770:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "6770:23:20"
                },
                {
                  "assignments": [2892],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2892,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2923,
                      "src": "6803:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6803:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2896,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2893,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "6821:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$915_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 926,
                      "src": "6821:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$915_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6821:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6803:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2897,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "6852:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 2899,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2898,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "6859:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6852:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2900,
                      "name": "collectible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2875,
                      "src": "6870:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "6852:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "6852:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2903,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2640,
                        "src": "6891:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2905,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2904,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "6908:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6891:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6919:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6891:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2908,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:32:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2910,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4117,
                          "src": "6950:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6950:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2912,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "6962:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2913,
                        "name": "_priceFinney",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2863,
                        "src": "6971:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2909,
                      "name": "MintedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "6938:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6938:46:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2915,
                  "nodeType": "EmitStatement",
                  "src": "6933:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4117,
                          "src": "7019:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7019:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2919,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "7031:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2920,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2865,
                        "src": "7040:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2916,
                      "name": "mintWithTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "7002:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 2921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7002:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2873,
                  "id": 2922,
                  "nodeType": "Return",
                  "src": "6995:55:20"
                }
              ]
            },
            "documentation": "@dev Mint a Gen0 stamp\n@notice This function can only be called by the contract owner\n@param _priceFinney Initial NFT price in finney\n@param _tokenURI URI of the associated digital collectible art\n@return bool true if Gen0 NFT is minted",
            "id": 2924,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2868,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2867,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 635,
                  "src": "6513:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6513:10:20"
              },
              {
                "arguments": null,
                "id": 2870,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2869,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1078,
                  "src": "6532:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6532:13:20"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2863,
                  "name": "_priceFinney",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "6451:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6451:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2865,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "6473:23:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6473:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6450:47:20"
            },
            "returnParameters": {
              "id": 2873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2872,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "6563:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2871,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6562:6:20"
            },
            "scope": 3497,
            "src": "6437:620:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3069,
              "nodeType": "Block",
              "src": "7358:1239:20",
              "statements": [
                {
                  "assignments": [2936],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2936,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 3069,
                      "src": "7372:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2935,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "7372:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2940,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2937,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2636,
                      "src": "7394:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 2939,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2938,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2928,
                      "src": "7401:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7394:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7372:38:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2942,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2936,
                            "src": "7432:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clonedFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2624,
                          "src": "7432:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7452:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7432:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473",
                        "id": 2946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7455:49:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        },
                        "value": "You can only generate new stamps from Gen0 NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        }
                      ],
                      "id": 2941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "7424:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7424:81:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2948,
                  "nodeType": "ExpressionStatement",
                  "src": "7424:81:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7527:33:20",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2950,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2652,
                                "src": "7528:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                                }
                              },
                              "id": 2952,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2951,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2926,
                                "src": "7537:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7528:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                                "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                              }
                            },
                            "id": 2954,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2953,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2928,
                              "src": "7545:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7528:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                              "typeString": "struct StampCollectible.ClonedStamp storage ref"
                            }
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2627,
                          "src": "7528:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520616c7265616479206f776e2074686973207374616d70",
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7562:28:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        },
                        "value": "You already own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        }
                      ],
                      "id": 2949,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "7519:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7519:72:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2959,
                  "nodeType": "ExpressionStatement",
                  "src": "7519:72:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7630:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2961,
                                "name": "stamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2936,
                                "src": "7613:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                                  "typeString": "struct StampCollectible.Stamp storage pointer"
                                }
                              },
                              "id": 2962,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inWild",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2622,
                              "src": "7613:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1232,
                            "src": "7613:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7613:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2966,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2936,
                            "src": "7636:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 2967,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxClones",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2620,
                          "src": "7636:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7613:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617820636c6f6e65732068617665206265656e2072656163686564",
                        "id": 2969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7653:30:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e89663b6777778d57a2e2042652daa0b1100c2951eef4d2097cc1cdec392f0b",
                          "typeString": "literal_string \"Max clones have been reached\""
                        },
                        "value": "Max clones have been reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e89663b6777778d57a2e2042652daa0b1100c2951eef4d2097cc1cdec392f0b",
                          "typeString": "literal_string \"Max clones have been reached\""
                        }
                      ],
                      "id": 2960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "7605:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7605:79:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2971,
                  "nodeType": "ExpressionStatement",
                  "src": "7605:79:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2973,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4117,
                            "src": "7706:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7706:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2975,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2936,
                            "src": "7719:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2618,
                          "src": "7719:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7706:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 2978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7732:18:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 2972,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "7698:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7698:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2980,
                  "nodeType": "ExpressionStatement",
                  "src": "7698:53:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2981,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "7765:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 2983,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2622,
                      "src": "7765:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7797:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2984,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2936,
                            "src": "7780:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2622,
                          "src": "7780:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1232,
                        "src": "7780:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7780:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7765:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2990,
                  "nodeType": "ExpressionStatement",
                  "src": "7765:34:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2991,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2936,
                        "src": "7813:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 2993,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2618,
                      "src": "7813:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3000,
                          "name": "costMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2646,
                          "src": "7862:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2996,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2928,
                                  "src": "7847:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2995,
                                "name": "getNFTPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2849,
                                "src": "7835:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint16_$",
                                  "typeString": "function (uint256) view returns (uint16)"
                                }
                              },
                              "id": 2997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7835:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 2994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7827:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 2998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7827:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1160,
                        "src": "7827:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7827:50:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7813:64:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3003,
                  "nodeType": "ExpressionStatement",
                  "src": "7813:64:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3004,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "7939:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$915_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 938,
                      "src": "7939:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$915_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 3007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7939:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3008,
                  "nodeType": "ExpressionStatement",
                  "src": "7939:23:20"
                },
                {
                  "assignments": [3010],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3010,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 3069,
                      "src": "7976:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3009,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7976:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3014,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3011,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "7991:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$915_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 926,
                      "src": "7991:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$915_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7991:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7976:36:20"
                },
                {
                  "assignments": [3016],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3016,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 3069,
                      "src": "8026:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3015,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "8026:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3024,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3018,
                          "name": "stamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2936,
                          "src": "8084:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                            "typeString": "struct StampCollectible.Stamp storage pointer"
                          }
                        },
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2618,
                        "src": "8084:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8124:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8151:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 3022,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2928,
                        "src": "8182:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3017,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "8053:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$2625_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 3023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": ["price", "maxClones", "inWild", "clonedFrom"],
                    "nodeType": "FunctionCall",
                    "src": "8053:152:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8026:179:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3025,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "8219:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 3027,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3026,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3010,
                        "src": "8226:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8219:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3028,
                      "name": "clonedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "8237:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "8219:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 3030,
                  "nodeType": "ExpressionStatement",
                  "src": "8219:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3031,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2640,
                        "src": "8262:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 3033,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3032,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3010,
                        "src": "8279:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8262:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8290:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8262:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3036,
                  "nodeType": "ExpressionStatement",
                  "src": "8262:32:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3038,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2926,
                        "src": "8314:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3039,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3010,
                        "src": "8322:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3037,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1645,
                      "src": "8308:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8308:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3041,
                  "nodeType": "ExpressionStatement",
                  "src": "8308:22:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3042,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2652,
                            "src": "8344:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 3045,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3043,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2926,
                            "src": "8353:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8344:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 3046,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3044,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2928,
                          "src": "8361:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8344:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 3047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2627,
                      "src": "8344:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8379:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8344:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3050,
                  "nodeType": "ExpressionStatement",
                  "src": "8344:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3051,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2652,
                            "src": "8397:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 3054,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3052,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2926,
                            "src": "8406:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8397:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 3055,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3053,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2928,
                          "src": "8414:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8397:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 3056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2629,
                      "src": "8397:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3057,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3010,
                      "src": "8434:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8397:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3059,
                  "nodeType": "ExpressionStatement",
                  "src": "8397:44:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3061,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2926,
                        "src": "8535:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3062,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3010,
                        "src": "8543:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3063,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4117,
                          "src": "8552:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8552:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3060,
                      "name": "NewStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "8526:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8526:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3066,
                  "nodeType": "EmitStatement",
                  "src": "8521:41:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3067,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3010,
                    "src": "8583:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2934,
                  "id": 3068,
                  "nodeType": "Return",
                  "src": "8576:14:20"
                }
              ]
            },
            "documentation": "@dev Allow to buy a cloned stamp from minted Gen0 NFTs\n@param _tokenId Gen0 NFT index in storage\n@return uint tokenId corresponding to the cloned NFT",
            "id": 3070,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2931,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2930,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1078,
                  "src": "7321:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7321:13:20"
              }
            ],
            "name": "buyStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2926,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "7264:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7264:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2928,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "7280:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7280:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7263:34:20"
            },
            "returnParameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2933,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "7352:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2932,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7352:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7351:6:20"
            },
            "scope": 3497,
            "src": "7246:1351:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3190,
              "nodeType": "Block",
              "src": "8879:1201:20",
              "statements": [
                {
                  "assignments": [3080],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3080,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 3190,
                      "src": "8893:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3079,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8893:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3083,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3081,
                      "name": "getSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "8910:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 3082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8910:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8893:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3085,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2652,
                              "src": "8943:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                              }
                            },
                            "id": 3087,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3086,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3080,
                              "src": "8952:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8943:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                              "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                            }
                          },
                          "id": 3089,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3088,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3072,
                            "src": "8960:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8943:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                            "typeString": "struct StampCollectible.ClonedStamp storage ref"
                          }
                        },
                        "id": 3090,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "owned",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2627,
                        "src": "8943:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5573657220646f6573206e6f74206f776e2074686973207374616d70",
                        "id": 3091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8977:30:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98a0de758a18418f7091750474be68c56d83f88f70c4910d8cf2dc0966b4ea31",
                          "typeString": "literal_string \"User does not own this stamp\""
                        },
                        "value": "User does not own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98a0de758a18418f7091750474be68c56d83f88f70c4910d8cf2dc0966b4ea31",
                          "typeString": "literal_string \"User does not own this stamp\""
                        }
                      ],
                      "id": 3084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "8935:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8935:73:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3093,
                  "nodeType": "ExpressionStatement",
                  "src": "8935:73:20"
                },
                {
                  "assignments": [3095],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3095,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 3190,
                      "src": "9022:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3094,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "9022:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3099,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3096,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2636,
                      "src": "9044:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 3098,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3097,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3072,
                      "src": "9051:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9044:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9022:38:20"
                },
                {
                  "assignments": [3101],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3101,
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 3190,
                      "src": "9074:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3100,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9074:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3104,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3102,
                      "name": "stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3095,
                      "src": "9091:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp storage pointer"
                      }
                    },
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2618,
                    "src": "9091:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9074:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3107,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4175,
                                "src": "9132:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StampCollectible_$3497",
                                  "typeString": "contract StampCollectible"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StampCollectible_$3497",
                                  "typeString": "contract StampCollectible"
                                }
                              ],
                              "id": 3106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9124:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 3108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9124:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 3109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9124:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3110,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3101,
                          "src": "9149:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9124:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073",
                        "id": 3112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9157:70:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc95aee24d98acbfb7840645da877cc64dd21aba0128b85d0153a748ef4f84fe",
                          "typeString": "literal_string \"Prize pot is almost empty so it is no longer possible to sell stamps\""
                        },
                        "value": "Prize pot is almost empty so it is no longer possible to sell stamps"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc95aee24d98acbfb7840645da877cc64dd21aba0128b85d0153a748ef4f84fe",
                          "typeString": "literal_string \"Prize pot is almost empty so it is no longer possible to sell stamps\""
                        }
                      ],
                      "id": 3105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "9116:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9116:112:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3114,
                  "nodeType": "ExpressionStatement",
                  "src": "9116:112:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3115,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3095,
                        "src": "9242:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 3117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2622,
                      "src": "9242:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9274:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3118,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3095,
                            "src": "9257:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 3119,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2622,
                          "src": "9257:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1208,
                        "src": "9257:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9257:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9242:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3124,
                  "nodeType": "ExpressionStatement",
                  "src": "9242:34:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3125,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3095,
                        "src": "9290:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 3127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2618,
                      "src": "9290:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3134,
                          "name": "costMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2646,
                          "src": "9339:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 3130,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3072,
                                  "src": "9324:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3129,
                                "name": "getNFTPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2849,
                                "src": "9312:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint16_$",
                                  "typeString": "function (uint256) view returns (uint16)"
                                }
                              },
                              "id": 3131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9312:21:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 3128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9304:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 3132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9304:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1160,
                        "src": "9304:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9304:50:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9290:64:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "9290:64:20"
                },
                {
                  "assignments": [3139],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3139,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 3190,
                      "src": "9369:31:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                        "typeString": "struct StampCollectible.ClonedStamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3138,
                        "name": "ClonedStamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2630,
                        "src": "9369:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                          "typeString": "struct StampCollectible.ClonedStamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3145,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3140,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2652,
                        "src": "9403:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                        }
                      },
                      "id": 3142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3141,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "9412:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9403:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                      }
                    },
                    "id": 3144,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3143,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3072,
                      "src": "9420:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9403:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                      "typeString": "struct StampCollectible.ClonedStamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9369:60:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3146,
                        "name": "clonedStamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "9443:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                          "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                        }
                      },
                      "id": 3148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2627,
                      "src": "9443:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9463:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9443:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3151,
                  "nodeType": "ExpressionStatement",
                  "src": "9443:25:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3153,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3139,
                          "src": "9515:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 3154,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2629,
                        "src": "9515:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3152,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [1969, 1700],
                      "referencedDeclaration": 1700,
                      "src": "9509:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9509:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "9509:26:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3157,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2640,
                        "src": "9549:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 3160,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3158,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3139,
                          "src": "9566:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 3159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2629,
                        "src": "9566:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9549:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 3161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9589:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "9549:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "9549:45:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3165,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "9626:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3166,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3072,
                        "src": "9634:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3167,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3139,
                          "src": "9644:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 3168,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2629,
                        "src": "9644:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3164,
                      "name": "BurnedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2693,
                      "src": "9614:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9614:50:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3170,
                  "nodeType": "EmitStatement",
                  "src": "9609:55:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9678:34:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3171,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "9685:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 3174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3172,
                          "name": "clonedStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3139,
                          "src": "9692:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage_ptr",
                            "typeString": "struct StampCollectible.ClonedStamp storage pointer"
                          }
                        },
                        "id": 3173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2629,
                        "src": "9692:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9685:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3176,
                  "nodeType": "ExpressionStatement",
                  "src": "9678:34:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3177,
                        "name": "outstandingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "9981:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3179,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3178,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3080,
                        "src": "10000:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9981:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3184,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3101,
                          "src": "10041:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3180,
                            "name": "outstandingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3201,
                            "src": "10010:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3182,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3181,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3080,
                            "src": "10029:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10010:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1232,
                        "src": "10010:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10010:38:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9981:67:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "9981:67:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10069:4:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3078,
                  "id": 3189,
                  "nodeType": "Return",
                  "src": "10062:11:20"
                }
              ]
            },
            "documentation": "@dev Allow to sell an owned stamp and profit/loose based on current market price\n@param _tokenId Gen0 NFT index in storage\n@return bool true if processed",
            "id": 3191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3075,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3074,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1078,
                  "src": "8842:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8842:13:20"
              }
            ],
            "name": "sellStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3072,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "8809:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8809:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8808:18:20"
            },
            "returnParameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3077,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "8873:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8873:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8872:6:20"
            },
            "scope": 3497,
            "src": "8790:1290:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3196,
              "nodeType": "Block",
              "src": "10281:8:20",
              "statements": []
            },
            "documentation": "@dev Fallback function to allow the contract accept deposits in ETH\n@notice deposits can be crodwsourced to fund the Prize pot",
            "id": 3197,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": null,
                "id": 3194,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3193,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1078,
                  "src": "10267:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10267:13:20"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10247:2:20"
            },
            "returnParameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10281:0:20"
            },
            "scope": 3497,
            "src": "10238:51:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 3201,
            "name": "outstandingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "10514:51:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3200,
              "keyType": {
                "id": 3198,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "10523:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "10514:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3199,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "10534:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a user withdraw her outstanding balance from selling stamps in the market\n TODO: this has to be added as an upgrade",
            "id": 3207,
            "name": "WithdrawnBalance",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3203,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3207,
                  "src": "10741:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10741:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3205,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3207,
                  "src": "10764:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10764:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10740:39:20"
            },
            "src": "10718:62:20"
          },
          {
            "body": {
              "id": 3261,
              "nodeType": "Block",
              "src": "11066:367:20",
              "statements": [
                {
                  "assignments": [3215],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3215,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 3261,
                      "src": "11076:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3214,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11076:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3216,
                      "name": "getSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "11093:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 3217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11093:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11076:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3220,
                            "name": "outstandingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3201,
                            "src": "11119:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3222,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3221,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3215,
                            "src": "11138:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11119:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11148:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11119:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f207769746864726177",
                        "id": 3225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11151:51:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0bd4524f4d21f77c17de3fd64ae0008b7b8f48a2838225ba2defe2a9296ed2f",
                          "typeString": "literal_string \"You dont have any outstanding balance to withdraw\""
                        },
                        "value": "You dont have any outstanding balance to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0bd4524f4d21f77c17de3fd64ae0008b7b8f48a2838225ba2defe2a9296ed2f",
                          "typeString": "literal_string \"You dont have any outstanding balance to withdraw\""
                        }
                      ],
                      "id": 3219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "11111:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11111:92:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3227,
                  "nodeType": "ExpressionStatement",
                  "src": "11111:92:20"
                },
                {
                  "assignments": [3229],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3229,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3261,
                      "src": "11210:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3228,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11210:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3233,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3230,
                      "name": "outstandingBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3201,
                      "src": "11224:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3232,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3231,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3215,
                      "src": "11243:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11224:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11210:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3234,
                        "name": "outstandingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "11257:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3236,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3235,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3215,
                        "src": "11276:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11257:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11286:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11257:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3239,
                  "nodeType": "ExpressionStatement",
                  "src": "11257:30:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3240,
                        "name": "hasWithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3266,
                        "src": "11297:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3242,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3241,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3215,
                        "src": "11310:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11297:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11320:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11297:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3245,
                  "nodeType": "ExpressionStatement",
                  "src": "11297:27:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3247,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3215,
                        "src": "11356:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3248,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3229,
                        "src": "11364:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3246,
                      "name": "WithdrawnBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3207,
                      "src": "11339:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11339:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3250,
                  "nodeType": "EmitStatement",
                  "src": "11334:37:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3256,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3229,
                        "src": "11401:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4117,
                          "src": "11381:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11381:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11381:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11381:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3258,
                  "nodeType": "ExpressionStatement",
                  "src": "11381:27:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11422:4:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3213,
                  "id": 3260,
                  "nodeType": "Return",
                  "src": "11415:11:20"
                }
              ]
            },
            "documentation": "TODO: to be addded in an upgraded version of the contract",
            "id": 3262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3210,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3209,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1078,
                  "src": "11037:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11037:13:20"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11027:2:20"
            },
            "returnParameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3212,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3262,
                  "src": "11060:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3211,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11060:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11059:6:20"
            },
            "scope": 3497,
            "src": "11010:423:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3266,
            "name": "hasWithdrawn",
            "nodeType": "VariableDeclaration",
            "scope": 3497,
            "src": "11505:45:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3265,
              "keyType": {
                "id": 3263,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "11514:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "11505:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3264,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "11525:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3278,
              "nodeType": "Block",
              "src": "11634:114:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3269,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4117,
                            "src": "11652:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11652:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3271,
                            "name": "getHubAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [3967],
                            "referencedDeclaration": 3967,
                            "src": "11666:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11666:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11652:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73616374696f6e2063616e206f6e6c7920626520706572666f6d6564206279207468652072656c61796572",
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11680:49:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_475d1da93c7f0f23fc0f174b7a49a3728e576e6a65e9b98ed40084688fdf5e9c",
                          "typeString": "literal_string \"Transaction can only be perfomed by the relayer\""
                        },
                        "value": "Transaction can only be perfomed by the relayer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_475d1da93c7f0f23fc0f174b7a49a3728e576e6a65e9b98ed40084688fdf5e9c",
                          "typeString": "literal_string \"Transaction can only be perfomed by the relayer\""
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "11644:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11644:86:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "11644:86:20"
                },
                {
                  "id": 3277,
                  "nodeType": "PlaceholderStatement",
                  "src": "11740:1:20"
                }
              ]
            },
            "documentation": "Verifies that a call is done by the relayer",
            "id": 3279,
            "name": "onlyByRelayer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11631:2:20"
            },
            "src": "11609:139:20",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "Triggered when a stamp is airdroped through the relayer",
            "id": 3285,
            "name": "AirdropedStamp",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3281,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3285,
                  "src": "11839:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11839:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3283,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3285,
                  "src": "11863:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3282,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11863:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11838:38:20"
            },
            "src": "11818:59:20"
          },
          {
            "body": {
              "id": 3418,
              "nodeType": "Block",
              "src": "12178:1139:20",
              "statements": [
                {
                  "assignments": [3297],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3297,
                      "name": "sender",
                      "nodeType": "VariableDeclaration",
                      "scope": 3418,
                      "src": "12192:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3296,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12192:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3300,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3298,
                      "name": "getSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4048,
                      "src": "12209:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 3299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12209:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12192:28:20"
                },
                {
                  "assignments": [3302],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3302,
                      "name": "stamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 3418,
                      "src": "12234:19:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3301,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "12234:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3306,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3303,
                      "name": "stamps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2636,
                      "src": "12256:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                        "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                      }
                    },
                    "id": 3305,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3304,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3287,
                      "src": "12263:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12256:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12234:38:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3308,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3302,
                            "src": "12294:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 3309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clonedFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2624,
                          "src": "12294:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12314:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12294:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473",
                        "id": 3312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12317:49:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        },
                        "value": "You can only generate new stamps from Gen0 NFTs"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36e73347bf12fa65118d87e95a2df3df6906c3674591c507072c80c9d2b53aef",
                          "typeString": "literal_string \"You can only generate new stamps from Gen0 NFTs\""
                        }
                      ],
                      "id": 3307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "12286:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12286:81:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3314,
                  "nodeType": "ExpressionStatement",
                  "src": "12286:81:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12389:33:20",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3316,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2652,
                                "src": "12390:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                                }
                              },
                              "id": 3318,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3317,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3297,
                                "src": "12399:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12390:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                                "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                              }
                            },
                            "id": 3320,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3319,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3287,
                              "src": "12407:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12390:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                              "typeString": "struct StampCollectible.ClonedStamp storage ref"
                            }
                          },
                          "id": 3321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owned",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2627,
                          "src": "12390:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520616c7265616479206f776e2074686973207374616d70",
                        "id": 3323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12424:28:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        },
                        "value": "You already own this stamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5788d54e5422c990a3ecd32406baec1ec5df8c2d02a536bc14dbdfd52301f827",
                          "typeString": "literal_string \"You already own this stamp\""
                        }
                      ],
                      "id": 3315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "12381:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12381:72:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3325,
                  "nodeType": "ExpressionStatement",
                  "src": "12381:72:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 3330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12492:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3327,
                                "name": "stamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3302,
                                "src": "12475:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                                  "typeString": "struct StampCollectible.Stamp storage pointer"
                                }
                              },
                              "id": 3328,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inWild",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2622,
                              "src": "12475:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1232,
                            "src": "12475:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12475:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3332,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3302,
                            "src": "12498:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 3333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxClones",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2620,
                          "src": "12498:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12475:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f727279212054686973205374616d70206973206e6f742063757272656e746c7920617661696c61626c65",
                        "id": 3335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12515:46:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_953edb70d4e2293b77ef3f534638a3378ca46b34b4b3f38ff6abf0b662d8ff06",
                          "typeString": "literal_string \"Sorry! This Stamp is not currently available\""
                        },
                        "value": "Sorry! This Stamp is not currently available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_953edb70d4e2293b77ef3f534638a3378ca46b34b4b3f38ff6abf0b662d8ff06",
                          "typeString": "literal_string \"Sorry! This Stamp is not currently available\""
                        }
                      ],
                      "id": 3326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4121,
                      "src": "12467:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12467:95:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3337,
                  "nodeType": "ExpressionStatement",
                  "src": "12467:95:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3338,
                        "name": "stamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "12576:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp storage pointer"
                        }
                      },
                      "id": 3340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "inWild",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2622,
                      "src": "12576:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 3344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12608:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3341,
                            "name": "stamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3302,
                            "src": "12591:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                              "typeString": "struct StampCollectible.Stamp storage pointer"
                            }
                          },
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "inWild",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2622,
                          "src": "12591:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1232,
                        "src": "12591:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12591:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12576:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3347,
                  "nodeType": "ExpressionStatement",
                  "src": "12576:34:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3348,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "12672:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$915_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 938,
                      "src": "12672:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$915_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 3351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12672:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3352,
                  "nodeType": "ExpressionStatement",
                  "src": "12672:23:20"
                },
                {
                  "assignments": [3354],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3354,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 3418,
                      "src": "12709:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3353,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12709:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3358,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3355,
                        "name": "totalMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "12724:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$915_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 3356,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 926,
                      "src": "12724:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$915_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$915_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 3357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12724:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12709:36:20"
                },
                {
                  "assignments": [3360],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3360,
                      "name": "clonedStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 3418,
                      "src": "12759:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3359,
                        "name": "Stamp",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2625,
                        "src": "12759:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                          "typeString": "struct StampCollectible.Stamp"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3368,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3362,
                          "name": "stamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3302,
                          "src": "12817:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                            "typeString": "struct StampCollectible.Stamp storage pointer"
                          }
                        },
                        "id": 3363,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2618,
                        "src": "12817:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12857:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12884:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 3366,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3287,
                        "src": "12915:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3361,
                      "name": "Stamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2625,
                      "src": "12786:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stamp_$2625_storage_ptr_$",
                        "typeString": "type(struct StampCollectible.Stamp storage pointer)"
                      }
                    },
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": ["price", "maxClones", "inWild", "clonedFrom"],
                    "nodeType": "FunctionCall",
                    "src": "12786:152:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_memory",
                      "typeString": "struct StampCollectible.Stamp memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12759:179:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3369,
                        "name": "stamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "12952:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stamp_$2625_storage_$",
                          "typeString": "mapping(uint256 => struct StampCollectible.Stamp storage ref)"
                        }
                      },
                      "id": 3371,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3370,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "12959:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12952:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                        "typeString": "struct StampCollectible.Stamp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3372,
                      "name": "clonedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3360,
                      "src": "12970:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stamp_$2625_memory_ptr",
                        "typeString": "struct StampCollectible.Stamp memory"
                      }
                    },
                    "src": "12952:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stamp_$2625_storage",
                      "typeString": "struct StampCollectible.Stamp storage ref"
                    }
                  },
                  "id": 3374,
                  "nodeType": "ExpressionStatement",
                  "src": "12952:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3375,
                        "name": "ownedTokensIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2640,
                        "src": "12995:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 3377,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3376,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "13012:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12995:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13023:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12995:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3380,
                  "nodeType": "ExpressionStatement",
                  "src": "12995:32:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3382,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3297,
                        "src": "13047:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3383,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "13055:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3381,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1645,
                      "src": "13041:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13041:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3385,
                  "nodeType": "ExpressionStatement",
                  "src": "13041:22:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3386,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2652,
                            "src": "13077:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 3389,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3387,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3297,
                            "src": "13086:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13077:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 3390,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3388,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3287,
                          "src": "13094:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13077:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 3391,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2627,
                      "src": "13077:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13112:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13077:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3394,
                  "nodeType": "ExpressionStatement",
                  "src": "13077:39:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3395,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2652,
                            "src": "13130:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct StampCollectible.ClonedStamp storage ref))"
                            }
                          },
                          "id": 3398,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3396,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3297,
                            "src": "13139:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13130:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClonedStamp_$2630_storage_$",
                            "typeString": "mapping(uint256 => struct StampCollectible.ClonedStamp storage ref)"
                          }
                        },
                        "id": 3399,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3397,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3287,
                          "src": "13147:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13130:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClonedStamp_$2630_storage",
                          "typeString": "struct StampCollectible.ClonedStamp storage ref"
                        }
                      },
                      "id": 3400,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2629,
                      "src": "13130:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3401,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3354,
                      "src": "13167:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13130:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3403,
                  "nodeType": "ExpressionStatement",
                  "src": "13130:44:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3405,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3297,
                        "src": "13209:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3406,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "13217:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3404,
                      "name": "AirdropedStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3285,
                      "src": "13194:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13194:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3408,
                  "nodeType": "EmitStatement",
                  "src": "13189:36:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3410,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3297,
                        "src": "13253:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3411,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3354,
                        "src": "13261:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3412,
                          "name": "stamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3302,
                          "src": "13270:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stamp_$2625_storage_ptr",
                            "typeString": "struct StampCollectible.Stamp storage pointer"
                          }
                        },
                        "id": 3413,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2618,
                        "src": "13270:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3409,
                      "name": "NewStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "13244:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13244:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3415,
                  "nodeType": "EmitStatement",
                  "src": "13239:43:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3416,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3354,
                    "src": "13303:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3295,
                  "id": 3417,
                  "nodeType": "Return",
                  "src": "13296:14:20"
                }
              ]
            },
            "documentation": "@dev Airdrop a stamp throguh a relayer in the GSN\nparam _tokenId Gen0 NFT index in storage\n@return uint tokenId corresponding to the cloned NFT",
            "id": 3419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3290,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3289,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1078,
                  "src": "12119:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12119:13:20"
              },
              {
                "arguments": null,
                "id": 3292,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3291,
                  "name": "onlyByRelayer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3279,
                  "src": "12141:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12141:13:20"
              }
            ],
            "name": "airdropStamp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3287,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "12086:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12086:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12085:18:20"
            },
            "returnParameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3294,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "12172:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3293,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12172:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12171:6:20"
            },
            "scope": 3497,
            "src": "12064:1253:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3457,
              "nodeType": "Block",
              "src": "14340:176:20",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3444,
                      "name": "hasWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3266,
                      "src": "14362:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3446,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3445,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3423,
                      "src": "14375:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14362:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3452,
                  "nodeType": "IfStatement",
                  "src": "14359:119:20",
                  "trueBody": {
                    "id": 3451,
                    "nodeType": "Block",
                    "src": "14383:95:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 3447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14413:2:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "557365722068617320616c72656164792077697468647261776e20736f6d652062616c616e6365",
                              "id": 3448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14417:41:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_44e1138ce0cf91da49c81e5067da69552bf9eb34392ec54305b9845a1d939e31",
                                "typeString": "literal_string \"User has already withdrawn some balance\""
                              },
                              "value": "User has already withdrawn some balance"
                            }
                          ],
                          "id": 3449,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14412:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_rational_10_by_1_$_t_stringliteral_44e1138ce0cf91da49c81e5067da69552bf9eb34392ec54305b9845a1d939e31_$",
                            "typeString": "tuple(int_const 10,literal_string \"User has already withdrawn some balance\")"
                          }
                        },
                        "functionReturnParameters": 3443,
                        "id": 3450,
                        "nodeType": "Return",
                        "src": "14405:54:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14503:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 3454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14506:2:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "id": 3455,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14502:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$",
                      "typeString": "tuple(int_const 0,literal_string \"\")"
                    }
                  },
                  "functionReturnParameters": 3443,
                  "id": 3456,
                  "nodeType": "Return",
                  "src": "14495:14:20"
                }
              ]
            },
            "documentation": "@dev It's an error code designed to help the DApp identify the reason. Low negatives are reserved for known issues but you can add your own errors in your contract\n@param _relay RelayHub address\n@param _from Tx sender\n@param  _encodedFunction encoded Function being called\n@param _transactionFee tx fee\n@param _gasPrice tx gas price\n@param _gasLimit tx gas limit\n@param _nonce tx nonce\n@param _approvalData tx data\n@param _maxPossibleCharge max possible charge per tx\n@return uint256 0 means you accept sponsoring the relayed transaction. Anything else indicates rejection.\n@return bytes Error message",
            "id": 3458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3421,
                  "name": "_relay",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14057:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14057:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3423,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14073:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14073:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "name": "_encodedFunction",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14088:31:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14088:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3427,
                  "name": "_transactionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14133:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14133:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3429,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14158:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14158:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3431,
                  "name": "_gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14177:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14177:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3433,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14196:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14196:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3435,
                  "name": "_approvalData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14224:28:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3434,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14224:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3437,
                  "name": "_maxPossibleCharge",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14254:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14254:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14056:225:20"
            },
            "returnParameters": {
              "id": 3443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3440,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14317:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14317:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3458,
                  "src": "14326:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3441,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14326:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14316:23:20"
            },
            "scope": 3497,
            "src": "14030:486:20",
            "stateMutability": "view",
            "superFunction": 3929,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3471,
              "nodeType": "Block",
              "src": "14944:45:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "313233343536",
                            "id": 3467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14974:6:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_123456_by_1",
                              "typeString": "int_const 123456"
                            },
                            "value": "123456"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_123456_by_1",
                              "typeString": "int_const 123456"
                            }
                          ],
                          "id": 3466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14969:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 3468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14969:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "14961:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": "bytes32"
                    },
                    "id": 3469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14961:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3464,
                  "id": 3470,
                  "nodeType": "Return",
                  "src": "14954:28:20"
                }
              ]
            },
            "documentation": "@dev Inform of the maximum cost the call may have, and can be used to charge the user in advance.\n@notice This is useful if the user may spend their allowance as part of the call, so you can lock some funds here.\n@param _context tx data\n@return bytes32 the maximum cost the call may have",
            "id": 3472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "preRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3460,
                  "name": "_context",
                  "nodeType": "VariableDeclaration",
                  "scope": 3472,
                  "src": "14875:23:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14875:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14874:25:20"
            },
            "returnParameters": {
              "id": 3464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3472,
                  "src": "14935:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14935:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14934:9:20"
            },
            "scope": 3497,
            "src": "14851:138:20",
            "stateMutability": "nonpayable",
            "superFunction": 3936,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3483,
              "nodeType": "Block",
              "src": "15451:7:20",
              "statements": []
            },
            "documentation": "@dev The success flag indicates whether it was relayed successfully or not. This is where you would usually subtract from the user's remaining credit\n@param _context tx data\n@param _success True if tx was relayed\n@param _actualCharge charged value\n@param _preRetVal preRetVal",
            "id": 3484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postRelayedCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3474,
                  "name": "_context",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "15345:23:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3473,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15345:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3476,
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "15370:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15370:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3478,
                  "name": "_actualCharge",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "15385:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15385:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3480,
                  "name": "_preRetVal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "15405:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15405:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15344:80:20"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15451:0:20"
            },
            "scope": 3497,
            "src": "15320:138:20",
            "stateMutability": "nonpayable",
            "superFunction": 3947,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3495,
              "nodeType": "Block",
              "src": "15523:35:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3492,
                        "name": "_rhub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3486,
                        "src": "15545:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRelayHub_$3892",
                          "typeString": "contract IRelayHub"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRelayHub_$3892",
                          "typeString": "contract IRelayHub"
                        }
                      ],
                      "id": 3491,
                      "name": "setRelayHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3980,
                      "src": "15533:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IRelayHub_$3892_$returns$__$",
                        "typeString": "function (contract IRelayHub)"
                      }
                    },
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15533:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3494,
                  "nodeType": "ExpressionStatement",
                  "src": "15533:18:20"
                }
              ]
            },
            "documentation": null,
            "id": 3496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3489,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3488,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 635,
                  "src": "15512:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15512:10:20"
              }
            ],
            "name": "updateRelayHub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3486,
                  "name": "_rhub",
                  "nodeType": "VariableDeclaration",
                  "scope": 3496,
                  "src": "15488:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRelayHub_$3892",
                    "typeString": "contract IRelayHub"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3485,
                    "name": "IRelayHub",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3892,
                    "src": "15488:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRelayHub_$3892",
                      "typeString": "contract IRelayHub"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15487:17:20"
            },
            "returnParameters": {
              "id": 3490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15523:0:20"
            },
            "scope": 3497,
            "src": "15464:94:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3498,
        "src": "1219:14341:20"
      }
    ],
    "src": "0:15561:20"
  },
  "bytecode": "0x6080604052348015620000125760006000fd5b5062000019565b615e2780620000296000396000f3fe6080604052600436106102975760003560e01c806380274db71161015a578063aa271e1a116100c1578063cbf1304d1161007a578063cbf1304d14611801578063ccd68f3b1461187d578063da710b92146118e3578063e06e0e2214611934578063e20c6d3d146119e5578063e985e9c514611a7757610297565b8063aa271e1a146113b5578063ac57041114611420578063b88d4fde1461144c578063c4d66de814611567578063c87b56dd146115ba578063cbdfa1531461167157610297565b806395d89b411161011357806395d89b41146111ca578063983b2d561461125c57806398650275146112af5780639925856e146112c7578063a22cb4651461132a578063a2309ff81461138957610297565b806380274db714610e975780638129fc1c14610f4057806382dc1ec414610f5857806383947ea014610fab5780638456cb59146111865780638a337d8a1461119e57610297565b80634cd88b76116101fe5780636a6da61e116101b75780636a6da61e14610c115780636ef8d66d14610c7857806370a0823114610c9057806374e2436714610cf757806374e861d614610d4c57806377097fc814610da457610297565b80634cd88b761461081f57806350bb4e7f1461098e5780635c975abb14610aa15780635e01eb5a14610ad15780635e2c19db14610b295780636352211e14610b9457610297565b806323b872dd1161025057806323b872dd1461061d5780632620aced1461069a5780633ccfd60b146106ef5780633f4ba83a1461071f57806342842e0e1461073757806346fbf68e146107b457610297565b806301ffc9a7146102b957806306fdde031461032d578063081812fc146103bf578063095ea7b31461043c5780631da97ea3146104995780631e5f3627146105ca57610297565b5b606760009054906101000a900460ff161515156102b55760006000fd5b5b5b005b3480156102c65760006000fd5b50610313600480360360208110156102de5760006000fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611b02565b604051808215151515815260200191505060405180910390f35b34801561033a5760006000fd5b50610343611b72565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103845780820151818401525b602081019050610368565b50505050905090810190601f1680156103b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cc5760006000fd5b506103fa600480360360208110156103e45760006000fd5b8101908080359060200190929190505050611c1d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104495760006000fd5b50610497600480360360408110156104615760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c7d565b005b3480156104a65760006000fd5b50610588600480360360408110156104be5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104fc5760006000fd5b82018360208201111561050f5760006000fd5b803590602001918460018302840111640100000000831117156105325760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050611dd4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d75760006000fd5b5061061b600480360360208110156105ef5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e45565b005b34801561062a5760006000fd5b50610698600480360360608110156106425760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e74565b005b3480156106a75760006000fd5b506106d5600480360360208110156106bf5760006000fd5b8101908080359060200190929190505050611ea7565b604051808215151515815260200191505060405180910390f35b3480156106fc5760006000fd5b506107056122e5565b604051808215151515815260200191505060405180910390f35b34801561072c5760006000fd5b50610735612553565b005b3480156107445760006000fd5b506107b26004803603606081101561075c5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061260d565b005b3480156107c15760006000fd5b50610805600480360360208110156107d95760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612637565b604051808215151515815260200191505060405180910390f35b34801561082c5760006000fd5b5061098c600480360360408110156108445760006000fd5b81019080803590602001906401000000008111156108625760006000fd5b8201836020820111156108755760006000fd5b803590602001918460018302840111640100000000831117156108985760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290803590602001906401000000008111156109005760006000fd5b8201836020820111156109135760006000fd5b803590602001918460018302840111640100000000831117156109365760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090909192909091929050505061265c565b005b34801561099b5760006000fd5b50610a87600480360360608110156109b35760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109fb5760006000fd5b820183602082011115610a0e5760006000fd5b80359060200191846001830284011164010000000083111715610a315760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509090919290909192905050506127d1565b604051808215151515815260200191505060405180910390f35b348015610aae5760006000fd5b50610ab761281f565b604051808215151515815260200191505060405180910390f35b348015610ade5760006000fd5b50610ae761283b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b365760006000fd5b50610b7a60048036036020811015610b4e5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061289c565b604051808215151515815260200191505060405180910390f35b348015610ba15760006000fd5b50610bcf60048036036020811015610bb95760006000fd5b81019080803590602001909291905050506128c2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1e5760006000fd5b50610c6260048036036020811015610c365760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061294b565b6040518082815260200191505060405180910390f35b348015610c855760006000fd5b50610c8e612967565b005b348015610c9d5760006000fd5b50610ce160048036036020811015610cb55760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612979565b6040518082815260200191505060405180910390f35b348015610d045760006000fd5b50610d3260048036036020811015610d1c5760006000fd5b8101908080359060200190929190505050612a19565b604051808215151515815260200191505060405180910390f35b348015610d595760006000fd5b50610d62612a3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610db15760006000fd5b50610e7d60048036036040811015610dc95760006000fd5b810190808035906020019092919080359060200190640100000000811115610df15760006000fd5b820183602082011115610e045760006000fd5b80359060200191846001830284011164010000000083111715610e275760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050612a6e565b604051808215151515815260200191505060405180910390f35b348015610ea45760006000fd5b50610f2260048036036020811015610ebc5760006000fd5b8101908080359060200190640100000000811115610eda5760006000fd5b820183602082011115610eed5760006000fd5b80359060200191846001830284011164010000000083111715610f105760006000fd5b90919293909091929390505050612c2a565b60405180826000191660001916815260200191505060405180910390f35b348015610f4d5760006000fd5b50610f56612c40565b005b348015610f655760006000fd5b50610fa960048036036020811015610f7d5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d71565b005b348015610fb85760006000fd5b506111036004803603610120811015610fd15760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561102f5760006000fd5b8201836020820111156110425760006000fd5b803590602001918460018302840111640100000000831117156110655760006000fd5b9091929390909192939080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156110b15760006000fd5b8201836020820111156110c45760006000fd5b803590602001918460018302840111640100000000831117156110e75760006000fd5b9091929390909192939080359060200190929190505050612da0565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561114a5780820151818401525b60208101905061112e565b50505050905090810190601f1680156111775780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156111935760006000fd5b5061119c612e52565b005b3480156111ab5760006000fd5b506111b4612f0d565b6040518082815260200191505060405180910390f35b3480156111d75760006000fd5b506111e0612f17565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112215780820151818401525b602081019050611205565b50505050905090810190601f16801561124e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156112695760006000fd5b506112ad600480360360208110156112815760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fc2565b005b3480156112bc5760006000fd5b506112c5612ff1565b005b611314600480360360408110156112de5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613003565b6040518082815260200191505060405180910390f35b3480156113375760006000fd5b506113876004803603604081101561134f5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061354c565b005b3480156113965760006000fd5b5061139f613690565b6040518082815260200191505060405180910390f35b3480156113c25760006000fd5b50611406600480360360208110156113da5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136a3565b604051808215151515815260200191505060405180910390f35b34801561142d5760006000fd5b506114366136c9565b6040518082815260200191505060405180910390f35b3480156114595760006000fd5b50611565600480360360808110156114715760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156114d95760006000fd5b8201836020820111156114ec5760006000fd5b8035906020019184600183028401116401000000008311171561150f5760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090909192909091929050505061379d565b005b3480156115745760006000fd5b506115b86004803603602081101561158c5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137d3565b005b3480156115c75760006000fd5b506115f5600480360360208110156115df5760006000fd5b8101908080359060200190929190505050613924565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116365780820151818401525b60208101905061161a565b50505050905090810190601f1680156116635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561167e5760006000fd5b506117ff600480360360a08110156116965760006000fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156116d55760006000fd5b8201836020820111156116e85760006000fd5b8035906020019184600183028401116401000000008311171561170b5760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290803590602001906401000000008111156117735760006000fd5b8201836020820111156117865760006000fd5b803590602001918460018302840111640100000000831117156117a95760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050613a00565b005b34801561180e5760006000fd5b5061185c600480360360408110156118265760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613ca7565b60405180831515151581526020018281526020019250505060405180910390f35b34801561188a5760006000fd5b506118b8600480360360208110156118a25760006000fd5b8101908080359060200190929190505050613cef565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156118f05760006000fd5b5061191e600480360360208110156119085760006000fd5b8101908080359060200190929190505050613d2f565b6040518082815260200191505060405180910390f35b3480156119415760006000fd5b506119e3600480360360808110156119595760006000fd5b81019080803590602001906401000000008111156119775760006000fd5b82018360208201111561198a5760006000fd5b803590602001918460018302840111640100000000831117156119ad5760006000fd5b9091929390909192939080351515906020019092919080359060200190929190803560001916906020019092919050505061429a565b005b3480156119f25760006000fd5b506119fb6142a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611a3c5780820151818401525b602081019050611a20565b50505050905090810190601f168015611a695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015611a845760006000fd5b50611ae860048036036040811015611a9c5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506143f1565b604051808215151515815260200191505060405180910390f35b6000609a6000506000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050611b6d565b919050565b60606101036000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c0e5780601f10611be357610100808354040283529160200191611c0e565b820191906000526020600020905b815481529060010190602001808311611bf157829003601f168201915b50505050509050611c1a565b90565b6000611c2e8261449063ffffffff16565b1515611c3a5760006000fd5b60ce600050600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611c78565b919050565b6000611c8e826128c263ffffffff16565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611ccc5760006000fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611d125750611d1181336143f163ffffffff16565b5b1515611d1e5760006000fd5b8260ce600050600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505b5050565b60006000839050611de9612a3f63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611e3557611e3083601485510361450c63ffffffff16565b905080505b80915050611e3f56505b92915050565b611e54336136a363ffffffff16565b1515611e605760006000fd5b611e6f8161459f63ffffffff16565b5b5b50565b611e8433826145f363ffffffff16565b1515611e905760006000fd5b611ea18383836146a163ffffffff16565b5b505050565b6000606760009054906101000a900460ff16151515611ec65760006000fd5b6000611ed661283b63ffffffff16565b90506101a360005060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600084815260200190815260200160002060005060000160009054906101000a900460ff161515611fba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5573657220646f6573206e6f74206f776e2074686973207374616d700000000081526020015060200191505060405180910390fd5b600061019e60005060008581526020019081526020016000206000509050600081600001600050549050803073ffffffffffffffffffffffffffffffffffffffff163110151515612056576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526044815260200180615d896044913960600191505060405180910390fd5b6120716001836002016000505461489690919063ffffffff16565b826002016000508190909055506120a96101a260005054612097876148bf63ffffffff16565b61ffff16614a3890919063ffffffff16565b8260000160005081909090555060006101a360005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000878152602001908152602001600020600050905060008160000160006101000a81548160ff0219169083151502179055506121478160010160005054614a7d63ffffffff16565b600061019f60005060008360010160005054815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff167f106852634153ba32c7db4c08ec749c468343ebd82b312b849a331f58a164867a878360010160005054604051808381526020018281526020019250505060405180910390a261019e600050600082600101600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905560038201600050600090555050612282826101a460005060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054614a9f90919063ffffffff16565b6101a460005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555060019450505050506122df56505050505b5b919050565b6000606760009054906101000a900460ff161515156123045760006000fd5b600061231461283b63ffffffff16565b905060006101a460005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541115156123b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615d586031913960400191505060405180910390fd5b60006101a460005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054905060006101a460005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555060016101a560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f76a3496ed122399b6d8c356545cf5095195fd823dc634be8fcd7b275976679a7826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612541573d600060003e3d6000fd5b5060019250505061254f5650505b5b90565b6125623361263763ffffffff16565b151561256e5760006000fd5b606760009054906101000a900460ff16151561258a5760006000fd5b6000606760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b5b5b565b6126318383836040518060200160405280600081526020015061379d63ffffffff16565b5b505050565b6000612650826034600050614ac890919063ffffffff16565b9050612657565b919050565b600060019054906101000a900460ff16806126815750612680614b6663ffffffff16565b5b806126995750600060009054906101000a900460ff16155b15156126f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015612742576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b612750614b7e63ffffffff16565b151561275c5760006000fd5b826101036000509080519060200190612776929190615b1e565b50816101046000509080519060200190612791929190615b1e565b506127a8635b5e139f60e01b614ba063ffffffff16565b5b80156127cb576000600060016101000a81548160ff0219169083151502179055505b505b5050565b60006127e2336136a363ffffffff16565b15156127ee5760006000fd5b6127fe8484614c4763ffffffff16565b61280e8383614dab63ffffffff16565b60019050612817565b5b9392505050565b6000606760009054906101000a900460ff169050612838565b90565b6000612892336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611dd463ffffffff16565b9050612899565b90565b6101a560005060205280600052604060002060009150909054906101000a900460ff1681565b6000600060cd600050600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561293c5760006000fd5b8091505061294656505b919050565b6101a46000506020528060005260406000206000915090505481565b61297633614dfa63ffffffff16565b5b565b6000600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156129b85760006000fd5b612a0d60cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050614e58909063ffffffff16565b9050612a14565b919050565b61019f60005060205280600052604060002060009150909054906101000a900460ff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612a6b565b90565b6000612a7f336136a363ffffffff16565b1515612a8b5760006000fd5b606760009054906101000a900460ff16151515612aa85760006000fd5b612ab0615ba3565b6040518060800160405280612ad46101a26000505487614a3890919063ffffffff16565b81526020016101a06000505481526020016000815260200160008152602001509050612b0c61019d600050614e6e909063ffffffff16565b6000612b2461019d600050614e58909063ffffffff16565b90508161019e6000506000838152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050600161019f600050600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f51a8f6a84a50f4da36896f422d3ec8416e819501f8ee32dfed22316b472f07978287604051808381526020018281526020019250505060405180910390a2612c173382866127d163ffffffff16565b92505050612c225650505b5b5b92915050565b60006201e24060001b9050612c3a565b92915050565b600060019054906101000a900460ff1680612c655750612c64614b6663ffffffff16565b5b80612c7d5750600060009054906101000a900460ff16155b1515612cd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015612d26576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b612d34614e8963ffffffff16565b612d4a6380ac58cd60e01b614ba063ffffffff16565b5b8015612d6d576000600060016101000a81548160ff0219169083151502179055505b505b565b612d803361263763ffffffff16565b1515612d8c5760006000fd5b612d9b81614fac63ffffffff16565b5b5b50565b600060606101a560005060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612e2157600a809050604051806060016040528060278152602001615ca86027913991509150612e42565b60008090506040518060200160405280600081526020015091509150612e42565b9b509b9950505050505050505050565b612e613361263763ffffffff16565b1515612e6d5760006000fd5b606760009054906101000a900460ff16151515612e8a5760006000fd5b6001606760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b5b5b565b6101a06000505481565b60606101046000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fb35780601f10612f8857610100808354040283529160200191612fb3565b820191906000526020600020905b815481529060010190602001808311612f9657829003601f168201915b50505050509050612fbf565b90565b612fd1336136a363ffffffff16565b1515612fdd5760006000fd5b612fec8161500a63ffffffff16565b5b5b50565b6130003361506963ffffffff16565b5b565b6000606760009054906101000a900460ff161515156130225760006000fd5b600061019e60005060008481526020019081526020016000206000509050600081600301600050541415156130a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615c79602f913960400191505060405180910390fd5b6101a360005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600084815260200190815260200160002060005060000160009054906101000a900460ff16151515613185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e2074686973207374616d7000000000000081526020015060200191505060405180910390fd5b80600101600050546131a860018360020160005054614a9f90919063ffffffff16565b11151515613221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d617820636c6f6e65732068617665206265656e20726561636865640000000081526020015060200191505060405180910390fd5b806000016000505434101515156132a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081526020015060200191505060405180910390fd5b6132be60018260020160005054614a9f90919063ffffffff16565b816002016000508190909055506132f66101a2600050546132e4856148bf63ffffffff16565b61ffff16614a3890919063ffffffff16565b8160000160005081909090555061331961019d600050614e6e909063ffffffff16565b600061333161019d600050614e58909063ffffffff16565b905061333b615ba3565b60405180608001604052808460000160005054815260200160008152602001600081526020018681526020015090508061019e6000506000848152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050600161019f600050600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506134048683614c4763ffffffff16565b60016101a360005060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600087815260200190815260200160002060005060000160006101000a81548160ff021916908315150217905550816101a360005060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008781526020019081526020016000206000506001016000508190909055508573ffffffffffffffffffffffffffffffffffffffff167f550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be8334604051808381526020018281526020019250505060405180910390a2819350505050613545565050505b5b92915050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156135885760006000fd5b8060d060005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35b5050565b61019d6000508060000160005054905081565b60006136bd82610138600050614ac890919063ffffffff16565b90506136c4565b919050565b60006136d96150c863ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156137565760006000fd5b505afa15801561376b573d600060003e3d6000fd5b505050506040513d60208110156137825760006000fd5b8101908080519060200190929190505050905061379a565b90565b6137ae848484611e7463ffffffff16565b6137c0848484846150f763ffffffff16565b15156137cc5760006000fd5b5b50505050565b600060019054906101000a900460ff16806137f857506137f7614b6663ffffffff16565b5b806138105750600060009054906101000a900460ff16155b1515613867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff1615905080156138b9576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b6138c7614b7e63ffffffff16565b15156138d35760006000fd5b6138e16152f363ffffffff16565b15156138ed5760006000fd5b6138fc8261531563ffffffff16565b5b801561391f576000600060016101000a81548160ff0219169083151502179055505b505b50565b60606139358261449063ffffffff16565b15156139415760006000fd5b61010560005060008381526020019081526020016000206000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139ef5780601f106139c4576101008083540402835291602001916139ef565b820191906000526020600020905b8154815290600101906020018083116139d257829003601f168201915b505050505090506139fb565b919050565b600060019054906101000a900460ff1680613a255750613a24614b6663ffffffff16565b5b80613a3d5750600060009054906101000a900460ff16155b1515613a94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015613ae6576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b85600081118015613af8575060ff8111155b1515613b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615c426037913960400191505060405180910390fd5b613b5e3361544863ffffffff16565b613b6c614b7e63ffffffff16565b1515613b8157613b80612c4063ffffffff16565b5b613b8f6152f363ffffffff16565b1515613ba657613ba5848461265c63ffffffff16565b5b613bb5336137d363ffffffff16565b866101a0600050819090905550856101a160006101000a81548160ff021916908360ff160217905550846101a2600050819090905550613bf3615ba3565b6040518060800160405280600081526020016000815260200160008152602001600081526020015090508061019e600050600060008152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050505b5b508015613c9e576000600060016101000a81548160ff0219169083151502179055505b505b5050505050565b6101a3600050602052816000526040600020600050602052806000526040600020600091509150508060000160009054906101000a900460ff16908060010160005054905082565b61019e6000506020528060005260406000206000915090508060000160005054908060010160005054908060020160005054908060030160005054905084565b6000606760009054906101000a900460ff16151515613d4e5760006000fd5b613d5c612a3f63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613de1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615ccf602f913960400191505060405180910390fd5b6000613df161283b63ffffffff16565b9050600061019e6000506000858152602001908152602001600020600050905060008160030160005054141515613e73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615c79602f913960400191505060405180910390fd5b6101a360005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600085815260200190815260200160002060005060000160009054906101000a900460ff16151515613f56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e2074686973207374616d7000000000000081526020015060200191505060405180910390fd5b8060010160005054613f7960018360020160005054614a9f90919063ffffffff16565b11151515613fd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cfe602c913960400191505060405180910390fd5b613fed60018260020160005054614a9f90919063ffffffff16565b8160020160005081909090555061401061019d600050614e6e909063ffffffff16565b600061402861019d600050614e58909063ffffffff16565b9050614032615ba3565b60405180608001604052808460000160005054815260200160008152602001600081526020018781526020015090508061019e6000506000848152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050600161019f600050600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506140fb8483614c4763ffffffff16565b60016101a360005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600088815260200190815260200160002060005060000160006101000a81548160ff021916908315150217905550816101a360005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008881526020019081526020016000206000506001016000508190909055508373ffffffffffffffffffffffffffffffffffffffff167f463271931ea69b9522a3fffad595ff95986953dbd0f71e563deacab706f0e0b5836040518082815260200191505060405180910390a28373ffffffffffffffffffffffffffffffffffffffff167f550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be838560000160005054604051808381526020018281526020019250505060405180910390a28194505050505061429356505050505b5b5b919050565b5b5050505050565b606060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506142fc612a3f63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156143e45760146000369050036040519080825280601f01601f1916602001820160405280156143695781602001600182028038833980820191505090505b50905080506000600090505b81518110156143e25760003682818110151561438d57fe5b9050013560f81c60f81b82828151811015156143a557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050614375565b505b809150506143ee56505b90565b600060d060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905061448a565b92915050565b6000600060cd600050600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591505061450756505b919050565b60006014820183511015151561456d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615dcd6026913960400191505060405180910390fd5b601482019150815073ffffffffffffffffffffffffffffffffffffffff82840151169050809050614599565b92915050565b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506145ee6136c963ffffffff16565b505b50565b60006000614606836128c263ffffffff16565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061467b57508373ffffffffffffffffffffffffffffffffffffffff1661466384611c1d63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16145b80614692575061469181856143f163ffffffff16565b5b91505061469b56505b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166146c7826128c263ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff161415156146ea5760006000fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156147275760006000fd5b6147368161558063ffffffff16565b61478b60cf60005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050615647909063ffffffff16565b6147e060cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050614e6e909063ffffffff16565b8160cd600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050565b60008282111515156148a85760006000fd5b60008284039050809150506148b956505b92915050565b60006148c9615ba3565b61019e6000506000848152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050548152602001600382016000505481526020015050905060006000905060006101a160009054906101000a900460ff1690505b60008160ff161115614a025760008160ff1643034090506149a2816001600289020160208110151561497157fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661567363ffffffff16565b60086149e98360028a026020811015156149b857fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661567363ffffffff16565b901b17830192508250505b808060019003915050614943565b5081604001516101a160009054906101000a900460ff1660ff1682811515614a2657fe5b040192505050614a335650505b919050565b60006000831415614a4c5760009050614a77565b60008284029050828482811515614a5f57fe5b04141515614a6d5760006000fd5b80915050614a7756505b92915050565b614a9b614a8f826128c263ffffffff16565b8261568563ffffffff16565b5b50565b600060008284019050838110151515614ab85760006000fd5b80915050614ac256505b92915050565b6000600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515614b075760006000fd5b8260000160005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050614b60565b92915050565b60006000303b905060008114915050614b7b56505b90565b6000614b966380ac58cd60e01b611b0263ffffffff16565b9050614b9d565b90565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515614bd65760006000fd5b6001609a6000506000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515614c845760006000fd5b614c938161449063ffffffff16565b151515614ca05760006000fd5b8160cd600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614d4a60cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050614e6e909063ffffffff16565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050565b614dba8261449063ffffffff16565b1515614dc65760006000fd5b8061010560005060008481526020019081526020016000206000509080519060200190614df4929190615b1e565b505b5050565b614e118160346000506156f690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a25b50565b600081600001600050549050614e69565b919050565b60018160000160008282825054019250508190909055505b50565b600060019054906101000a900460ff1680614eae5750614ead614b6663ffffffff16565b5b80614ec65750600060009054906101000a900460ff16155b1515614f1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015614f6f576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b614f856301ffc9a760e01b614ba063ffffffff16565b5b8015614fa8576000600060016101000a81548160ff0219169083151502179055505b505b565b614fc38160346000506157b190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a25b50565b615022816101386000506157b190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a25b50565b615081816101386000506156f690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a25b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506150f4565b90565b60006151208473ffffffffffffffffffffffffffffffffffffffff1661586d909063ffffffff16565b151561512f57600190506152eb565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561520b5780820151818401525b6020810190506151ef565b50505050905090810190601f1680156152385780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561525b5760006000fd5b505af1158015615270573d600060003e3d6000fd5b505050506040513d60208110156152875760006000fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506152eb56505b949350505050565b600061530b635b5e139f60e01b611b0263ffffffff16565b9050615312565b90565b600060019054906101000a900460ff168061533a5750615339614b6663ffffffff16565b5b806153525750600060009054906101000a900460ff16155b15156153a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff1615905080156153fb576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b61540a826136a363ffffffff16565b15156154205761541f8261500a63ffffffff16565b5b5b8015615443576000600060016101000a81548160ff0219169083151502179055505b505b50565b600060019054906101000a900460ff168061546d575061546c614b6663ffffffff16565b5b806154855750600060009054906101000a900460ff16155b15156154dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff16159050801561552e576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b61553d8261588763ffffffff16565b6000606760006101000a81548160ff0219169083151502179055505b801561557b576000600060016101000a81548160ff0219169083151502179055505b505b50565b600073ffffffffffffffffffffffffffffffffffffffff1660ce600050600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561564357600060ce600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b6156626001826000016000505461489690919063ffffffff16565b816000016000508190909055505b50565b60008160001c9050615680565b919050565b61569582826159ba63ffffffff16565b600061010560005060008381526020019081526020016000206000508054600181600116156101000203166002900490501415156156f157610105600050600082815260200190815260200160002060006156f09190615bce565b5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156157335760006000fd5b6157438282614ac863ffffffff16565b151561574f5760006000fd5b60008260000160005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156157ee5760006000fd5b6157fe8282614ac863ffffffff16565b15151561580b5760006000fd5b60018260000160005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b60006000823b90506000811191505061588256505b919050565b600060019054906101000a900460ff16806158ac57506158ab614b6663ffffffff16565b5b806158c45750600060009054906101000a900460ff16155b151561591b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff16159050801561596d576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b61597c8261263763ffffffff16565b15156159925761599182614fac63ffffffff16565b5b5b80156159b5576000600060016101000a81548160ff0219169083151502179055505b505b50565b8173ffffffffffffffffffffffffffffffffffffffff166159e0826128c263ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16141515615a035760006000fd5b615a128161558063ffffffff16565b615a6760cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050615647909063ffffffff16565b600060cd600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615b5f57805160ff1916838001178555615b92565b82800160010185558215615b92579182015b82811115615b915782518260005090905591602001919060010190615b71565b5b509050615b9f9190615c16565b5090565b6040518060800160405280600081526020016000815260200160008152602001600081526020015090565b50805460018160011615610100020316600290046000825580601f10615bf45750615c13565b601f016020900490600052602060002090810190615c129190615c16565b5b50565b615c3e9190615c20565b80821115615c3a5760008181506000905550600101615c20565b5090565b9056fe507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473557365722068617320616c72656164792077697468647261776e20736f6d652062616c616e63655472616e73616374696f6e2063616e206f6e6c7920626520706572666f6d6564206279207468652072656c61796572536f727279212054686973205374616d70206973206e6f742063757272656e746c7920617661696c61626c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f2077697468647261775072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073475245415445525f4f525f455155414c5f544f5f32305f4c454e4754485f5245515549524544a265627a7a723158208eb390e03390687f12f997021b9358e0a89ce0c91c137afba9b0666f5b41e91264736f6c634300050b0032",
  "deployedBytecode": "0x6080604052600436106102975760003560e01c806380274db71161015a578063aa271e1a116100c1578063cbf1304d1161007a578063cbf1304d14611801578063ccd68f3b1461187d578063da710b92146118e3578063e06e0e2214611934578063e20c6d3d146119e5578063e985e9c514611a7757610297565b8063aa271e1a146113b5578063ac57041114611420578063b88d4fde1461144c578063c4d66de814611567578063c87b56dd146115ba578063cbdfa1531461167157610297565b806395d89b411161011357806395d89b41146111ca578063983b2d561461125c57806398650275146112af5780639925856e146112c7578063a22cb4651461132a578063a2309ff81461138957610297565b806380274db714610e975780638129fc1c14610f4057806382dc1ec414610f5857806383947ea014610fab5780638456cb59146111865780638a337d8a1461119e57610297565b80634cd88b76116101fe5780636a6da61e116101b75780636a6da61e14610c115780636ef8d66d14610c7857806370a0823114610c9057806374e2436714610cf757806374e861d614610d4c57806377097fc814610da457610297565b80634cd88b761461081f57806350bb4e7f1461098e5780635c975abb14610aa15780635e01eb5a14610ad15780635e2c19db14610b295780636352211e14610b9457610297565b806323b872dd1161025057806323b872dd1461061d5780632620aced1461069a5780633ccfd60b146106ef5780633f4ba83a1461071f57806342842e0e1461073757806346fbf68e146107b457610297565b806301ffc9a7146102b957806306fdde031461032d578063081812fc146103bf578063095ea7b31461043c5780631da97ea3146104995780631e5f3627146105ca57610297565b5b606760009054906101000a900460ff161515156102b55760006000fd5b5b5b005b3480156102c65760006000fd5b50610313600480360360208110156102de5760006000fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611b02565b604051808215151515815260200191505060405180910390f35b34801561033a5760006000fd5b50610343611b72565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103845780820151818401525b602081019050610368565b50505050905090810190601f1680156103b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103cc5760006000fd5b506103fa600480360360208110156103e45760006000fd5b8101908080359060200190929190505050611c1d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104495760006000fd5b50610497600480360360408110156104615760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c7d565b005b3480156104a65760006000fd5b50610588600480360360408110156104be5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104fc5760006000fd5b82018360208201111561050f5760006000fd5b803590602001918460018302840111640100000000831117156105325760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050611dd4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105d75760006000fd5b5061061b600480360360208110156105ef5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e45565b005b34801561062a5760006000fd5b50610698600480360360608110156106425760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e74565b005b3480156106a75760006000fd5b506106d5600480360360208110156106bf5760006000fd5b8101908080359060200190929190505050611ea7565b604051808215151515815260200191505060405180910390f35b3480156106fc5760006000fd5b506107056122e5565b604051808215151515815260200191505060405180910390f35b34801561072c5760006000fd5b50610735612553565b005b3480156107445760006000fd5b506107b26004803603606081101561075c5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061260d565b005b3480156107c15760006000fd5b50610805600480360360208110156107d95760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612637565b604051808215151515815260200191505060405180910390f35b34801561082c5760006000fd5b5061098c600480360360408110156108445760006000fd5b81019080803590602001906401000000008111156108625760006000fd5b8201836020820111156108755760006000fd5b803590602001918460018302840111640100000000831117156108985760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290803590602001906401000000008111156109005760006000fd5b8201836020820111156109135760006000fd5b803590602001918460018302840111640100000000831117156109365760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090909192909091929050505061265c565b005b34801561099b5760006000fd5b50610a87600480360360608110156109b35760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109fb5760006000fd5b820183602082011115610a0e5760006000fd5b80359060200191846001830284011164010000000083111715610a315760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509090919290909192905050506127d1565b604051808215151515815260200191505060405180910390f35b348015610aae5760006000fd5b50610ab761281f565b604051808215151515815260200191505060405180910390f35b348015610ade5760006000fd5b50610ae761283b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b365760006000fd5b50610b7a60048036036020811015610b4e5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061289c565b604051808215151515815260200191505060405180910390f35b348015610ba15760006000fd5b50610bcf60048036036020811015610bb95760006000fd5b81019080803590602001909291905050506128c2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1e5760006000fd5b50610c6260048036036020811015610c365760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061294b565b6040518082815260200191505060405180910390f35b348015610c855760006000fd5b50610c8e612967565b005b348015610c9d5760006000fd5b50610ce160048036036020811015610cb55760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612979565b6040518082815260200191505060405180910390f35b348015610d045760006000fd5b50610d3260048036036020811015610d1c5760006000fd5b8101908080359060200190929190505050612a19565b604051808215151515815260200191505060405180910390f35b348015610d595760006000fd5b50610d62612a3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610db15760006000fd5b50610e7d60048036036040811015610dc95760006000fd5b810190808035906020019092919080359060200190640100000000811115610df15760006000fd5b820183602082011115610e045760006000fd5b80359060200191846001830284011164010000000083111715610e275760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050612a6e565b604051808215151515815260200191505060405180910390f35b348015610ea45760006000fd5b50610f2260048036036020811015610ebc5760006000fd5b8101908080359060200190640100000000811115610eda5760006000fd5b820183602082011115610eed5760006000fd5b80359060200191846001830284011164010000000083111715610f105760006000fd5b90919293909091929390505050612c2a565b60405180826000191660001916815260200191505060405180910390f35b348015610f4d5760006000fd5b50610f56612c40565b005b348015610f655760006000fd5b50610fa960048036036020811015610f7d5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d71565b005b348015610fb85760006000fd5b506111036004803603610120811015610fd15760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561102f5760006000fd5b8201836020820111156110425760006000fd5b803590602001918460018302840111640100000000831117156110655760006000fd5b9091929390909192939080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156110b15760006000fd5b8201836020820111156110c45760006000fd5b803590602001918460018302840111640100000000831117156110e75760006000fd5b9091929390909192939080359060200190929190505050612da0565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561114a5780820151818401525b60208101905061112e565b50505050905090810190601f1680156111775780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156111935760006000fd5b5061119c612e52565b005b3480156111ab5760006000fd5b506111b4612f0d565b6040518082815260200191505060405180910390f35b3480156111d75760006000fd5b506111e0612f17565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112215780820151818401525b602081019050611205565b50505050905090810190601f16801561124e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156112695760006000fd5b506112ad600480360360208110156112815760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fc2565b005b3480156112bc5760006000fd5b506112c5612ff1565b005b611314600480360360408110156112de5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613003565b6040518082815260200191505060405180910390f35b3480156113375760006000fd5b506113876004803603604081101561134f5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061354c565b005b3480156113965760006000fd5b5061139f613690565b6040518082815260200191505060405180910390f35b3480156113c25760006000fd5b50611406600480360360208110156113da5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136a3565b604051808215151515815260200191505060405180910390f35b34801561142d5760006000fd5b506114366136c9565b6040518082815260200191505060405180910390f35b3480156114595760006000fd5b50611565600480360360808110156114715760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156114d95760006000fd5b8201836020820111156114ec5760006000fd5b8035906020019184600183028401116401000000008311171561150f5760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090909192909091929050505061379d565b005b3480156115745760006000fd5b506115b86004803603602081101561158c5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506137d3565b005b3480156115c75760006000fd5b506115f5600480360360208110156115df5760006000fd5b8101908080359060200190929190505050613924565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156116365780820151818401525b60208101905061161a565b50505050905090810190601f1680156116635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561167e5760006000fd5b506117ff600480360360a08110156116965760006000fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190803590602001906401000000008111156116d55760006000fd5b8201836020820111156116e85760006000fd5b8035906020019184600183028401116401000000008311171561170b5760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290803590602001906401000000008111156117735760006000fd5b8201836020820111156117865760006000fd5b803590602001918460018302840111640100000000831117156117a95760006000fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050909091929090919290505050613a00565b005b34801561180e5760006000fd5b5061185c600480360360408110156118265760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613ca7565b60405180831515151581526020018281526020019250505060405180910390f35b34801561188a5760006000fd5b506118b8600480360360208110156118a25760006000fd5b8101908080359060200190929190505050613cef565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156118f05760006000fd5b5061191e600480360360208110156119085760006000fd5b8101908080359060200190929190505050613d2f565b6040518082815260200191505060405180910390f35b3480156119415760006000fd5b506119e3600480360360808110156119595760006000fd5b81019080803590602001906401000000008111156119775760006000fd5b82018360208201111561198a5760006000fd5b803590602001918460018302840111640100000000831117156119ad5760006000fd5b9091929390909192939080351515906020019092919080359060200190929190803560001916906020019092919050505061429a565b005b3480156119f25760006000fd5b506119fb6142a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611a3c5780820151818401525b602081019050611a20565b50505050905090810190601f168015611a695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015611a845760006000fd5b50611ae860048036036040811015611a9c5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506143f1565b604051808215151515815260200191505060405180910390f35b6000609a6000506000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050611b6d565b919050565b60606101036000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c0e5780601f10611be357610100808354040283529160200191611c0e565b820191906000526020600020905b815481529060010190602001808311611bf157829003601f168201915b50505050509050611c1a565b90565b6000611c2e8261449063ffffffff16565b1515611c3a5760006000fd5b60ce600050600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611c78565b919050565b6000611c8e826128c263ffffffff16565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611ccc5760006000fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611d125750611d1181336143f163ffffffff16565b5b1515611d1e5760006000fd5b8260ce600050600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505b5050565b60006000839050611de9612a3f63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611e3557611e3083601485510361450c63ffffffff16565b905080505b80915050611e3f56505b92915050565b611e54336136a363ffffffff16565b1515611e605760006000fd5b611e6f8161459f63ffffffff16565b5b5b50565b611e8433826145f363ffffffff16565b1515611e905760006000fd5b611ea18383836146a163ffffffff16565b5b505050565b6000606760009054906101000a900460ff16151515611ec65760006000fd5b6000611ed661283b63ffffffff16565b90506101a360005060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600084815260200190815260200160002060005060000160009054906101000a900460ff161515611fba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5573657220646f6573206e6f74206f776e2074686973207374616d700000000081526020015060200191505060405180910390fd5b600061019e60005060008581526020019081526020016000206000509050600081600001600050549050803073ffffffffffffffffffffffffffffffffffffffff163110151515612056576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526044815260200180615d896044913960600191505060405180910390fd5b6120716001836002016000505461489690919063ffffffff16565b826002016000508190909055506120a96101a260005054612097876148bf63ffffffff16565b61ffff16614a3890919063ffffffff16565b8260000160005081909090555060006101a360005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000506000878152602001908152602001600020600050905060008160000160006101000a81548160ff0219169083151502179055506121478160010160005054614a7d63ffffffff16565b600061019f60005060008360010160005054815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff167f106852634153ba32c7db4c08ec749c468343ebd82b312b849a331f58a164867a878360010160005054604051808381526020018281526020019250505060405180910390a261019e600050600082600101600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905560038201600050600090555050612282826101a460005060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054614a9f90919063ffffffff16565b6101a460005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555060019450505050506122df56505050505b5b919050565b6000606760009054906101000a900460ff161515156123045760006000fd5b600061231461283b63ffffffff16565b905060006101a460005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541115156123b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615d586031913960400191505060405180910390fd5b60006101a460005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054905060006101a460005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555060016101a560005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f76a3496ed122399b6d8c356545cf5095195fd823dc634be8fcd7b275976679a7826040518082815260200191505060405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612541573d600060003e3d6000fd5b5060019250505061254f5650505b5b90565b6125623361263763ffffffff16565b151561256e5760006000fd5b606760009054906101000a900460ff16151561258a5760006000fd5b6000606760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b5b5b565b6126318383836040518060200160405280600081526020015061379d63ffffffff16565b5b505050565b6000612650826034600050614ac890919063ffffffff16565b9050612657565b919050565b600060019054906101000a900460ff16806126815750612680614b6663ffffffff16565b5b806126995750600060009054906101000a900460ff16155b15156126f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015612742576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b612750614b7e63ffffffff16565b151561275c5760006000fd5b826101036000509080519060200190612776929190615b1e565b50816101046000509080519060200190612791929190615b1e565b506127a8635b5e139f60e01b614ba063ffffffff16565b5b80156127cb576000600060016101000a81548160ff0219169083151502179055505b505b5050565b60006127e2336136a363ffffffff16565b15156127ee5760006000fd5b6127fe8484614c4763ffffffff16565b61280e8383614dab63ffffffff16565b60019050612817565b5b9392505050565b6000606760009054906101000a900460ff169050612838565b90565b6000612892336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611dd463ffffffff16565b9050612899565b90565b6101a560005060205280600052604060002060009150909054906101000a900460ff1681565b6000600060cd600050600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561293c5760006000fd5b8091505061294656505b919050565b6101a46000506020528060005260406000206000915090505481565b61297633614dfa63ffffffff16565b5b565b6000600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156129b85760006000fd5b612a0d60cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050614e58909063ffffffff16565b9050612a14565b919050565b61019f60005060205280600052604060002060009150909054906101000a900460ff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612a6b565b90565b6000612a7f336136a363ffffffff16565b1515612a8b5760006000fd5b606760009054906101000a900460ff16151515612aa85760006000fd5b612ab0615ba3565b6040518060800160405280612ad46101a26000505487614a3890919063ffffffff16565b81526020016101a06000505481526020016000815260200160008152602001509050612b0c61019d600050614e6e909063ffffffff16565b6000612b2461019d600050614e58909063ffffffff16565b90508161019e6000506000838152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050600161019f600050600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f51a8f6a84a50f4da36896f422d3ec8416e819501f8ee32dfed22316b472f07978287604051808381526020018281526020019250505060405180910390a2612c173382866127d163ffffffff16565b92505050612c225650505b5b5b92915050565b60006201e24060001b9050612c3a565b92915050565b600060019054906101000a900460ff1680612c655750612c64614b6663ffffffff16565b5b80612c7d5750600060009054906101000a900460ff16155b1515612cd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015612d26576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b612d34614e8963ffffffff16565b612d4a6380ac58cd60e01b614ba063ffffffff16565b5b8015612d6d576000600060016101000a81548160ff0219169083151502179055505b505b565b612d803361263763ffffffff16565b1515612d8c5760006000fd5b612d9b81614fac63ffffffff16565b5b5b50565b600060606101a560005060008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612e2157600a809050604051806060016040528060278152602001615ca86027913991509150612e42565b60008090506040518060200160405280600081526020015091509150612e42565b9b509b9950505050505050505050565b612e613361263763ffffffff16565b1515612e6d5760006000fd5b606760009054906101000a900460ff16151515612e8a5760006000fd5b6001606760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b5b5b565b6101a06000505481565b60606101046000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fb35780601f10612f8857610100808354040283529160200191612fb3565b820191906000526020600020905b815481529060010190602001808311612f9657829003601f168201915b50505050509050612fbf565b90565b612fd1336136a363ffffffff16565b1515612fdd5760006000fd5b612fec8161500a63ffffffff16565b5b5b50565b6130003361506963ffffffff16565b5b565b6000606760009054906101000a900460ff161515156130225760006000fd5b600061019e60005060008481526020019081526020016000206000509050600081600301600050541415156130a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615c79602f913960400191505060405180910390fd5b6101a360005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600084815260200190815260200160002060005060000160009054906101000a900460ff16151515613185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e2074686973207374616d7000000000000081526020015060200191505060405180910390fd5b80600101600050546131a860018360020160005054614a9f90919063ffffffff16565b11151515613221576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d617820636c6f6e65732068617665206265656e20726561636865640000000081526020015060200191505060405180910390fd5b806000016000505434101515156132a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081526020015060200191505060405180910390fd5b6132be60018260020160005054614a9f90919063ffffffff16565b816002016000508190909055506132f66101a2600050546132e4856148bf63ffffffff16565b61ffff16614a3890919063ffffffff16565b8160000160005081909090555061331961019d600050614e6e909063ffffffff16565b600061333161019d600050614e58909063ffffffff16565b905061333b615ba3565b60405180608001604052808460000160005054815260200160008152602001600081526020018681526020015090508061019e6000506000848152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050600161019f600050600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506134048683614c4763ffffffff16565b60016101a360005060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600087815260200190815260200160002060005060000160006101000a81548160ff021916908315150217905550816101a360005060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008781526020019081526020016000206000506001016000508190909055508573ffffffffffffffffffffffffffffffffffffffff167f550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be8334604051808381526020018281526020019250505060405180910390a2819350505050613545565050505b5b92915050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156135885760006000fd5b8060d060005060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35b5050565b61019d6000508060000160005054905081565b60006136bd82610138600050614ac890919063ffffffff16565b90506136c4565b919050565b60006136d96150c863ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156137565760006000fd5b505afa15801561376b573d600060003e3d6000fd5b505050506040513d60208110156137825760006000fd5b8101908080519060200190929190505050905061379a565b90565b6137ae848484611e7463ffffffff16565b6137c0848484846150f763ffffffff16565b15156137cc5760006000fd5b5b50505050565b600060019054906101000a900460ff16806137f857506137f7614b6663ffffffff16565b5b806138105750600060009054906101000a900460ff16155b1515613867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff1615905080156138b9576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b6138c7614b7e63ffffffff16565b15156138d35760006000fd5b6138e16152f363ffffffff16565b15156138ed5760006000fd5b6138fc8261531563ffffffff16565b5b801561391f576000600060016101000a81548160ff0219169083151502179055505b505b50565b60606139358261449063ffffffff16565b15156139415760006000fd5b61010560005060008381526020019081526020016000206000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139ef5780601f106139c4576101008083540402835291602001916139ef565b820191906000526020600020905b8154815290600101906020018083116139d257829003601f168201915b505050505090506139fb565b919050565b600060019054906101000a900460ff1680613a255750613a24614b6663ffffffff16565b5b80613a3d5750600060009054906101000a900460ff16155b1515613a94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015613ae6576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b85600081118015613af8575060ff8111155b1515613b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615c426037913960400191505060405180910390fd5b613b5e3361544863ffffffff16565b613b6c614b7e63ffffffff16565b1515613b8157613b80612c4063ffffffff16565b5b613b8f6152f363ffffffff16565b1515613ba657613ba5848461265c63ffffffff16565b5b613bb5336137d363ffffffff16565b866101a0600050819090905550856101a160006101000a81548160ff021916908360ff160217905550846101a2600050819090905550613bf3615ba3565b6040518060800160405280600081526020016000815260200160008152602001600081526020015090508061019e600050600060008152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050505b5b508015613c9e576000600060016101000a81548160ff0219169083151502179055505b505b5050505050565b6101a3600050602052816000526040600020600050602052806000526040600020600091509150508060000160009054906101000a900460ff16908060010160005054905082565b61019e6000506020528060005260406000206000915090508060000160005054908060010160005054908060020160005054908060030160005054905084565b6000606760009054906101000a900460ff16151515613d4e5760006000fd5b613d5c612a3f63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613de1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615ccf602f913960400191505060405180910390fd5b6000613df161283b63ffffffff16565b9050600061019e6000506000858152602001908152602001600020600050905060008160030160005054141515613e73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615c79602f913960400191505060405180910390fd5b6101a360005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600085815260200190815260200160002060005060000160009054906101000a900460ff16151515613f56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e2074686973207374616d7000000000000081526020015060200191505060405180910390fd5b8060010160005054613f7960018360020160005054614a9f90919063ffffffff16565b11151515613fd2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615cfe602c913960400191505060405180910390fd5b613fed60018260020160005054614a9f90919063ffffffff16565b8160020160005081909090555061401061019d600050614e6e909063ffffffff16565b600061402861019d600050614e58909063ffffffff16565b9050614032615ba3565b60405180608001604052808460000160005054815260200160008152602001600081526020018781526020015090508061019e6000506000848152602001908152602001600020600050600082015181600001600050909055602082015181600101600050909055604082015181600201600050909055606082015181600301600050909055905050600161019f600050600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506140fb8483614c4763ffffffff16565b60016101a360005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050600088815260200190815260200160002060005060000160006101000a81548160ff021916908315150217905550816101a360005060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008881526020019081526020016000206000506001016000508190909055508373ffffffffffffffffffffffffffffffffffffffff167f463271931ea69b9522a3fffad595ff95986953dbd0f71e563deacab706f0e0b5836040518082815260200191505060405180910390a28373ffffffffffffffffffffffffffffffffffffffff167f550b743fe7aa34355e646fd0ad2178394d4cdcad0692a40382c8663e61fce7be838560000160005054604051808381526020018281526020019250505060405180910390a28194505050505061429356505050505b5b5b919050565b5b5050505050565b606060606000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090506142fc612a3f63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156143e45760146000369050036040519080825280601f01601f1916602001820160405280156143695781602001600182028038833980820191505090505b50905080506000600090505b81518110156143e25760003682818110151561438d57fe5b9050013560f81c60f81b82828151811015156143a557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050614375565b505b809150506143ee56505b90565b600060d060005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905061448a565b92915050565b6000600060cd600050600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591505061450756505b919050565b60006014820183511015151561456d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615dcd6026913960400191505060405180910390fd5b601482019150815073ffffffffffffffffffffffffffffffffffffffff82840151169050809050614599565b92915050565b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506145ee6136c963ffffffff16565b505b50565b60006000614606836128c263ffffffff16565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061467b57508373ffffffffffffffffffffffffffffffffffffffff1661466384611c1d63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16145b80614692575061469181856143f163ffffffff16565b5b91505061469b56505b92915050565b8273ffffffffffffffffffffffffffffffffffffffff166146c7826128c263ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff161415156146ea5760006000fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156147275760006000fd5b6147368161558063ffffffff16565b61478b60cf60005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050615647909063ffffffff16565b6147e060cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050614e6e909063ffffffff16565b8160cd600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050565b60008282111515156148a85760006000fd5b60008284039050809150506148b956505b92915050565b60006148c9615ba3565b61019e6000506000848152602001908152602001600020600050604051806080016040529081600082016000505481526020016001820160005054815260200160028201600050548152602001600382016000505481526020015050905060006000905060006101a160009054906101000a900460ff1690505b60008160ff161115614a025760008160ff1643034090506149a2816001600289020160208110151561497157fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661567363ffffffff16565b60086149e98360028a026020811015156149b857fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661567363ffffffff16565b901b17830192508250505b808060019003915050614943565b5081604001516101a160009054906101000a900460ff1660ff1682811515614a2657fe5b040192505050614a335650505b919050565b60006000831415614a4c5760009050614a77565b60008284029050828482811515614a5f57fe5b04141515614a6d5760006000fd5b80915050614a7756505b92915050565b614a9b614a8f826128c263ffffffff16565b8261568563ffffffff16565b5b50565b600060008284019050838110151515614ab85760006000fd5b80915050614ac256505b92915050565b6000600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515614b075760006000fd5b8260000160005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050614b60565b92915050565b60006000303b905060008114915050614b7b56505b90565b6000614b966380ac58cd60e01b611b0263ffffffff16565b9050614b9d565b90565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515614bd65760006000fd5b6001609a6000506000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515614c845760006000fd5b614c938161449063ffffffff16565b151515614ca05760006000fd5b8160cd600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614d4a60cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050614e6e909063ffffffff16565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050565b614dba8261449063ffffffff16565b1515614dc65760006000fd5b8061010560005060008481526020019081526020016000206000509080519060200190614df4929190615b1e565b505b5050565b614e118160346000506156f690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a25b50565b600081600001600050549050614e69565b919050565b60018160000160008282825054019250508190909055505b50565b600060019054906101000a900460ff1680614eae5750614ead614b6663ffffffff16565b5b80614ec65750600060009054906101000a900460ff16155b1515614f1d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff161590508015614f6f576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b614f856301ffc9a760e01b614ba063ffffffff16565b5b8015614fa8576000600060016101000a81548160ff0219169083151502179055505b505b565b614fc38160346000506157b190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a25b50565b615022816101386000506157b190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a25b50565b615081816101386000506156f690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a25b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506150f4565b90565b60006151208473ffffffffffffffffffffffffffffffffffffffff1661586d909063ffffffff16565b151561512f57600190506152eb565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561520b5780820151818401525b6020810190506151ef565b50505050905090810190601f1680156152385780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561525b5760006000fd5b505af1158015615270573d600060003e3d6000fd5b505050506040513d60208110156152875760006000fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506152eb56505b949350505050565b600061530b635b5e139f60e01b611b0263ffffffff16565b9050615312565b90565b600060019054906101000a900460ff168061533a5750615339614b6663ffffffff16565b5b806153525750600060009054906101000a900460ff16155b15156153a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff1615905080156153fb576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b61540a826136a363ffffffff16565b15156154205761541f8261500a63ffffffff16565b5b5b8015615443576000600060016101000a81548160ff0219169083151502179055505b505b50565b600060019054906101000a900460ff168061546d575061546c614b6663ffffffff16565b5b806154855750600060009054906101000a900460ff16155b15156154dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff16159050801561552e576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b61553d8261588763ffffffff16565b6000606760006101000a81548160ff0219169083151502179055505b801561557b576000600060016101000a81548160ff0219169083151502179055505b505b50565b600073ffffffffffffffffffffffffffffffffffffffff1660ce600050600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561564357600060ce600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b6156626001826000016000505461489690919063ffffffff16565b816000016000508190909055505b50565b60008160001c9050615680565b919050565b61569582826159ba63ffffffff16565b600061010560005060008381526020019081526020016000206000508054600181600116156101000203166002900490501415156156f157610105600050600082815260200190815260200160002060006156f09190615bce565b5b5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156157335760006000fd5b6157438282614ac863ffffffff16565b151561574f5760006000fd5b60008260000160005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156157ee5760006000fd5b6157fe8282614ac863ffffffff16565b15151561580b5760006000fd5b60018260000160005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b60006000823b90506000811191505061588256505b919050565b600060019054906101000a900460ff16806158ac57506158ab614b6663ffffffff16565b5b806158c45750600060009054906101000a900460ff16155b151561591b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180615d2a602e913960400191505060405180910390fd5b6000600060019054906101000a900460ff16159050801561596d576001600060016101000a81548160ff0219169083151502179055506001600060006101000a81548160ff0219169083151502179055505b61597c8261263763ffffffff16565b15156159925761599182614fac63ffffffff16565b5b5b80156159b5576000600060016101000a81548160ff0219169083151502179055505b505b50565b8173ffffffffffffffffffffffffffffffffffffffff166159e0826128c263ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16141515615a035760006000fd5b615a128161558063ffffffff16565b615a6760cf60005060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050615647909063ffffffff16565b600060cd600050600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10615b5f57805160ff1916838001178555615b92565b82800160010185558215615b92579182015b82811115615b915782518260005090905591602001919060010190615b71565b5b509050615b9f9190615c16565b5090565b6040518060800160405280600081526020016000815260200160008152602001600081526020015090565b50805460018160011615610100020316600290046000825580601f10615bf45750615c13565b601f016020900490600052602060002090810190615c129190615c16565b5b50565b615c3e9190615c20565b80821115615c3a5760008181506000905550600101615c20565b5090565b9056fe507269636520446570746820706172616d65746572206d7573742062652077697468696e207468656e2072616e6765205b312d3235355d596f752063616e206f6e6c792067656e6572617465206e6577207374616d70732066726f6d2047656e30204e465473557365722068617320616c72656164792077697468647261776e20736f6d652062616c616e63655472616e73616374696f6e2063616e206f6e6c7920626520706572666f6d6564206279207468652072656c61796572536f727279212054686973205374616d70206973206e6f742063757272656e746c7920617661696c61626c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564596f7520646f6e74206861766520616e79206f75747374616e64696e672062616c616e636520746f2077697468647261775072697a6520706f7420697320616c6d6f737420656d70747920736f206974206973206e6f206c6f6e67657220706f737369626c6520746f2073656c6c207374616d7073475245415445525f4f525f455155414c5f544f5f32305f4c454e4754485f5245515549524544a265627a7a723158208eb390e03390687f12f997021b9358e0a89ce0c91c137afba9b0666f5b41e91264736f6c634300050b0032",
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang",
    "optimizer": {},
    "evmVersion": "constantinople"
  },
  "networks": {
    "4": {
      "links": {},
      "events": {},
      "address": "0x71e2dDf639016d1Cb0fcdd3c751732889A7aD438",
      "updated_at": 1565739253860
    },
    "1565736289861": {
      "links": {},
      "events": {},
      "address": "0xD69D30b8E288eCd1B1fD635218076326cC68F15d",
      "updated_at": 1565736358554
    }
  }
}
