{
  "fileName": "ERC721Metadata.sol",
  "contractName": "ERC721Metadata",
  "source": "pragma solidity ^0.5.2;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"../../introspection/ERC165.sol\";\n\ncontract ERC721Metadata is Initializable, ERC165, ERC721, IERC721Metadata {\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n    /*\n     * 0x5b5e139f ===\n     *     bytes4(keccak256('name()')) ^\n     *     bytes4(keccak256('symbol()')) ^\n     *     bytes4(keccak256('tokenURI(uint256)'))\n     */\n\n    /**\n     * @dev Constructor function\n     */\n    function initialize(string memory name, string memory symbol) public initializer {\n        require(ERC721._hasBeenInitialized());\n\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n    }\n\n    function _hasBeenInitialized() internal view returns (bool) {\n        return supportsInterface(_INTERFACE_ID_ERC721_METADATA);\n    }\n\n    /**\n     * @dev Gets the token name\n     * @return string representing the token name\n     */\n    function name() external view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol\n     * @return string representing the token symbol\n     */\n    function symbol() external view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns an URI for a given token ID\n     * Throws if the token ID does not exist. May return an empty string.\n     * @param tokenId uint256 ID of the token to query\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\n        require(_exists(tokenId));\n        return _tokenURIs[tokenId];\n    }\n\n    /**\n     * @dev Internal function to set the token URI for a given token\n     * Reverts if the token ID does not exist\n     * @param tokenId uint256 ID of the token to set its URI\n     * @param uri string URI to assign\n     */\n    function _setTokenURI(uint256 tokenId, string memory uri) internal {\n        require(_exists(tokenId));\n        _tokenURIs[tokenId] = uri;\n    }\n\n    /**\n     * @dev Internal function to burn a specific token\n     * Reverts if the token does not exist\n     * Deprecated, use _burn(uint256) instead\n     * @param owner owner of the token to burn\n     * @param tokenId uint256 ID of the token being burned by the msg.sender\n     */\n    function _burn(address owner, uint256 tokenId) internal {\n        super._burn(owner, tokenId);\n\n        // Clear metadata (if any)\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
  "sourceMap": "183:2698:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;183:2698:11;;;;;;;;;;",
  "deployedSourceMap": "183:2698:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;183:2698:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:131:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;870:131:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1304:83:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;1304:83:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4027:151:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4027:151:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3450:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3450:292:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5583:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5583:180:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6396:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6396:132:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;741:321:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;741:321:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;741:321:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;741:321:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;741:321:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;741:321:11;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;741:321:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;741:321:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;741:321:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;741:321:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;2852:177:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2852:177:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2474:160;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2474:160:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1937:205;;;:::i;:::-;;1495:87:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;1495:87:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4470:213:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4470:213:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7233:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7233:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7233:211:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7233:211:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7233:211:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7233:211:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;1781:151:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1781:151:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;1781:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5004:145:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5004:145:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;870:131:6;938:4;961:20;;;:33;982:11;961:33;;;;;;;;;;;;;;;;;;;;;;;;;;;954:40;;;;870:131;;;;:::o;1304:83:11:-;1343:13;1375:5;;;1368:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:83;;:::o;4027:151:10:-;4086:7;4113:16;4121:7;4113;:16;;:::i;:::-;4105:25;;;;;;;;4147:15;;;:24;4163:7;4147:24;;;;;;;;;;;;;;;;;;;;;4140:31;;;;4027:151;;;;:::o;3450:292::-;3513:13;3529:16;3537:7;3529;:16;;:::i;:::-;3513:32;;3569:5;3563:11;;:2;:11;;;;3555:20;;;;;;;;3607:5;3593:19;;:10;:19;;;:58;;;;3616:35;3633:5;3640:10;3616:16;:35;;:::i;:::-;3593:58;3585:67;;;;;;;;3690:2;3663:15;;;:24;3679:7;3663:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3727:7;3723:2;3707:28;;3716:5;3707:28;;;;;;;;;;;;3450:292;;;;:::o;5583:180::-;5673:39;5692:10;5704:7;5673:18;:39;;:::i;:::-;5665:48;;;;;;;;5724:32;5738:4;5744:2;5748:7;5724:13;:32;;:::i;:::-;5583:180;;;;:::o;6396:132::-;6482:39;6499:4;6505:2;6509:7;6482:39;;;;;;;;;;;;;;:16;:39;;:::i;:::-;6396:132;;;;:::o;741:321:11:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;840:28:11;:26;:28;;:::i;:::-;832:37;;;;;;;;888:4;880:5;;:12;;;;;;;;;;;;;:::i;:::-;;912:6;902:7;;:16;;;;;;;;;;;;;:::i;:::-;;1006:49;504:10;1025:29;;1006:18;:49;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:321:11;;;;:::o;2852:177:10:-;2907:7;2926:13;2942:11;;;:20;2954:7;2942:20;;;;;;;;;;;;;;;;;;;;;2926:36;;2997:1;2980:19;;:5;:19;;;;2972:28;;;;;;;;3017:5;3010:12;;;;;2852:177;;;;;:::o;2474:160::-;2529:7;2573:1;2556:19;;:5;:19;;;;2548:28;;;;;;;;2593:34;:17;;;:24;2611:5;2593:24;;;;;;;;;;;;;;;;;:32;;:34;;;:::i;:::-;2586:41;;;;2474:160;;;;:::o;1937:205::-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1988:19:10;:17;:19;;:::i;:::-;2095:40;1303:10;2114:20;;2095:18;:40;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1937:205:10;;:::o;1495:87:11:-;1536:13;1568:7;;;1561:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1495:87;;:::o;4470:213:10:-;4555:10;4549:16;;:2;:16;;;;4541:25;;;;;;;;4613:8;4576:18;;;:30;4595:10;4576:30;;;;;;;;;;;;;;;;;:34;4607:2;4576:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4663:2;4636:40;;4651:10;4636:40;;;4667:8;4636:40;;;;;;;;;;;;;;;;;;;;;;4470:213;;;:::o;7233:211::-;7339:31;7352:4;7358:2;7362:7;7339:12;:31;;:::i;:::-;7388:48;7411:4;7417:2;7421:7;7430:5;7388:22;:48;;:::i;:::-;7380:57;;;;;;;;7233:211;;;;;:::o;1781:151:11:-;1839:13;1872:16;1880:7;1872;:16;;:::i;:::-;1864:25;;;;;;;;1906:10;;;:19;1917:7;1906:19;;;;;;;;;;;;;1899:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1781:151;;;;:::o;5004:145:10:-;5084:4;5107:18;;;:25;5126:5;5107:25;;;;;;;;;;;;;;;;;:35;5133:8;5107:35;;;;;;;;;;;;;;;;;;;;;;;;;5100:42;;;;5004:145;;;;;:::o;7638:152::-;7695:4;7711:13;7727:11;;;:20;7739:7;7727:20;;;;;;;;;;;;;;;;;;;;;7711:36;;7781:1;7764:19;;:5;:19;;;;7757:26;;;;;7638:152;;;;;:::o;8150:246::-;8235:4;8251:13;8267:16;8275:7;8267;:16;;:::i;:::-;8251:32;;8312:5;8301:16;;:7;:16;;;:51;;;;8345:7;8321:31;;:20;8333:7;8321:11;:20;;:::i;:::-;:31;;;8301:51;:87;;;;8356:32;8373:5;8380:7;8356:16;:32;;:::i;:::-;8301:87;8293:96;;;;;8150:246;;;;;;:::o;10098:362::-;10211:4;10191:24;;:16;10199:7;10191;:16;;:::i;:::-;:24;;;10183:33;;;;;;;;10248:1;10234:16;;:2;:16;;;;10226:25;;;;;;;;10262:23;10277:7;10262:14;:23;;:::i;:::-;10296:35;:17;;;:23;10314:4;10296:23;;;;;;;;;;;;;;;;;:33;;:35;;;:::i;:::-;10341:33;:17;;;:21;10359:2;10341:21;;;;;;;;;;;;;;;;;:31;;:33;;;:::i;:::-;10408:2;10385:11;;;:20;10397:7;10385:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10445:7;10441:2;10426:27;;10435:4;10426:27;;;;;;;;;;;;10098:362;;;;:::o;1409:467:17:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;;;1409:467;;;:::o;2148:123:10:-;2202:4;2225:39;1303:10;2243:20;;2225:17;:39;;:::i;:::-;2218:46;;;;2148:123;;:::o;1080:158:6:-;1170:10;1155:25;;:11;:25;;;;;1147:34;;;;;;;;1227:4;1191:20;;;:33;1212:11;1191:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1080:158;;:::o;1062:112:5:-;1127:7;1153;:14;;;;;1146:21;;;;1062:112;;;;:::o;681:98:6:-;1024:12:17;;;;;;;;;;;:31;;;;1040:15;:13;:15;;:::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;732:40:6;312:10;751:20;;732:18;:40;;:::i;:::-;1256:1:17;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;681:98:6;;:::o;10988:347:10:-;11109:4;11134:15;:2;:13;;;;:15;;;:::i;:::-;11133:16;11129:58;;;11172:4;11165:11;;;;11129:58;11197:13;11229:2;11213:36;;;11250:10;11262:4;11268:7;11277:5;11213:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;8:100;52:2;49:1;45:10;40:15;;8:100;;;12:14;11213:70:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11213:70:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11213:70:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11213:70:10;;;;;;;;;;;;;;;;11197:86;;789:10;11311:16;;11301:26;;;:6;:26;;;;11293:35;;;;;10988:347;;;;;;;;:::o;11496:171::-;11595:1;11559:38;;:15;;;:24;11575:7;11559:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11555:106;;;11648:1;11613:15;;;:24;11629:7;11613:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11555:106;11496:171;;:::o;1275:108:5:-;1355:21;1374:1;1355:7;:14;;;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;;:38;;;;;;;1275:108;;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;;;;;1180:89;;:::o;463:616:16:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;;;463:616;;;;;:::o;1211:145:9:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;;;1211:145;;;;;;:::o;183:2698:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "constant": true,
      "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
      "name": "supportsInterface",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
      "name": "getApproved",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "from", "type": "address" },
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "from", "type": "address" },
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "string", "name": "name", "type": "string" },
        { "internalType": "string", "name": "symbol", "type": "string" }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
      "name": "ownerOf",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
      "name": "balanceOf",
      "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "bool", "name": "approved", "type": "bool" }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        { "internalType": "address", "name": "from", "type": "address" },
        { "internalType": "address", "name": "to", "type": "address" },
        { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
        { "internalType": "bytes", "name": "_data", "type": "bytes" }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
      "name": "tokenURI",
      "outputs": [{ "internalType": "string", "name": "", "type": "string" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        { "internalType": "address", "name": "owner", "type": "address" },
        { "internalType": "address", "name": "operator", "type": "address" }
      ],
      "name": "isApprovedForAll",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
        { "indexed": true, "internalType": "address", "name": "to", "type": "address" },
        { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        { "indexed": true, "internalType": "address", "name": "owner", "type": "address" },
        { "indexed": true, "internalType": "address", "name": "approved", "type": "address" },
        { "indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256" }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        { "indexed": true, "internalType": "address", "name": "owner", "type": "address" },
        { "indexed": true, "internalType": "address", "name": "operator", "type": "address" },
        { "indexed": false, "internalType": "bool", "name": "approved", "type": "bool" }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "ast": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
    "exportedSymbols": { "ERC721Metadata": [1974] },
    "id": 1975,
    "nodeType": "SourceUnit",
    "nodes": [
      { "id": 1824, "literals": ["solidity", "^", "0.5", ".2"], "nodeType": "PragmaDirective", "src": "0:23:11" },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 1825,
        "nodeType": "ImportDirective",
        "scope": 1975,
        "sourceUnit": 2275,
        "src": "25:60:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1826,
        "nodeType": "ImportDirective",
        "scope": 1975,
        "sourceUnit": 1823,
        "src": "86:22:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 1827,
        "nodeType": "ImportDirective",
        "scope": 1975,
        "sourceUnit": 2177,
        "src": "109:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol",
        "file": "../../introspection/ERC165.sol",
        "id": 1828,
        "nodeType": "ImportDirective",
        "scope": 1975,
        "sourceUnit": 1016,
        "src": "141:40:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1829,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2274,
              "src": "210:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2274",
                "typeString": "contract Initializable"
              }
            },
            "id": 1830,
            "nodeType": "InheritanceSpecifier",
            "src": "210:13:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1831,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "225:6:11",
              "typeDescriptions": { "typeIdentifier": "t_contract$_ERC165_$1015", "typeString": "contract ERC165" }
            },
            "id": 1832,
            "nodeType": "InheritanceSpecifier",
            "src": "225:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1833,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1822,
              "src": "233:6:11",
              "typeDescriptions": { "typeIdentifier": "t_contract$_ERC721_$1822", "typeString": "contract ERC721" }
            },
            "id": 1834,
            "nodeType": "InheritanceSpecifier",
            "src": "233:6:11"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1835,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2176,
              "src": "241:15:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$2176",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 1836,
            "nodeType": "InheritanceSpecifier",
            "src": "241:15:11"
          }
        ],
        "contractDependencies": [1015, 1025, 1822, 2150, 2176, 2274],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1974,
        "linearizedBaseContracts": [1974, 2176, 1822, 2150, 1015, 1025, 2274],
        "name": "ERC721Metadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1838,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 1974,
            "src": "281:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string" },
            "typeName": {
              "id": 1837,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "281:6:11",
              "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1840,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1974,
            "src": "328:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string" },
            "typeName": {
              "id": 1839,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "328:6:11",
              "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1844,
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "scope": 1974,
            "src": "396:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 1843,
              "keyType": {
                "id": 1841,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:11",
                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
              },
              "nodeType": "Mapping",
              "src": "396:26:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 1842,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "415:6:11",
                "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1847,
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "scope": 1974,
            "src": "448:66:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
            "typeName": {
              "id": 1845,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "448:6:11",
              "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 1846,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "504:10:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1874,
              "nodeType": "Block",
              "src": "822:240:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1857,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1822,
                            "src": "840:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1822_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1326,
                          "src": "840:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "840:28:11",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "id": 1856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4120,
                      "src": "832:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:37:11",
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "832:37:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1862,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1838,
                      "src": "880:5:11",
                      "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1863,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "888:4:11",
                      "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                    },
                    "src": "880:12:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                  },
                  "id": 1865,
                  "nodeType": "ExpressionStatement",
                  "src": "880:12:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1866,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1840,
                      "src": "902:7:11",
                      "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1867,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "912:6:11",
                      "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                    },
                    "src": "902:16:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                  },
                  "id": 1869,
                  "nodeType": "ExpressionStatement",
                  "src": "902:16:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1871,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "1025:29:11",
                        "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bytes4", "typeString": "bytes4" }],
                      "id": 1870,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1010,
                      "src": "1006:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:49:11",
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 1873,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:49:11"
                }
              ]
            },
            "documentation": "@dev Constructor function",
            "id": 1875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1854,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1853,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2255,
                  "src": "810:11:11",
                  "typeDescriptions": { "typeIdentifier": "t_modifier$__$", "typeString": "modifier ()" }
                },
                "nodeType": "ModifierInvocation",
                "src": "810:11:11"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1849,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1875,
                  "src": "761:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 1848,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:6:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1851,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1875,
                  "src": "781:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 1850,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "760:42:11"
            },
            "returnParameters": { "id": 1855, "nodeType": "ParameterList", "parameters": [], "src": "822:0:11" },
            "scope": 1974,
            "src": "741:321:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1884,
              "nodeType": "Block",
              "src": "1128:72:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1881,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1847,
                        "src": "1163:29:11",
                        "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bytes4", "typeString": "bytes4" }],
                      "id": 1880,
                      "name": "supportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "1145:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 1882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:48:11",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "functionReturnParameters": 1879,
                  "id": 1883,
                  "nodeType": "Return",
                  "src": "1138:55:11"
                }
              ]
            },
            "documentation": null,
            "id": 1885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasBeenInitialized",
            "nodeType": "FunctionDefinition",
            "parameters": { "id": 1876, "nodeType": "ParameterList", "parameters": [], "src": "1096:2:11" },
            "returnParameters": {
              "id": 1879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "1122:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 1877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:4:11",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1121:6:11"
            },
            "scope": 1974,
            "src": "1068:132:11",
            "stateMutability": "view",
            "superFunction": 1326,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1892,
              "nodeType": "Block",
              "src": "1358:29:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1890,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1838,
                    "src": "1375:5:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                  },
                  "functionReturnParameters": 1889,
                  "id": 1891,
                  "nodeType": "Return",
                  "src": "1368:12:11"
                }
              ]
            },
            "documentation": "@dev Gets the token name\n@return string representing the token name",
            "id": 1893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": { "id": 1886, "nodeType": "ParameterList", "parameters": [], "src": "1317:2:11" },
            "returnParameters": {
              "id": 1889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1893,
                  "src": "1343:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 1887,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:6:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1342:15:11"
            },
            "scope": 1974,
            "src": "1304:83:11",
            "stateMutability": "view",
            "superFunction": 2163,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1900,
              "nodeType": "Block",
              "src": "1551:31:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1898,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1840,
                    "src": "1568:7:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                  },
                  "functionReturnParameters": 1897,
                  "id": 1899,
                  "nodeType": "Return",
                  "src": "1561:14:11"
                }
              ]
            },
            "documentation": "@dev Gets the token symbol\n@return string representing the token symbol",
            "id": 1901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": { "id": 1894, "nodeType": "ParameterList", "parameters": [], "src": "1510:2:11" },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1896,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1901,
                  "src": "1536:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 1895,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:6:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1535:15:11"
            },
            "scope": 1974,
            "src": "1495:87:11",
            "stateMutability": "view",
            "superFunction": 2168,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1918,
              "nodeType": "Block",
              "src": "1854:78:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1910,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "1880:7:11",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                          "id": 1909,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1570,
                          "src": "1872:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1872:16:11",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "id": 1908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4120,
                      "src": "1864:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1864:25:11",
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 1913,
                  "nodeType": "ExpressionStatement",
                  "src": "1864:25:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1914,
                      "name": "_tokenURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1844,
                      "src": "1906:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 1916,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1915,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1903,
                      "src": "1917:7:11",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1906:19:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                  },
                  "functionReturnParameters": 1907,
                  "id": 1917,
                  "nodeType": "Return",
                  "src": "1899:26:11"
                }
              ]
            },
            "documentation": "@dev Returns an URI for a given token ID\nThrows if the token ID does not exist. May return an empty string.\n@param tokenId uint256 ID of the token to query",
            "id": 1919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1903,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "1799:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 1902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:11",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1798:17:11"
            },
            "returnParameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "1839:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 1905,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:6:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1838:15:11"
            },
            "scope": 1974,
            "src": "1781:151:11",
            "stateMutability": "view",
            "superFunction": 2175,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1938,
              "nodeType": "Block",
              "src": "2236:77:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1928,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1921,
                            "src": "2262:7:11",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                          "id": 1927,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1570,
                          "src": "2254:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:16:11",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "id": 1926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4120, 4121],
                      "referencedDeclaration": 4120,
                      "src": "2246:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:25:11",
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 1931,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:25:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1932,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "2281:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 1934,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1933,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1921,
                        "src": "2292:7:11",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2281:19:11",
                      "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1935,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1923,
                      "src": "2303:3:11",
                      "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                    },
                    "src": "2281:25:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                  },
                  "id": 1937,
                  "nodeType": "ExpressionStatement",
                  "src": "2281:25:11"
                }
              ]
            },
            "documentation": "@dev Internal function to set the token URI for a given token\nReverts if the token ID does not exist\n@param tokenId uint256 ID of the token to set its URI\n@param uri string URI to assign",
            "id": 1939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1921,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "2191:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 1920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:11",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1923,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1939,
                  "src": "2208:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 1922,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:6:11",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2190:36:11"
            },
            "returnParameters": { "id": 1925, "nodeType": "ParameterList", "parameters": [], "src": "2236:0:11" },
            "scope": 1974,
            "src": "2169:144:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1968,
              "nodeType": "Block",
              "src": "2659:184:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1949,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1941,
                        "src": "2681:5:11",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1950,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1943,
                        "src": "2688:7:11",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1946,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4164,
                        "src": "2669:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721Metadata_$1974",
                          "typeString": "contract super ERC721Metadata"
                        }
                      },
                      "id": 1948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1687,
                      "src": "2669:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:27:11",
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 1952,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:27:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1954,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1844,
                              "src": "2752:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1956,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1955,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1943,
                              "src": "2763:7:11",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2752:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_string_storage", "typeString": "string storage ref" }
                          ],
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2746:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2746:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 1958,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2746:33:11",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2783:1:11",
                      "subdenomination": null,
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "2746:38:11",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "falseBody": null,
                  "id": 1967,
                  "nodeType": "IfStatement",
                  "src": "2742:95:11",
                  "trueBody": {
                    "id": 1966,
                    "nodeType": "Block",
                    "src": "2786:51:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2800:26:11",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1961,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1844,
                              "src": "2807:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 1963,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1962,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1943,
                              "src": "2818:7:11",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2807:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1965,
                        "nodeType": "ExpressionStatement",
                        "src": "2800:26:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Internal function to burn a specific token\nReverts if the token does not exist\nDeprecated, use _burn(uint256) instead\n@param owner owner of the token to burn\n@param tokenId uint256 ID of the token being burned by the msg.sender",
            "id": 1969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1941,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "2618:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1943,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "2633:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 1942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:11",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2617:32:11"
            },
            "returnParameters": { "id": 1945, "nodeType": "ParameterList", "parameters": [], "src": "2659:0:11" },
            "scope": 1974,
            "src": "2603:240:11",
            "stateMutability": "nonpayable",
            "superFunction": 1687,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1973,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1974,
            "src": "2849:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_array$_t_uint256_$50_storage", "typeString": "uint256[50]" },
            "typeName": {
              "baseType": {
                "id": 1970,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:11",
                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
              },
              "id": 1972,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1971,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2857:2:11",
                "subdenomination": null,
                "typeDescriptions": { "typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50" },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2849:11:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1975,
        "src": "183:2698:11"
      }
    ],
    "src": "0:2882:11"
  },
  "bytecode": "",
  "deployedBytecode": "",
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang",
    "optimizer": {},
    "evmVersion": "constantinople"
  },
  "networks": {}
}
